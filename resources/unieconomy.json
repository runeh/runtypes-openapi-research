{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "CustomValues": {
      "properties": null,
      "type": "object"
    },
    "AuditLog": {
      "properties": {
        "ClientID": {
          "type": "string"
        },
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "NewValue": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "OldValue": {
          "type": "string"
        },
        "Field": {
          "type": "string",
          "maxLength": 255
        },
        "Verb": {
          "type": "string",
          "maxLength": 255
        },
        "Action": {
          "type": "string",
          "maxLength": 255
        },
        "Transaction": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Route": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WorkBalance": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Balancetype": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ValidFrom": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsStartBalance": {
          "type": "boolean"
        },
        "Days": {
          "type": "double"
        },
        "ValidTimeOff": {
          "type": "integer"
        },
        "BalanceFrom": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "BalanceDate": {
          "type": "date"
        },
        "Minutes": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WorkRelationID": {
          "type": "integer"
        },
        "ActualMinutes": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 120
        },
        "ExpectedMinutes": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Worker": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EmployeeID": {
          "type": "integer"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Info": {
          "$ref": "#/definitions/BusinessRelation"
        },
        "Relations": {
          "items": {
            "$ref": "#/definitions/WorkRelation"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WorkItem": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "WorkItemGroupID": {
          "type": "integer"
        },
        "TransferedToOrder": {
          "type": "boolean"
        },
        "Date": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "MinutesToOrder": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "LunchInMinutes": {
          "type": "integer"
        },
        "CustomerID": {
          "type": "integer"
        },
        "Label": {
          "type": "string",
          "maxLength": 50
        },
        "Invoiceable": {
          "type": "boolean"
        },
        "WorkTypeID": {
          "type": "integer"
        },
        "StartTime": {
          "type": "date"
        },
        "TransferedToPayroll": {
          "type": "boolean"
        },
        "Minutes": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WorkRelationID": {
          "type": "integer"
        },
        "CustomerOrderID": {
          "type": "integer"
        },
        "OrderItemId": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "PriceExVat": {
          "type": "double"
        },
        "PayrollTrackingID": {
          "type": "integer"
        },
        "EndTime": {
          "type": "date"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WorkItemGroup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WorkRelationID": {
          "type": "integer"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/WorkItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WorkProfile": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "MinutesPerWeek": {
          "type": "integer"
        },
        "MinutesPerYear": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "IsShared": {
          "type": "boolean"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "MinutesPerMonth": {
          "type": "integer"
        },
        "LunchIncluded": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WorkRelation": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "IsPrivate": {
          "type": "boolean"
        },
        "IsActive": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "WorkProfileID": {
          "type": "integer"
        },
        "CompanyName": {
          "type": "string",
          "maxLength": 50
        },
        "StartDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "WorkPercentage": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WorkerID": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 120
        },
        "EndTime": {
          "type": "date"
        },
        "TeamID": {
          "type": "integer"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/WorkItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WorkTimeOff": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "TimeoffType": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsHalfDay": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "RegionKey": {
          "type": "string",
          "maxLength": 50
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WorkRelationID": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 120
        },
        "SystemKey": {
          "type": "string",
          "maxLength": 20
        },
        "FromDate": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WorkType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Price": {
          "type": "double"
        },
        "SystemType": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "ProductID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WagetypeNumber": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 200
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankFile": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Accountnumber": {
          "type": "string",
          "maxLength": 100
        },
        "FileID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ParentFileid": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SubCompanyID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "File": {
          "$ref": "#/definitions/File"
        },
        "SubCompany": {
          "$ref": "#/definitions/SubCompany"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BatchInvoice": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "OurRef": {
          "type": "string",
          "maxLength": 255
        },
        "SellerID": {
          "type": "integer"
        },
        "Operation": {
          "type": "string"
        },
        "NotifyEmail": {
          "type": "boolean"
        },
        "FreeTxt": {
          "type": "string",
          "maxLength": 500
        },
        "CopyFromEntityId": {
          "type": "integer"
        },
        "InvoiceDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Processed": {
          "type": "integer"
        },
        "DueDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "NumberOfBatches": {
          "type": "integer"
        },
        "MinAmount": {
          "type": "double"
        },
        "YourRef": {
          "type": "string",
          "maxLength": 255
        },
        "TotalToProcess": {
          "type": "integer"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/BatchInvoiceItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BatchInvoiceItem": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "BatchNumber": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "BatchInvoiceID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "string"
        },
        "CustomerID": {
          "type": "integer"
        },
        "CommentID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomerOrderID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CampaignTemplate": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityName": {
          "type": "string",
          "maxLength": 255
        },
        "ExpandEntities": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Template": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "RespondToEmail": {
          "type": "string"
        },
        "BodyTemplate": {
          "type": "string"
        },
        "SubjectTemplate": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Customer": {
      "properties": {
        "AvtaleGiroNotification": {
          "type": "boolean"
        },
        "CreditDays": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "DefaultCustomerQuoteReportID": {
          "type": "integer"
        },
        "DefaultCustomerInvoiceReportID": {
          "type": "integer"
        },
        "Localization": {
          "type": "string",
          "maxLength": 10
        },
        "IsPrivate": {
          "type": "boolean"
        },
        "GLN": {
          "type": "string",
          "maxLength": 13
        },
        "CreatedBy": {
          "type": "string"
        },
        "PaymentTermsID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EfakturaIdentifier": {
          "type": "string",
          "maxLength": 100
        },
        "FactoringNumber": {
          "type": "integer"
        },
        "DefaultSellerID": {
          "type": "integer"
        },
        "AvtaleGiro": {
          "type": "boolean"
        },
        "PeppolAddress": {
          "type": "string",
          "maxLength": 50
        },
        "DimensionsID": {
          "type": "integer"
        },
        "DeliveryTermsID": {
          "type": "integer"
        },
        "SubAccountNumberSeriesID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CustomerNumber": {
          "type": "integer"
        },
        "AcceptableDelta4CustomerPaymentAccountID": {
          "type": "integer"
        },
        "EInvoiceAgreementReference": {
          "type": "string",
          "maxLength": 50
        },
        "CustomerNumberKidAlias": {
          "type": "string",
          "maxLength": 255
        },
        "DefaultDistributionsID": {
          "type": "integer"
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "OrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "SocialSecurityNumber": {
          "type": "string",
          "maxLength": 20
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WebUrl": {
          "type": "string",
          "maxLength": 255
        },
        "DontSendReminders": {
          "type": "boolean"
        },
        "ReminderEmailAddress": {
          "type": "string",
          "maxLength": 255
        },
        "DefaultCustomerOrderReportID": {
          "type": "integer"
        },
        "AcceptableDelta4CustomerPayment": {
          "type": "double"
        },
        "Info": {
          "$ref": "#/definitions/BusinessRelation"
        },
        "Distributions": {
          "$ref": "#/definitions/Distributions"
        },
        "PaymentTerms": {
          "$ref": "#/definitions/Terms"
        },
        "DeliveryTerms": {
          "$ref": "#/definitions/Terms"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomerQuotes": {
          "items": {
            "$ref": "#/definitions/CustomerQuote"
          },
          "type": "array"
        },
        "CustomerOrders": {
          "items": {
            "$ref": "#/definitions/CustomerOrder"
          },
          "type": "array"
        },
        "CustomerInvoices": {
          "items": {
            "$ref": "#/definitions/CustomerInvoice"
          },
          "type": "array"
        },
        "DefaultSeller": {
          "$ref": "#/definitions/Seller"
        },
        "Sellers": {
          "items": {
            "$ref": "#/definitions/SellerLink"
          },
          "type": "array"
        },
        "Companies": {
          "items": {
            "$ref": "#/definitions/SubCompany"
          },
          "type": "array"
        },
        "Account": {
          "$ref": "#/definitions/Account"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerInvoice": {
      "properties": {
        "InternalNote": {
          "type": "string",
          "maxLength": 500
        },
        "Requisition": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceType": {
          "type": "integer"
        },
        "AccrualID": {
          "type": "integer"
        },
        "CreditDays": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "OurReference": {
          "type": "string",
          "maxLength": 255
        },
        "ID": {
          "type": "integer"
        },
        "InvoicePostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "DeliveryMethod": {
          "type": "string",
          "maxLength": 100
        },
        "Payment": {
          "type": "string",
          "maxLength": 100
        },
        "TaxExclusiveAmount": {
          "type": "double"
        },
        "ShippingCountry": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceNumber": {
          "type": "string",
          "maxLength": 100
        },
        "UpdateCurrencyAmountsOnDateChange": {
          "type": "boolean"
        },
        "ShippingAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "SupplierOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "TaxInclusiveAmount": {
          "type": "double"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "ShippingPostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "CustomerName": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "PaymentTermsID": {
          "type": "integer"
        },
        "InvoiceCountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceCountry": {
          "type": "string",
          "maxLength": 100
        },
        "CreatedAt": {
          "type": "date"
        },
        "Credited": {
          "type": "boolean"
        },
        "YourReference": {
          "type": "string",
          "maxLength": 255
        },
        "ShippingCity": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceNumberSeriesID": {
          "type": "integer"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "DefaultSellerID": {
          "type": "integer"
        },
        "VatTotalsAmountCurrency": {
          "type": "double"
        },
        "ShippingCountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "PaymentDueDate": {
          "type": "date"
        },
        "PaymentID": {
          "type": "string",
          "maxLength": 100
        },
        "DeliveryTerm": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceReceiverName": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "PayableRoundingAmount": {
          "type": "double"
        },
        "FreeTxt": {
          "type": "string",
          "maxLength": 500
        },
        "DeliveryTermsID": {
          "type": "integer"
        },
        "CustomerPerson": {
          "type": "string",
          "maxLength": 255
        },
        "TaxInclusiveAmountCurrency": {
          "type": "double"
        },
        "InvoiceDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ExternalDebtCollectionNotes": {
          "type": "string",
          "maxLength": 255
        },
        "CollectorStatusCode": {
          "type": "integer"
        },
        "VatTotalsAmount": {
          "type": "double"
        },
        "LastPaymentDate": {
          "type": "date"
        },
        "BankAccountID": {
          "type": "integer"
        },
        "RestAmount": {
          "type": "double"
        },
        "PrintStatus": {
          "type": "integer"
        },
        "DeliveryName": {
          "type": "string",
          "maxLength": 255
        },
        "CustomerID": {
          "type": "integer"
        },
        "PayableRoundingCurrencyAmount": {
          "type": "double"
        },
        "TaxExclusiveAmountCurrency": {
          "type": "double"
        },
        "CustomerOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "ShippingAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "SalesPerson": {
          "type": "string",
          "maxLength": 255
        },
        "ExternalDebtCollectionReference": {
          "type": "string",
          "maxLength": 50
        },
        "PaymentInfoTypeID": {
          "type": "integer"
        },
        "InvoiceAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "ExternalReference": {
          "type": "string",
          "maxLength": 20
        },
        "ExternalStatus": {
          "type": "integer"
        },
        "AmountRegards": {
          "type": "string",
          "maxLength": 255
        },
        "PaymentInformation": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ExternalDebtCollectionUrl": {
          "type": "string"
        },
        "DistributionPlanID": {
          "type": "integer"
        },
        "UseReportID": {
          "type": "integer"
        },
        "DefaultDimensionsID": {
          "type": "integer"
        },
        "DeliveryDate": {
          "type": "date"
        },
        "CreditedAmount": {
          "type": "double"
        },
        "CreditedAmountCurrency": {
          "type": "double"
        },
        "RestAmountCurrency": {
          "type": "double"
        },
        "DontSendReminders": {
          "type": "boolean"
        },
        "InvoiceCity": {
          "type": "string",
          "maxLength": 100
        },
        "PaymentTerm": {
          "type": "string",
          "maxLength": 100
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "ShippingAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "EmailAddress": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceReferenceID": {
          "type": "integer"
        },
        "InvoiceAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "Payments": {
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "type": "array"
        },
        "PaymentTerms": {
          "$ref": "#/definitions/Terms"
        },
        "DeliveryTerms": {
          "$ref": "#/definitions/Terms"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/CustomerInvoiceItem"
          },
          "type": "array"
        },
        "DefaultDimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Accrual": {
          "$ref": "#/definitions/Accrual"
        },
        "DefaultSeller": {
          "$ref": "#/definitions/Seller"
        },
        "CustomerInvoiceReminders": {
          "items": {
            "$ref": "#/definitions/CustomerInvoiceReminder"
          },
          "type": "array"
        },
        "Sellers": {
          "items": {
            "$ref": "#/definitions/SellerLink"
          },
          "type": "array"
        },
        "DistributionPlan": {
          "$ref": "#/definitions/DistributionPlan"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerInvoiceItem": {
      "properties": {
        "CalculateGrossPriceBasedOnNetPrice": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "ItemText": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "SumVatCurrency": {
          "type": "double"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "SumTotalExVatCurrency": {
          "type": "double"
        },
        "SortIndex": {
          "type": "integer"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "DiscountPercent": {
          "type": "double"
        },
        "NumberOfItems": {
          "type": "double"
        },
        "CostPrice": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "PriceExVatCurrency": {
          "type": "double"
        },
        "DiscountCurrency": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SumTotalIncVat": {
          "type": "double"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "InvoicePeriodStartDate": {
          "type": "date"
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "PriceSetByUser": {
          "type": "boolean"
        },
        "ItemSourceID": {
          "type": "integer"
        },
        "Discount": {
          "type": "double"
        },
        "SumVat": {
          "type": "double"
        },
        "ProductID": {
          "type": "integer"
        },
        "InvoicePeriodEndDate": {
          "type": "date"
        },
        "SumTotalIncVatCurrency": {
          "type": "double"
        },
        "SumTotalExVat": {
          "type": "double"
        },
        "Unit": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PriceIncVat": {
          "type": "double"
        },
        "AccountingCost": {
          "type": "string",
          "maxLength": 255
        },
        "AccountID": {
          "type": "integer"
        },
        "PriceExVat": {
          "type": "double"
        },
        "VatPercent": {
          "type": "double"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "ItemSource": {
          "$ref": "#/definitions/ItemSource"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerInvoiceReminder": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "RemindedDate": {
          "type": "date"
        },
        "Notified": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "InterestFee": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CreatedByReminderRuleID": {
          "type": "integer"
        },
        "InterestFeeCurrency": {
          "type": "double"
        },
        "DebtCollectionFee": {
          "type": "double"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "ReminderFee": {
          "type": "double"
        },
        "ReminderFeeCurrency": {
          "type": "double"
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "RestAmount": {
          "type": "double"
        },
        "DueDate": {
          "type": "date"
        },
        "ReminderNumber": {
          "type": "integer"
        },
        "DebtCollectionFeeCurrency": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ReminderRuleType": {
          "type": "integer"
        },
        "RestAmountCurrency": {
          "type": "double"
        },
        "Description": {
          "type": "string",
          "maxLength": 1000
        },
        "Title": {
          "type": "string",
          "maxLength": 100
        },
        "RunNumber": {
          "type": "integer"
        },
        "EmailAddress": {
          "type": "string",
          "maxLength": 255
        },
        "Payments": {
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerInvoiceReminderRule": {
      "properties": {
        "CreditDays": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ReminderFee": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "DistributeAutomatically": {
          "type": "boolean"
        },
        "ReminderNumber": {
          "type": "integer"
        },
        "UseMaximumLegalReminderFee": {
          "type": "boolean"
        },
        "CustomerInvoiceReminderSettingsID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ReminderRuleType": {
          "type": "integer"
        },
        "RunAutomatically": {
          "type": "boolean"
        },
        "MinimumDaysFromDueDate": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 1000
        },
        "Title": {
          "type": "string",
          "maxLength": 100
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerInvoiceReminderSettings": {
      "properties": {
        "RuleSetType": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "RemindersBeforeDebtCollection": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "DebtCollectionSettingsID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "AcceptPaymentWithoutReminderFee": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "DefaultReminderFeeAccountID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "MinimumAmountToRemind": {
          "type": "double"
        },
        "UseReminderRuleTextsInEmails": {
          "type": "boolean"
        },
        "CustomerInvoiceReminderRules": {
          "items": {
            "$ref": "#/definitions/CustomerInvoiceReminderRule"
          },
          "type": "array"
        },
        "DebtCollectionSettings": {
          "$ref": "#/definitions/DebtCollectionSettings"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerOrder": {
      "properties": {
        "InternalNote": {
          "type": "string",
          "maxLength": 500
        },
        "Requisition": {
          "type": "string",
          "maxLength": 255
        },
        "AccrualID": {
          "type": "integer"
        },
        "CreditDays": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "OurReference": {
          "type": "string",
          "maxLength": 255
        },
        "ID": {
          "type": "integer"
        },
        "InvoicePostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "DeliveryMethod": {
          "type": "string",
          "maxLength": 100
        },
        "TaxExclusiveAmount": {
          "type": "double"
        },
        "ShippingCountry": {
          "type": "string",
          "maxLength": 100
        },
        "UpdateCurrencyAmountsOnDateChange": {
          "type": "boolean"
        },
        "ShippingAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "SupplierOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "TaxInclusiveAmount": {
          "type": "double"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "ShippingPostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "CustomerName": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "RestExclusiveAmountCurrency": {
          "type": "double"
        },
        "PaymentTermsID": {
          "type": "integer"
        },
        "InvoiceCountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceCountry": {
          "type": "string",
          "maxLength": 100
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdateCurrencyOnToInvoice": {
          "type": "boolean"
        },
        "YourReference": {
          "type": "string",
          "maxLength": 255
        },
        "ShippingCity": {
          "type": "string",
          "maxLength": 100
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "DefaultSellerID": {
          "type": "integer"
        },
        "VatTotalsAmountCurrency": {
          "type": "double"
        },
        "ShippingCountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "DeliveryTerm": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceReceiverName": {
          "type": "string",
          "maxLength": 255
        },
        "OrderNumber": {
          "type": "integer"
        },
        "InvoiceAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "PayableRoundingAmount": {
          "type": "double"
        },
        "FreeTxt": {
          "type": "string",
          "maxLength": 500
        },
        "DeliveryTermsID": {
          "type": "integer"
        },
        "CustomerPerson": {
          "type": "string",
          "maxLength": 255
        },
        "TaxInclusiveAmountCurrency": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "VatTotalsAmount": {
          "type": "double"
        },
        "ReadyToInvoice": {
          "type": "boolean"
        },
        "PrintStatus": {
          "type": "integer"
        },
        "DeliveryName": {
          "type": "string",
          "maxLength": 255
        },
        "CustomerID": {
          "type": "integer"
        },
        "PayableRoundingCurrencyAmount": {
          "type": "double"
        },
        "TaxExclusiveAmountCurrency": {
          "type": "double"
        },
        "CustomerOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "ShippingAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "SalesPerson": {
          "type": "string",
          "maxLength": 255
        },
        "PaymentInfoTypeID": {
          "type": "integer"
        },
        "InvoiceAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "OrderDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DistributionPlanID": {
          "type": "integer"
        },
        "UseReportID": {
          "type": "integer"
        },
        "DefaultDimensionsID": {
          "type": "integer"
        },
        "DeliveryDate": {
          "type": "date"
        },
        "OrderNumberSeriesID": {
          "type": "integer"
        },
        "RestAmountCurrency": {
          "type": "double"
        },
        "InvoiceCity": {
          "type": "string",
          "maxLength": 100
        },
        "PaymentTerm": {
          "type": "string",
          "maxLength": 100
        },
        "ShippingAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "EmailAddress": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "Accrual": {
          "$ref": "#/definitions/Accrual"
        },
        "PaymentTerms": {
          "$ref": "#/definitions/Terms"
        },
        "DeliveryTerms": {
          "$ref": "#/definitions/Terms"
        },
        "DefaultDimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/CustomerOrderItem"
          },
          "type": "array"
        },
        "DefaultSeller": {
          "$ref": "#/definitions/Seller"
        },
        "Sellers": {
          "items": {
            "$ref": "#/definitions/SellerLink"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerOrderItem": {
      "properties": {
        "CalculateGrossPriceBasedOnNetPrice": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "ItemText": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "SumVatCurrency": {
          "type": "double"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "SumTotalExVatCurrency": {
          "type": "double"
        },
        "SortIndex": {
          "type": "integer"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "DiscountPercent": {
          "type": "double"
        },
        "NumberOfItems": {
          "type": "double"
        },
        "CostPrice": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "PriceExVatCurrency": {
          "type": "double"
        },
        "DiscountCurrency": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SumTotalIncVat": {
          "type": "double"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "PriceSetByUser": {
          "type": "boolean"
        },
        "ReadyToInvoice": {
          "type": "boolean"
        },
        "ItemSourceID": {
          "type": "integer"
        },
        "Discount": {
          "type": "double"
        },
        "SumVat": {
          "type": "double"
        },
        "ProductID": {
          "type": "integer"
        },
        "SumTotalIncVatCurrency": {
          "type": "double"
        },
        "SumTotalExVat": {
          "type": "double"
        },
        "Unit": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PriceIncVat": {
          "type": "double"
        },
        "CustomerOrderID": {
          "type": "integer"
        },
        "AccountID": {
          "type": "integer"
        },
        "PriceExVat": {
          "type": "double"
        },
        "VatPercent": {
          "type": "double"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "ItemSource": {
          "$ref": "#/definitions/ItemSource"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerQuote": {
      "properties": {
        "InternalNote": {
          "type": "string",
          "maxLength": 500
        },
        "Requisition": {
          "type": "string",
          "maxLength": 255
        },
        "CreditDays": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "OurReference": {
          "type": "string",
          "maxLength": 255
        },
        "ID": {
          "type": "integer"
        },
        "InvoicePostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "DeliveryMethod": {
          "type": "string",
          "maxLength": 100
        },
        "TaxExclusiveAmount": {
          "type": "double"
        },
        "ShippingCountry": {
          "type": "string",
          "maxLength": 100
        },
        "UpdateCurrencyAmountsOnDateChange": {
          "type": "boolean"
        },
        "ShippingAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "SupplierOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "TaxInclusiveAmount": {
          "type": "double"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "ShippingPostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "CustomerName": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "PaymentTermsID": {
          "type": "integer"
        },
        "InvoiceCountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceCountry": {
          "type": "string",
          "maxLength": 100
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdateCurrencyOnToInvoice": {
          "type": "boolean"
        },
        "YourReference": {
          "type": "string",
          "maxLength": 255
        },
        "ShippingCity": {
          "type": "string",
          "maxLength": 100
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "QuoteNumber": {
          "type": "integer"
        },
        "DefaultSellerID": {
          "type": "integer"
        },
        "VatTotalsAmountCurrency": {
          "type": "double"
        },
        "ShippingCountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "DeliveryTerm": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceReceiverName": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "PayableRoundingAmount": {
          "type": "double"
        },
        "FreeTxt": {
          "type": "string",
          "maxLength": 500
        },
        "DeliveryTermsID": {
          "type": "integer"
        },
        "CustomerPerson": {
          "type": "string",
          "maxLength": 255
        },
        "TaxInclusiveAmountCurrency": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "VatTotalsAmount": {
          "type": "double"
        },
        "PrintStatus": {
          "type": "integer"
        },
        "DeliveryName": {
          "type": "string",
          "maxLength": 255
        },
        "CustomerID": {
          "type": "integer"
        },
        "PayableRoundingCurrencyAmount": {
          "type": "double"
        },
        "TaxExclusiveAmountCurrency": {
          "type": "double"
        },
        "CustomerOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "ShippingAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "SalesPerson": {
          "type": "string",
          "maxLength": 255
        },
        "UpdateCurrencyOnToOrder": {
          "type": "boolean"
        },
        "ValidUntilDate": {
          "type": "date"
        },
        "PaymentInfoTypeID": {
          "type": "integer"
        },
        "InvoiceAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "QuoteDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DistributionPlanID": {
          "type": "integer"
        },
        "UseReportID": {
          "type": "integer"
        },
        "DefaultDimensionsID": {
          "type": "integer"
        },
        "QuoteNumberSeriesID": {
          "type": "integer"
        },
        "DeliveryDate": {
          "type": "date"
        },
        "InvoiceCity": {
          "type": "string",
          "maxLength": 100
        },
        "InquiryReference": {
          "type": "integer"
        },
        "PaymentTerm": {
          "type": "string",
          "maxLength": 100
        },
        "ShippingAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "EmailAddress": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "PaymentTerms": {
          "$ref": "#/definitions/Terms"
        },
        "DeliveryTerms": {
          "$ref": "#/definitions/Terms"
        },
        "DefaultDimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/CustomerQuoteItem"
          },
          "type": "array"
        },
        "DefaultSeller": {
          "$ref": "#/definitions/Seller"
        },
        "Sellers": {
          "items": {
            "$ref": "#/definitions/SellerLink"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerQuoteItem": {
      "properties": {
        "CalculateGrossPriceBasedOnNetPrice": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "ItemText": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "SumVatCurrency": {
          "type": "double"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "CustomerQuoteID": {
          "type": "integer"
        },
        "SumTotalExVatCurrency": {
          "type": "double"
        },
        "SortIndex": {
          "type": "integer"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "DiscountPercent": {
          "type": "double"
        },
        "NumberOfItems": {
          "type": "double"
        },
        "CostPrice": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "PriceExVatCurrency": {
          "type": "double"
        },
        "DiscountCurrency": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SumTotalIncVat": {
          "type": "double"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "PriceSetByUser": {
          "type": "boolean"
        },
        "Discount": {
          "type": "double"
        },
        "SumVat": {
          "type": "double"
        },
        "ProductID": {
          "type": "integer"
        },
        "SumTotalIncVatCurrency": {
          "type": "double"
        },
        "SumTotalExVat": {
          "type": "double"
        },
        "Unit": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PriceIncVat": {
          "type": "double"
        },
        "AccountID": {
          "type": "integer"
        },
        "PriceExVat": {
          "type": "double"
        },
        "VatPercent": {
          "type": "double"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DebtCollectionSettings": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreditorNumber": {
          "type": "integer"
        },
        "DebtCollectionAutomationID": {
          "type": "integer"
        },
        "IntegrateWithDebtCollection": {
          "type": "boolean"
        },
        "DebtCollectionFormat": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CustomerInvoiceReminderSettingsID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ItemSource": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Details": {
          "items": {
            "$ref": "#/definitions/ItemSourceDetail"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ItemSourceDetail": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SourceType": {
          "type": "string",
          "maxLength": 50
        },
        "StatusCode": {
          "type": "integer"
        },
        "ItemSourceID": {
          "type": "integer"
        },
        "SourceFK": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 200
        },
        "Tag": {
          "type": "string",
          "maxLength": 50
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PaymentInfoType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Locked": {
          "type": "boolean"
        },
        "Control": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Length": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "PaymentInfoTypeParts": {
          "items": {
            "$ref": "#/definitions/PaymentInfoTypePart"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PaymentInfoTypePart": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SortIndex": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Part": {
          "type": "string",
          "maxLength": 200
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Length": {
          "type": "integer"
        },
        "PaymentInfoTypeID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "RecurringInvoice": {
      "properties": {
        "InternalNote": {
          "type": "string",
          "maxLength": 500
        },
        "Requisition": {
          "type": "string",
          "maxLength": 255
        },
        "CreditDays": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "OurReference": {
          "type": "string",
          "maxLength": 255
        },
        "ID": {
          "type": "integer"
        },
        "InvoicePostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "DeliveryMethod": {
          "type": "string",
          "maxLength": 100
        },
        "NotifyWhenOrdersArePrepared": {
          "type": "boolean"
        },
        "Payment": {
          "type": "string",
          "maxLength": 100
        },
        "PreparationDays": {
          "type": "integer"
        },
        "TaxExclusiveAmount": {
          "type": "double"
        },
        "ShippingCountry": {
          "type": "string",
          "maxLength": 100
        },
        "UpdateCurrencyAmountsOnDateChange": {
          "type": "boolean"
        },
        "ShippingAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "SupplierOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "TaxInclusiveAmount": {
          "type": "double"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "ShippingPostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "CustomerName": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "NextInvoiceDate": {
          "type": "date"
        },
        "PaymentTermsID": {
          "type": "integer"
        },
        "InvoiceCountryCode": {
          "type": "string",
          "maxLength": 10
        },
        "InvoiceCountry": {
          "type": "string",
          "maxLength": 100
        },
        "CreatedAt": {
          "type": "date"
        },
        "TimePeriod": {
          "type": "string"
        },
        "YourReference": {
          "type": "string",
          "maxLength": 255
        },
        "ShippingCity": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceNumberSeriesID": {
          "type": "integer"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "ProduceAs": {
          "type": "string"
        },
        "DefaultSellerID": {
          "type": "integer"
        },
        "VatTotalsAmountCurrency": {
          "type": "double"
        },
        "ShippingCountryCode": {
          "type": "string",
          "maxLength": 10
        },
        "DeliveryTerm": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceReceiverName": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "PayableRoundingAmount": {
          "type": "double"
        },
        "StartDate": {
          "type": "date"
        },
        "FreeTxt": {
          "type": "string",
          "maxLength": 500
        },
        "DeliveryTermsID": {
          "type": "integer"
        },
        "CustomerPerson": {
          "type": "string",
          "maxLength": 255
        },
        "TaxInclusiveAmountCurrency": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "VatTotalsAmount": {
          "type": "double"
        },
        "PrintStatus": {
          "type": "integer"
        },
        "DeliveryName": {
          "type": "string",
          "maxLength": 255
        },
        "CustomerID": {
          "type": "integer"
        },
        "PayableRoundingCurrencyAmount": {
          "type": "double"
        },
        "TaxExclusiveAmountCurrency": {
          "type": "double"
        },
        "CustomerOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "ShippingAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "EndDate": {
          "type": "date"
        },
        "SalesPerson": {
          "type": "string",
          "maxLength": 255
        },
        "NoCreditDays": {
          "type": "boolean"
        },
        "MaxIterations": {
          "type": "double"
        },
        "PaymentInfoTypeID": {
          "type": "integer"
        },
        "InvoiceAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "NotifyUser": {
          "type": "string"
        },
        "Interval": {
          "type": "double"
        },
        "AmountRegards": {
          "type": "string",
          "maxLength": 255
        },
        "PaymentInformation": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DistributionPlanID": {
          "type": "integer"
        },
        "UseReportID": {
          "type": "integer"
        },
        "DefaultDimensionsID": {
          "type": "integer"
        },
        "DeliveryDate": {
          "type": "date"
        },
        "InvoiceCity": {
          "type": "string",
          "maxLength": 100
        },
        "NotifyWhenRecurringEnds": {
          "type": "boolean"
        },
        "PaymentTerm": {
          "type": "string",
          "maxLength": 100
        },
        "ShippingAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "EmailAddress": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "PaymentTerms": {
          "$ref": "#/definitions/Terms"
        },
        "DeliveryTerms": {
          "$ref": "#/definitions/Terms"
        },
        "Customer": {
          "$ref": "#/definitions/Customer"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/RecurringInvoiceItem"
          },
          "type": "array"
        },
        "DefaultDimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "DefaultSeller": {
          "$ref": "#/definitions/Seller"
        },
        "Sellers": {
          "items": {
            "$ref": "#/definitions/SellerLink"
          },
          "type": "array"
        },
        "DistributionPlan": {
          "$ref": "#/definitions/DistributionPlan"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "RecurringInvoiceItem": {
      "properties": {
        "CalculateGrossPriceBasedOnNetPrice": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "ItemText": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "SumVatCurrency": {
          "type": "double"
        },
        "TimeFactor": {
          "type": "string"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "SumTotalExVatCurrency": {
          "type": "double"
        },
        "SortIndex": {
          "type": "integer"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "DiscountPercent": {
          "type": "double"
        },
        "NumberOfItems": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "PriceExVatCurrency": {
          "type": "double"
        },
        "DiscountCurrency": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SumTotalIncVat": {
          "type": "double"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "RecurringInvoiceID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "PriceSetByUser": {
          "type": "boolean"
        },
        "Discount": {
          "type": "double"
        },
        "SumVat": {
          "type": "double"
        },
        "ReduceIncompletePeriod": {
          "type": "boolean"
        },
        "ProductID": {
          "type": "integer"
        },
        "PricingSource": {
          "type": "string"
        },
        "SumTotalIncVatCurrency": {
          "type": "double"
        },
        "SumTotalExVat": {
          "type": "double"
        },
        "Unit": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PriceIncVat": {
          "type": "double"
        },
        "AccountID": {
          "type": "integer"
        },
        "PriceExVat": {
          "type": "double"
        },
        "VatPercent": {
          "type": "double"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "RecurringInvoiceLog": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Comment": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "NotifiedOrdersPrepared": {
          "type": "boolean"
        },
        "InvoiceID": {
          "type": "integer"
        },
        "RecurringInvoiceID": {
          "type": "integer"
        },
        "InvoiceDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CreationDate": {
          "type": "date"
        },
        "IterationNumber": {
          "type": "integer"
        },
        "OrderID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "NotifiedRecurringEnds": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Seller": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EmployeeID": {
          "type": "integer"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 30
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DefaultDimensionsID": {
          "type": "integer"
        },
        "TeamID": {
          "type": "integer"
        },
        "DefaultDimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SellerLink": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CustomerQuoteID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SellerID": {
          "type": "integer"
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "RecurringInvoiceID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CustomerID": {
          "type": "integer"
        },
        "Percent": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomerOrderID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SubCompany": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CompanyKey": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "CompanyName": {
          "type": "string",
          "maxLength": 100
        },
        "StatusCode": {
          "type": "integer"
        },
        "CustomerID": {
          "type": "integer"
        },
        "CompanyType": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Customer": {
          "$ref": "#/definitions/Customer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Supplier": {
      "properties": {
        "CreditDays": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "Localization": {
          "type": "string",
          "maxLength": 10
        },
        "GLN": {
          "type": "string",
          "maxLength": 13
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PeppolAddress": {
          "type": "string",
          "maxLength": 50
        },
        "DimensionsID": {
          "type": "integer"
        },
        "SubAccountNumberSeriesID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SupplierNumber": {
          "type": "integer"
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "OrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "CostAllocationID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SelfEmployed": {
          "type": "boolean"
        },
        "WebUrl": {
          "type": "string",
          "maxLength": 255
        },
        "Info": {
          "$ref": "#/definitions/BusinessRelation"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CostAllocation": {
          "$ref": "#/definitions/CostAllocation"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Terms": {
      "properties": {
        "CreditDays": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 30
        },
        "TermsType": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TOFCurrencySettings": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "UpdateCurrencyAmountsOnOrderToInvoice": {
          "type": "boolean"
        },
        "UpdateCurrencyAmountsOnInvoicedateChange": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdateCurrencyAmountsOnQuoteToOrder": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdateCurrencyAmountsOnQuoteToInvoice": {
          "type": "boolean"
        },
        "UpdateCurrencyAmountsOnQuotedateChange": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "UpdateCurrencyAmountsOnOrderdateChange": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Address": {
      "properties": {
        "Region": {
          "type": "string",
          "maxLength": 100
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "AddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "City": {
          "type": "string",
          "maxLength": 100
        },
        "PostalCode": {
          "type": "string",
          "maxLength": 100
        },
        "AddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "Country": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "BusinessRelation": {
          "$ref": "#/definitions/BusinessRelation"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BusinessRelation": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ShippingAddressID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DefaultEmailID": {
          "type": "integer"
        },
        "DefaultBankAccountID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "DefaultContactID": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceAddressID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DefaultPhoneID": {
          "type": "integer"
        },
        "DefaultContact": {
          "$ref": "#/definitions/Contact"
        },
        "Contacts": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "Addresses": {
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        },
        "Phones": {
          "items": {
            "$ref": "#/definitions/Phone"
          },
          "type": "array"
        },
        "Emails": {
          "items": {
            "$ref": "#/definitions/Email"
          },
          "type": "array"
        },
        "BankAccounts": {
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "type": "array"
        },
        "InvoiceAddress": {
          "$ref": "#/definitions/Address"
        },
        "ShippingAddress": {
          "$ref": "#/definitions/Address"
        },
        "DefaultPhone": {
          "$ref": "#/definitions/Phone"
        },
        "DefaultEmail": {
          "$ref": "#/definitions/Email"
        },
        "DefaultBankAccount": {
          "$ref": "#/definitions/BankAccount"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Contact": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ParentBusinessRelationID": {
          "type": "integer"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "InfoID": {
          "type": "integer"
        },
        "Role": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ParentBusinessRelation": {
          "$ref": "#/definitions/BusinessRelation"
        },
        "Info": {
          "$ref": "#/definitions/BusinessRelation"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Email": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string",
          "maxLength": 100
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "EmailAddress": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Phone": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Number": {
          "type": "string",
          "maxLength": 25
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CountryCode": {
          "type": "string",
          "maxLength": 10
        },
        "StatusCode": {
          "type": "integer"
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AGACalculation": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PayrollRunID": {
          "type": "integer"
        },
        "freeAmountUsed": {
          "items": {
            "$ref": "#/definitions/FreeAmountUsed"
          },
          "type": "array"
        },
        "agaTax": {
          "items": {
            "$ref": "#/definitions/AGATax"
          },
          "type": "array"
        },
        "agaDraw": {
          "items": {
            "$ref": "#/definitions/AGADraw"
          },
          "type": "array"
        },
        "agaPension": {
          "items": {
            "$ref": "#/definitions/AGAPension"
          },
          "type": "array"
        },
        "foreignerWithPercent": {
          "items": {
            "$ref": "#/definitions/ForeignerWithPercent"
          },
          "type": "array"
        },
        "drawForeignerWithPercent": {
          "items": {
            "$ref": "#/definitions/DrawForeignerWithPercent"
          },
          "type": "array"
        },
        "foreignerWithAmount": {
          "items": {
            "$ref": "#/definitions/ForeignerWithAmount"
          },
          "type": "array"
        },
        "payrollRun": {
          "$ref": "#/definitions/PayrollRun"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FreeAmountUsed": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AGACalculationID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "freeAmount": {
          "type": "double"
        },
        "SubEntityID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "subEntity": {
          "$ref": "#/definitions/SubEntity"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AGATax": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AGACalculationID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "agaRate": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AGARateID": {
          "type": "integer"
        },
        "SubEntityID": {
          "type": "integer"
        },
        "zone": {
          "type": "integer"
        },
        "agaBase": {
          "type": "double"
        },
        "beregningsKode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "subEntity": {
          "$ref": "#/definitions/SubEntity"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AGAPension": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AGACalculationID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "agaRate": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AGARateID": {
          "type": "integer"
        },
        "SubEntityID": {
          "type": "integer"
        },
        "zone": {
          "type": "integer"
        },
        "agaBase": {
          "type": "double"
        },
        "beregningsKode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "subEntity": {
          "$ref": "#/definitions/SubEntity"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AGADraw": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AGACalculationID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "agaRate": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AGARateID": {
          "type": "integer"
        },
        "SubEntityID": {
          "type": "integer"
        },
        "zone": {
          "type": "integer"
        },
        "agaBase": {
          "type": "double"
        },
        "beregningsKode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "subEntity": {
          "$ref": "#/definitions/SubEntity"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ForeignerWithPercent": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AGACalculationID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "agaRate": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SubEntityID": {
          "type": "integer"
        },
        "agaBase": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "subEntity": {
          "$ref": "#/definitions/SubEntity"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DrawForeignerWithPercent": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AGACalculationID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "agaRate": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SubEntityID": {
          "type": "integer"
        },
        "agaBase": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "subEntity": {
          "$ref": "#/definitions/SubEntity"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ForeignerWithAmount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "aga": {
          "type": "double"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AGACalculationID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SubEntityID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "persons": {
          "type": "integer"
        },
        "subEntity": {
          "$ref": "#/definitions/SubEntity"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TaxAndAgaSums": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "GarnishmentTax": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "WithholdingTax": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "FinancialTax": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AmeldingData": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "messageID": {
          "type": "string",
          "maxLength": 256
        },
        "CreatedAt": {
          "type": "date"
        },
        "feedbackFileID": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "created": {
          "type": "date"
        },
        "period": {
          "type": "integer"
        },
        "initiated": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "attachmentFileID": {
          "type": "integer"
        },
        "OppgaveHash": {
          "type": "string",
          "maxLength": 256
        },
        "year": {
          "type": "integer"
        },
        "altinnStatus": {
          "type": "string",
          "maxLength": 255
        },
        "sent": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PayrollRunID": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "mainFileID": {
          "type": "integer"
        },
        "replacesID": {
          "type": "integer"
        },
        "receiptID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AmeldingLog": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "key": {
          "type": "integer"
        },
        "registry": {
          "type": "string"
        },
        "AmeldingsID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BasicAmount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AveragePrYear": {
          "type": "double"
        },
        "BasicAmountPrYear": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ConversionFactor": {
          "type": "double"
        },
        "BasicAmountPrMonth": {
          "type": "double"
        },
        "FromDate": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanySalary": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "MainAccountAllocatedVacation": {
          "type": "integer"
        },
        "Base_JanMayenAndBiCountries": {
          "type": "boolean"
        },
        "Base_NettoPayment": {
          "type": "boolean"
        },
        "PaymentInterval": {
          "type": "string"
        },
        "Base_Svalbard": {
          "type": "boolean"
        },
        "InterrimRemitAccount": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "WagetypeAdvancePaymentAuto": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "OtpExportActive": {
          "type": "boolean"
        },
        "Base_PayAsYouEarnTaxOnPensions": {
          "type": "boolean"
        },
        "WageDeductionDueToHoliday": {
          "type": "string"
        },
        "MainAccountAllocatedFinancialVacation": {
          "type": "integer"
        },
        "MainAccountAllocatedAGA": {
          "type": "integer"
        },
        "WagetypeAdvancePayment": {
          "type": "integer"
        },
        "RateFinancialTax": {
          "type": "double"
        },
        "PaycheckZipReportID": {
          "type": "integer"
        },
        "CalculateFinancialTax": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "MainAccountAllocatedFinancial": {
          "type": "integer"
        },
        "HourFTEs": {
          "type": "double"
        },
        "Base_TaxFreeOrganization": {
          "type": "boolean"
        },
        "AnnualStatementZipReportID": {
          "type": "integer"
        },
        "PostToTaxDraw": {
          "type": "boolean"
        },
        "AllowOver6G": {
          "type": "boolean"
        },
        "Base_NettoPaymentForMaritim": {
          "type": "boolean"
        },
        "FreeAmount": {
          "type": "double"
        },
        "MainAccountCostFinancial": {
          "type": "integer"
        },
        "HoursPerMonth": {
          "type": "double"
        },
        "Base_SpesialDeductionForMaritim": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PostGarnishmentToTaxAccount": {
          "type": "boolean"
        },
        "MainAccountCostFinancialVacation": {
          "type": "integer"
        },
        "MainAccountCostAGA": {
          "type": "integer"
        },
        "MainAccountCostAGAVacation": {
          "type": "integer"
        },
        "MainAccountCostVacation": {
          "type": "integer"
        },
        "MainAccountAllocatedAGAVacation": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanyVacationRate": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Rate60": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Rate": {
          "type": "double"
        },
        "FromDate": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmployeeCategory": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "EmployeeCategoryLinkID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmployeeCategoryLink": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EmployeeID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "EmployeeNumber": {
          "type": "integer"
        },
        "EmployeeCategoryID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Employee": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "PaymentInterval": {
          "type": "string"
        },
        "AdvancePaymentAmount": {
          "type": "double"
        },
        "FreeText": {
          "type": "string"
        },
        "InternasjonalIDType": {
          "type": "string"
        },
        "PhotoID": {
          "type": "integer"
        },
        "ForeignWorker": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IncludeOtpUntilYear": {
          "type": "integer"
        },
        "EmployeeLanguageID": {
          "type": "integer"
        },
        "BirthDate": {
          "type": "date"
        },
        "EndDateOtp": {
          "type": "date"
        },
        "IncludeOtpUntilMonth": {
          "type": "integer"
        },
        "InternasjonalIDCountry": {
          "type": "string",
          "maxLength": 100
        },
        "UserID": {
          "type": "integer"
        },
        "InternationalID": {
          "type": "string",
          "maxLength": 100
        },
        "OtpExport": {
          "type": "boolean"
        },
        "EmploymentDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "EmploymentDateOtp": {
          "type": "date"
        },
        "OtpStatus": {
          "type": "string"
        },
        "EndDate": {
          "type": "date"
        },
        "EmployeeNumber": {
          "type": "integer"
        },
        "Sex": {
          "type": "string"
        },
        "SubEntityID": {
          "type": "integer"
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "SocialSecurityNumber": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "TypeOfPaymentOtp": {
          "type": "string"
        },
        "MunicipalityNo": {
          "type": "string",
          "maxLength": 255
        },
        "BusinessRelationInfo": {
          "$ref": "#/definitions/BusinessRelation"
        },
        "Employments": {
          "items": {
            "$ref": "#/definitions/Employment"
          },
          "type": "array"
        },
        "VacationRateEmployees": {
          "items": {
            "$ref": "#/definitions/VacationRateEmployee"
          },
          "type": "array"
        },
        "TaxCards": {
          "items": {
            "$ref": "#/definitions/EmployeeTaxCard"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmployeeTaxCard": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "loennKunTrygdeavgiftTilUtenlandskBorgerID": {
          "type": "integer"
        },
        "loennFraBiarbeidsgiverID": {
          "type": "integer"
        },
        "NonTaxableAmount": {
          "type": "double"
        },
        "NotMainEmployer": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Tilleggsopplysning": {
          "type": "string",
          "maxLength": 1024
        },
        "ResultatStatus": {
          "type": "string",
          "maxLength": 1024
        },
        "loennFraHovedarbeidsgiverID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Table": {
          "type": "string",
          "maxLength": 255
        },
        "EmployeeID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SecondaryTable": {
          "type": "string",
          "maxLength": 255
        },
        "SKDXml": {
          "type": "string"
        },
        "pensjonID": {
          "type": "integer"
        },
        "loennKunTrygdeavgiftTilUtenlandskBorgerSomGrensegjengerID": {
          "type": "integer"
        },
        "SecondaryPercent": {
          "type": "double"
        },
        "Percent": {
          "type": "double"
        },
        "EmployeeNumber": {
          "type": "integer"
        },
        "ufoereYtelserAndreID": {
          "type": "integer"
        },
        "Year": {
          "type": "integer"
        },
        "loennTilUtenrikstjenestemannID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "IssueDate": {
          "type": "date"
        },
        "TaxcardId": {
          "type": "integer"
        },
        "loennFraHovedarbeidsgiver": {
          "$ref": "#/definitions/TaxCard"
        },
        "loennFraBiarbeidsgiver": {
          "$ref": "#/definitions/TaxCard"
        },
        "pensjon": {
          "$ref": "#/definitions/TaxCard"
        },
        "loennTilUtenrikstjenestemann": {
          "$ref": "#/definitions/TaxCard"
        },
        "loennKunTrygdeavgiftTilUtenlandskBorger": {
          "$ref": "#/definitions/TaxCard"
        },
        "loennKunTrygdeavgiftTilUtenlandskBorgerSomGrensegjenger": {
          "$ref": "#/definitions/TaxCard"
        },
        "ufoereYtelserAndre": {
          "$ref": "#/definitions/TaxCard"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TaxCard": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AntallMaanederForTrekk": {
          "type": "double"
        },
        "NonTaxableAmount": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Table": {
          "type": "string",
          "maxLength": 256
        },
        "freeAmountType": {
          "type": "string"
        },
        "Percent": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "tabellType": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmployeeLeave": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AffectsOtp": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "EmploymentID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "LeaveType": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "FromDate": {
          "type": "date"
        },
        "LeavePercent": {
          "type": "double"
        },
        "Employment": {
          "$ref": "#/definitions/Employment"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Employment": {
      "properties": {
        "TradeArea": {
          "type": "string"
        },
        "LastWorkPercentChangeDate": {
          "type": "date"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "WorkingHoursScheme": {
          "type": "string"
        },
        "ShipReg": {
          "type": "string"
        },
        "RegulativeStepNr": {
          "type": "integer"
        },
        "LastSalaryChangeDate": {
          "type": "date"
        },
        "Standard": {
          "type": "boolean"
        },
        "HourRate": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "MonthRate": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserDefinedRate": {
          "type": "double"
        },
        "EmployeeID": {
          "type": "integer"
        },
        "RegulativeGroupID": {
          "type": "integer"
        },
        "StartDate": {
          "type": "date"
        },
        "RemunerationType": {
          "type": "string"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ShipType": {
          "type": "string"
        },
        "JobName": {
          "type": "string",
          "maxLength": 100
        },
        "WorkPercent": {
          "type": "double"
        },
        "EndDate": {
          "type": "date"
        },
        "EmployeeNumber": {
          "type": "integer"
        },
        "EndDateReason": {
          "type": "string"
        },
        "SubEntityID": {
          "type": "integer"
        },
        "EmploymentType": {
          "type": "string"
        },
        "HoursPerWeek": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "LedgerAccount": {
          "type": "string",
          "maxLength": 100
        },
        "TypeOfEmployment": {
          "type": "string"
        },
        "JobCode": {
          "type": "string",
          "maxLength": 100
        },
        "SeniorityDate": {
          "type": "date"
        },
        "PayGrade": {
          "type": "string",
          "maxLength": 256
        },
        "Employee": {
          "$ref": "#/definitions/Employee"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Leaves": {
          "items": {
            "$ref": "#/definitions/EmployeeLeave"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Grant": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "AffectsAGA": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "SubentityID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "FromDate": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "IncomeReportData": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "MonthlyRefund": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "EmploymentID": {
          "type": "integer"
        },
        "AltinnReceiptID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Xml": {
          "type": "string"
        },
        "Type": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "OtpExportWagetype": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WageTypeNumber": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PayrollRun": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AGAonRun": {
          "type": "double"
        },
        "FreeText": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PayDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "HolidayPayDeduction": {
          "type": "boolean"
        },
        "taxdrawfactor": {
          "type": "string"
        },
        "JournalEntryNumber": {
          "type": "string",
          "maxLength": 255
        },
        "PaycheckFileID": {
          "type": "integer"
        },
        "needsRecalc": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SettlementDate": {
          "type": "date"
        },
        "AGAFreeAmount": {
          "type": "double"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "FromDate": {
          "type": "date"
        },
        "ExcludeRecurringPosts": {
          "type": "boolean"
        },
        "transactions": {
          "items": {
            "$ref": "#/definitions/SalaryTransaction"
          },
          "type": "array"
        },
        "agacalculation": {
          "items": {
            "$ref": "#/definitions/AGACalculation"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PayrollRunCategoryLink": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "EmployeeCategoryID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PayrollRunID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PostingSummaryDraft": {
      "properties": {
        "PayrollID": {
          "type": "integer"
        },
        "ID": {
          "type": "integer"
        },
        "draftBasic": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "JobInfoID": {
          "type": "integer"
        },
        "draftWithDimsOnBalance": {
          "type": "string"
        },
        "draftWithDims": {
          "type": "string"
        },
        "statusTime": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Regulative": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "RegulativeGroupID": {
          "type": "integer"
        },
        "StartDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Steps": {
          "items": {
            "$ref": "#/definitions/RegulativeStep"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "RegulativeGroup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Regulatives": {
          "items": {
            "$ref": "#/definitions/Regulative"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "RegulativeStep": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Step": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "RegulativeID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryBalance": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SalaryBalanceTemplateID": {
          "type": "integer"
        },
        "Source": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "InstalmentType": {
          "type": "string"
        },
        "InstalmentPercent": {
          "type": "double"
        },
        "EmployeeID": {
          "type": "integer"
        },
        "Instalment": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SupplierID": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "MaxAmount": {
          "type": "double"
        },
        "EmploymentID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WageTypeNumber": {
          "type": "integer"
        },
        "MinAmount": {
          "type": "double"
        },
        "Type": {
          "type": "string"
        },
        "FromDate": {
          "type": "date"
        },
        "CreatePayment": {
          "type": "boolean"
        },
        "KID": {
          "type": "string",
          "maxLength": 255
        },
        "Transactions": {
          "items": {
            "$ref": "#/definitions/SalaryBalanceLine"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryBalanceLine": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SalaryBalanceID": {
          "type": "integer"
        },
        "Date": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "SalaryTransactionID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryBalanceTemplate": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "InstalmentType": {
          "type": "string"
        },
        "InstalmentPercent": {
          "type": "double"
        },
        "Instalment": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SupplierID": {
          "type": "integer"
        },
        "SalarytransactionDescription": {
          "type": "string",
          "maxLength": 255
        },
        "Name": {
          "type": "string",
          "maxLength": 256
        },
        "MaxAmount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WageTypeNumber": {
          "type": "integer"
        },
        "MinAmount": {
          "type": "double"
        },
        "Account": {
          "type": "integer"
        },
        "CreatePayment": {
          "type": "boolean"
        },
        "KID": {
          "type": "string",
          "maxLength": 255
        },
        "SalaryBalances": {
          "items": {
            "$ref": "#/definitions/SalaryBalance"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryTransaction": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "Text": {
          "type": "string",
          "maxLength": 100
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SalaryBalanceID": {
          "type": "integer"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "SystemType": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ChildSalaryTransactionID": {
          "type": "integer"
        },
        "recurringPostValidTo": {
          "type": "date"
        },
        "EmployeeID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "WageTypeID": {
          "type": "integer"
        },
        "TaxbasisID": {
          "type": "integer"
        },
        "Sum": {
          "type": "double"
        },
        "HolidayPayDeduction": {
          "type": "boolean"
        },
        "SalaryTransactionCarInfoID": {
          "type": "integer"
        },
        "EmployeeNumber": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "RecurringID": {
          "type": "integer"
        },
        "IsRecurringPost": {
          "type": "boolean"
        },
        "EmploymentID": {
          "type": "integer"
        },
        "calcAGA": {
          "type": "double"
        },
        "recurringPostValidFrom": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WageTypeNumber": {
          "type": "integer"
        },
        "PayrollRunID": {
          "type": "integer"
        },
        "Account": {
          "type": "integer"
        },
        "Rate": {
          "type": "double"
        },
        "FromDate": {
          "type": "date"
        },
        "MunicipalityNo": {
          "type": "string",
          "maxLength": 100
        },
        "payrollrun": {
          "$ref": "#/definitions/PayrollRun"
        },
        "Employee": {
          "$ref": "#/definitions/Employee"
        },
        "employment": {
          "$ref": "#/definitions/Employment"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Supplements": {
          "items": {
            "$ref": "#/definitions/SalaryTransactionSupplement"
          },
          "type": "array"
        },
        "Taxbasis": {
          "$ref": "#/definitions/TaxBasis"
        },
        "VatType": {
          "$ref": "#/definitions/VatType"
        },
        "CarInfo": {
          "$ref": "#/definitions/SalaryTransactionCarInfo"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryTransactionCarInfo": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "IsLongRange": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "IsElectric": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "RegistrationYear": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryTransactionSupplement": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ValueBool": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "SalaryTransactionID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ValueMoney": {
          "type": "double"
        },
        "ValueDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ValueDate2": {
          "type": "date"
        },
        "WageTypeSupplementID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ValueString": {
          "type": "string",
          "maxLength": 100
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryYear": {
      "properties": {
        "CurrentYear": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SubEntity": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "AgaRule": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AgaZone": {
          "type": "integer"
        },
        "SuperiorOrganizationID": {
          "type": "integer"
        },
        "freeAmount": {
          "type": "double"
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "OrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "MunicipalityNo": {
          "type": "string",
          "maxLength": 100
        },
        "BusinessRelationInfo": {
          "$ref": "#/definitions/BusinessRelation"
        },
        "SuperiorOrganization": {
          "$ref": "#/definitions/SubEntity"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TaxBasis": {
      "properties": {
        "DisabilityOtherBasis": {
          "type": "double"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ForeignBorderCommuterBasis": {
          "type": "double"
        },
        "PensionBasis": {
          "type": "double"
        },
        "SailorBasis": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "JanMayenBasis": {
          "type": "double"
        },
        "SalaryTransactionID": {
          "type": "integer"
        },
        "ForeignCitizenInsuranceBasis": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ChildPensionBasis": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SvalbardBasis": {
          "type": "double"
        },
        "Basis": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PensionSourcetaxBasis": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Travel": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "PersonID": {
          "type": "string",
          "maxLength": 256
        },
        "Comment": {
          "type": "string",
          "maxLength": 1024
        },
        "Email": {
          "type": "string",
          "maxLength": 512
        },
        "CreatedBy": {
          "type": "string"
        },
        "TravelIdentificator": {
          "type": "string",
          "maxLength": 256
        },
        "CreatedAt": {
          "type": "date"
        },
        "SourceSystem": {
          "type": "string",
          "maxLength": 256
        },
        "Phone": {
          "type": "string",
          "maxLength": 64
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SupplierID": {
          "type": "integer"
        },
        "State": {
          "type": "string"
        },
        "Purpose": {
          "type": "string",
          "maxLength": 1024
        },
        "Name": {
          "type": "string",
          "maxLength": 512
        },
        "EmployeeNumber": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 1024
        },
        "TravelLines": {
          "items": {
            "$ref": "#/definitions/TravelLine"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TravelLine": {
      "properties": {
        "CostType": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AccountNumber": {
          "type": "integer"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "From": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "TravelIdentificator": {
          "type": "string",
          "maxLength": 256
        },
        "CreatedAt": {
          "type": "date"
        },
        "To": {
          "type": "date"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "InvoiceAccount": {
          "type": "integer"
        },
        "LineState": {
          "type": "string"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "TypeID": {
          "type": "integer"
        },
        "TravelID": {
          "type": "integer"
        },
        "paytransID": {
          "type": "integer"
        },
        "Rate": {
          "type": "double"
        },
        "Description": {
          "type": "string",
          "maxLength": 1024
        },
        "Travel": {
          "$ref": "#/definitions/Travel"
        },
        "VatType": {
          "$ref": "#/definitions/VatType"
        },
        "travelType": {
          "$ref": "#/definitions/TravelType"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TravelType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ForeignDescription": {
          "type": "string",
          "maxLength": 256
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ForeignTypeID": {
          "type": "string",
          "maxLength": 256
        },
        "StatusCode": {
          "type": "integer"
        },
        "InvoiceAccount": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WageTypeNumber": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 256
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VacationPayLine": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ManualVacationPayBase": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EmployeeID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Year": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VacationRateEmployee": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Rate60": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EmployeeID": {
          "type": "integer"
        },
        "StartDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "EndDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Rate": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WageType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "DaysOnBoard": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "Limit_WageTypeNumber": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "RateFactor": {
          "type": "double"
        },
        "StandardWageTypeFor": {
          "type": "string"
        },
        "AccountNumber": {
          "type": "integer"
        },
        "taxtype": {
          "type": "string"
        },
        "SupplementPackage": {
          "type": "string",
          "maxLength": 255
        },
        "Systemtype": {
          "type": "string",
          "maxLength": 20
        },
        "WageTypeName": {
          "type": "string",
          "maxLength": 100
        },
        "Base_div2": {
          "type": "boolean"
        },
        "GetRateFrom": {
          "type": "string"
        },
        "IncomeType": {
          "type": "string",
          "maxLength": 100
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Benefit": {
          "type": "string",
          "maxLength": 100
        },
        "SystemRequiredWageType": {
          "type": "integer"
        },
        "Base_div3": {
          "type": "boolean"
        },
        "SpecialAgaRule": {
          "type": "string"
        },
        "Postnr": {
          "type": "string",
          "maxLength": 100
        },
        "StatusCode": {
          "type": "integer"
        },
        "Limit_value": {
          "type": "double"
        },
        "Limit_newRate": {
          "type": "double"
        },
        "Base_Payment": {
          "type": "boolean"
        },
        "HideFromPaycheck": {
          "type": "boolean"
        },
        "RatetypeColumn": {
          "type": "string"
        },
        "ValidYear": {
          "type": "integer"
        },
        "Base_EmploymentTax": {
          "type": "boolean"
        },
        "SpecialTaxHandling": {
          "type": "string"
        },
        "Base_Vacation": {
          "type": "boolean"
        },
        "AccountNumber_balance": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WageTypeNumber": {
          "type": "integer"
        },
        "FixedSalaryHolidayDeduction": {
          "type": "boolean"
        },
        "Limit_type": {
          "type": "string"
        },
        "NoNumberOfHours": {
          "type": "boolean"
        },
        "Rate": {
          "type": "double"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "SpecialTaxAndContributionsRule": {
          "type": "string"
        },
        "SupplementaryInformations": {
          "items": {
            "$ref": "#/definitions/WageTypeSupplement"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WageTypeSupplement": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ameldingType": {
          "type": "string",
          "maxLength": 128
        },
        "CreatedBy": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SuggestedValue": {
          "type": "string",
          "maxLength": 100
        },
        "StatusCode": {
          "type": "integer"
        },
        "WageTypeID": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "GetValueFromTrans": {
          "type": "boolean"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WageTypeTranslation": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "WageTypeName": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EmployeeLanguageID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "WageTypeNumber": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PensionScheme": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Identificator": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Period": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Year": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PensionSchemeSupplier": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Identificator": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "StandardPensionSchemeSupplier": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Identificator": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmployeeLanguage": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "LanguageCode": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ComponentLayout": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "BaseEntity": {
          "type": "string",
          "maxLength": 100
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Fields": {
          "items": {
            "$ref": "#/definitions/FieldLayout"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FieldLayout": {
      "properties": {
        "Section": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "Options": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 100
        },
        "Hidden": {
          "type": "boolean"
        },
        "Combo": {
          "type": "integer"
        },
        "Placement": {
          "type": "integer"
        },
        "ComponentLayoutID": {
          "type": "integer"
        },
        "Placeholder": {
          "type": "string",
          "maxLength": 500
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Property": {
          "type": "string",
          "maxLength": 100
        },
        "Legend": {
          "type": "string",
          "maxLength": 100
        },
        "StatusCode": {
          "type": "integer"
        },
        "LineBreak": {
          "type": "boolean"
        },
        "DisplayField": {
          "type": "string",
          "maxLength": 255
        },
        "Label": {
          "type": "string",
          "maxLength": 100
        },
        "Alignment": {
          "type": "string"
        },
        "FieldSet": {
          "type": "integer"
        },
        "Width": {
          "type": "string",
          "maxLength": 255
        },
        "Sectionheader": {
          "type": "string",
          "maxLength": 255
        },
        "FieldType": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "HelpText": {
          "type": "string",
          "maxLength": 100
        },
        "LookupField": {
          "type": "boolean"
        },
        "ReadOnly": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CurrencyOverride": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Source": {
          "type": "string"
        },
        "Factor": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "FromCurrencyCodeID": {
          "type": "integer"
        },
        "ExchangeRate": {
          "type": "double"
        },
        "ToCurrencyCodeID": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "FromDate": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountAssetGroup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "AssetGroupCode": {
          "type": "string"
        },
        "FromAccountNumber": {
          "type": "integer"
        },
        "ToAccountNumber": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountGroupSetup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "PlanType": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ParentID": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Parent": {
          "$ref": "#/definitions/AccountGroupSetup"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountSetup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AccountGroupSetupID": {
          "type": "integer"
        },
        "AccountNumber": {
          "type": "integer"
        },
        "Keywords": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "PlanType": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Visible": {
          "type": "boolean"
        },
        "VatCode": {
          "type": "string"
        },
        "ExpectedDebitBalance": {
          "type": "boolean"
        },
        "SaftMappingAccountID": {
          "type": "integer"
        },
        "AccountName": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "AccountGroup": {
          "$ref": "#/definitions/AccountGroupSetup"
        },
        "SaftMappingAccount": {
          "$ref": "#/definitions/SaftMappingAccount"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountVisibilityGroup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Accounts": {
          "items": {
            "$ref": "#/definitions/AccountVisibilityGroupAccount"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountVisibilityGroupAccount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "AccountSetupID": {
          "type": "integer"
        },
        "AccountVisibilityGroupID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AGARate": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ZoneID": {
          "type": "integer"
        },
        "RateValidFrom": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Rate": {
          "type": "double"
        },
        "sector": {
          "items": {
            "$ref": "#/definitions/AGASector"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AGASector": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ValidFrom": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Sector": {
          "type": "string"
        },
        "SectorID": {
          "type": "integer"
        },
        "freeAmount": {
          "type": "double"
        },
        "RateID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Rate": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AGAZone": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ZoneName": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/AGARate"
          },
          "type": "array"
        },
        "municipalsOnZone": {
          "items": {
            "$ref": "#/definitions/MunicipalAGAZone"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Agreement": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "AppliesTo": {
          "type": "integer"
        },
        "ValidFrom": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Name": {
          "type": "string"
        },
        "Template": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AltinnAccountFormLink": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AccountNumber": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Ref": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AssetGroup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "DepreciationYears": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "DepreciationRate": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string"
        },
        "ToDate": {
          "type": "date"
        },
        "Name": {
          "type": "string"
        },
        "DepreciationAccountNumber": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankIdentifierCode": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Bic": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "BankName": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "BankIdentifier": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanyType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "DefaultPlanType": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Priority": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "DefaultAccountVisibilityGroupID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Confirmation": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ContractType": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ExpirationDate": {
          "type": "date"
        },
        "SignUpReferrer": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Country": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CountryCode": {
          "type": "string"
        },
        "CurrencyRateSource": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "DefaultCurrencyCode": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Currency": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyDate": {
          "type": "date"
        },
        "Source": {
          "type": "string"
        },
        "Factor": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "FromCurrencyCodeID": {
          "type": "integer"
        },
        "ExchangeRate": {
          "type": "double"
        },
        "ToCurrencyCodeID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CurrencyCode": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string"
        },
        "ShortCode": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DebtCollectionAutomation": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "DebtCollectionSettingsID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmploymentValidValues": {
      "properties": {
        "TradeArea": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "WorkingHoursScheme": {
          "type": "boolean"
        },
        "ShipReg": {
          "type": "boolean"
        },
        "LastSalaryChangeDate": {
          "type": "boolean"
        },
        "HourRate": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "MonthRate": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserDefinedRate": {
          "type": "boolean"
        },
        "employment": {
          "type": "string"
        },
        "StartDate": {
          "type": "boolean"
        },
        "RemunerationType": {
          "type": "boolean"
        },
        "ShipType": {
          "type": "boolean"
        },
        "JobName": {
          "type": "boolean"
        },
        "WorkPercent": {
          "type": "boolean"
        },
        "LastWorkPercentChange": {
          "type": "boolean"
        },
        "EndDate": {
          "type": "boolean"
        },
        "PaymentType": {
          "type": "string"
        },
        "HoursPerWeek": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "typeOfEmployment": {
          "type": "boolean"
        },
        "JobCode": {
          "type": "boolean"
        },
        "SeniorityDate": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FinancialDeadline": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "PassableDueDate": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "AdditionalInfo": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Deadline": {
          "type": "date"
        },
        "Type": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JobTicket": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "JobStatus": {
          "type": "string"
        },
        "JobId": {
          "type": "string"
        },
        "JobName": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "GlobalIdentity": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "LanguageCode": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Municipal": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CountyName": {
          "type": "string"
        },
        "MunicipalityName": {
          "type": "string"
        },
        "Retired": {
          "type": "boolean"
        },
        "CountyNo": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "MunicipalityNo": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MunicipalAGAZone": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Startdate": {
          "type": "date"
        },
        "ZoneID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "MunicipalityNo": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PaymentBatchType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PaymentCode": {
      "properties": {
        "PaymentGroup": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PostalCode": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "City": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReconcileType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Interval": {
          "type": "string"
        },
        "ReconcileName": {
          "type": "string"
        },
        "MaxIntervalNumber": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SaftMappingAccount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "AccountID": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "StaticRegister": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Registry": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "stamp": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "STYRKCode": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "tittel": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "lnr": {
          "type": "integer"
        },
        "ynr": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "styrk": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Language": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "FallBackLanguageID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Translations": {
          "items": {
            "$ref": "#/definitions/Translation"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Translatable": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Module": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Model": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Meaning": {
          "type": "string"
        },
        "Column": {
          "type": "string"
        },
        "Static": {
          "type": "boolean"
        },
        "Description": {
          "type": "string"
        },
        "Translations": {
          "items": {
            "$ref": "#/definitions/Translation"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Translation": {
      "properties": {
        "LanguageID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Value": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "TranslatableID": {
          "type": "integer"
        },
        "Language": {
          "$ref": "#/definitions/Language"
        },
        "Translatable": {
          "$ref": "#/definitions/Translatable"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatCodeGroupSetup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "No": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatPostSetup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "HasTaxAmount": {
          "type": "boolean"
        },
        "No": {
          "type": "string"
        },
        "VatCodeGroupSetupNo": {
          "type": "string"
        },
        "HasTaxBasis": {
          "type": "boolean"
        },
        "ReportAsNegativeAmount": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportForm": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportReferenceSetup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AccountNumber": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "VatCode": {
          "type": "string"
        },
        "VatPostNo": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatTypeSetup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "VatCodeGroupNo": {
          "type": "string"
        },
        "DirectJournalEntryOnly": {
          "type": "boolean"
        },
        "OutgoingAccountNumber": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ReversedTaxDutyVat": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "date"
        },
        "VatCode": {
          "type": "string"
        },
        "DefaultVisible": {
          "type": "boolean"
        },
        "IncomingAccountNumber": {
          "type": "integer"
        },
        "IsCompensated": {
          "type": "boolean"
        },
        "OutputVat": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "IsNotVatRegistered": {
          "type": "boolean"
        },
        "VatTypeSetupPercentages": {
          "items": {
            "$ref": "#/definitions/VatTypeSetupPercentage"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatTypeSetupPercentage": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ValidFrom": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ValidTo": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "VatTypeSetupID": {
          "type": "integer"
        },
        "VatPercent": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanyReport": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CompanyKey": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ContractId": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ReportDefinitionID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReportDefinition": {
      "properties": {
        "UniqueReportID": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Category": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CategoryLabel": {
          "type": "string",
          "maxLength": 255
        },
        "TemplateLinkId": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedAt": {
          "type": "date"
        },
        "Visible": {
          "type": "boolean"
        },
        "IsStandard": {
          "type": "boolean"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "Md5": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Version": {
          "type": "string",
          "maxLength": 255
        },
        "ReportType": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "ReportSource": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReportDefinitionDataSource": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ReportDefinitionId": {
          "type": "integer"
        },
        "DataSourceUrl": {
          "type": "string",
          "maxLength": 2048
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReportDefinitionParameter": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SortIndex": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Visible": {
          "type": "boolean"
        },
        "DefaultValue": {
          "type": "string",
          "maxLength": 255
        },
        "DefaultValueLookupType": {
          "type": "string",
          "maxLength": 255
        },
        "Label": {
          "type": "string",
          "maxLength": 255
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "SearchModel": {
          "type": "string",
          "maxLength": 255
        },
        "DefaultValueList": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ReportDefinitionId": {
          "type": "integer"
        },
        "DefaultValueSource": {
          "type": "string",
          "maxLength": 255
        },
        "Type": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PeriodSeries": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SeriesType": {
          "type": "string"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PeriodTemplate": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "No": {
          "type": "integer"
        },
        "PeriodSeriesID": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "FromDate": {
          "type": "date"
        },
        "PeriodSeries": {
          "$ref": "#/definitions/PeriodSeries"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Model": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Admin": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "LabelPlural": {
          "type": "string",
          "maxLength": 255
        },
        "Shared": {
          "type": "boolean"
        },
        "Label": {
          "type": "string",
          "maxLength": 255
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "Fields": {
          "items": {
            "$ref": "#/definitions/Field"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Field": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ModelID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Label": {
          "type": "string",
          "maxLength": 255
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "HelpText": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Notification": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CompanyKey": {
          "type": "string",
          "maxLength": 255
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyName": {
          "type": "string",
          "maxLength": 255
        },
        "SenderDisplayName": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "RecipientID": {
          "type": "string"
        },
        "Message": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SourceEntityType": {
          "type": "string",
          "maxLength": 255
        },
        "SourceEntityID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanySettings": {
      "properties": {
        "FactoringEmailID": {
          "type": "integer"
        },
        "InterrimPaymentAccountID": {
          "type": "integer"
        },
        "BaseCurrencyCodeID": {
          "type": "integer"
        },
        "DefaultAddressID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "DefaultCustomerQuoteReportID": {
          "type": "integer"
        },
        "DefaultCustomerInvoiceReportID": {
          "type": "integer"
        },
        "CompanyTypeID": {
          "type": "integer"
        },
        "VatLockedDate": {
          "type": "date"
        },
        "APIncludeAttachment": {
          "type": "boolean"
        },
        "OnlyJournalMatchedPayments": {
          "type": "boolean"
        },
        "AgioGainAccountID": {
          "type": "integer"
        },
        "HideInActiveCustomers": {
          "type": "boolean"
        },
        "Localization": {
          "type": "string",
          "maxLength": 10
        },
        "LogoAlign": {
          "type": "integer"
        },
        "AutoJournalPayment": {
          "type": "string"
        },
        "PeriodSeriesVatID": {
          "type": "integer"
        },
        "InterrimRemitAccountID": {
          "type": "integer"
        },
        "GLN": {
          "type": "string",
          "maxLength": 13
        },
        "PaymentBankAgreementNumber": {
          "type": "string",
          "maxLength": 255
        },
        "UseOcrInterpretation": {
          "type": "boolean"
        },
        "TaxableFromLimit": {
          "type": "double"
        },
        "SAFTimportAccountID": {
          "type": "integer"
        },
        "CustomerCreditDays": {
          "type": "integer"
        },
        "TaxBankAccountID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "AccountingLockedDate": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SettlementVatAccountID": {
          "type": "integer"
        },
        "DefaultCustomerInvoiceReminderReportID": {
          "type": "integer"
        },
        "VatReportFormID": {
          "type": "integer"
        },
        "AccountGroupSetID": {
          "type": "integer"
        },
        "OfficeMunicipalityNo": {
          "type": "string",
          "maxLength": 255
        },
        "DefaultEmailID": {
          "type": "integer"
        },
        "UsePaymentBankValues": {
          "type": "boolean"
        },
        "TaxMandatory": {
          "type": "boolean"
        },
        "CompanyRegistered": {
          "type": "boolean"
        },
        "AccountVisibilityGroupID": {
          "type": "integer"
        },
        "EnableSendPaymentBeforeJournaled": {
          "type": "boolean"
        },
        "FactoringNumber": {
          "type": "integer"
        },
        "AutoDistributeInvoice": {
          "type": "boolean"
        },
        "APContactID": {
          "type": "integer"
        },
        "ShowNumberOfDecimals": {
          "type": "integer"
        },
        "HasAutobank": {
          "type": "boolean"
        },
        "ShowKIDOnCustomerInvoice": {
          "type": "boolean"
        },
        "NetsIntegrationActivated": {
          "type": "boolean"
        },
        "DefaultTOFCurrencySettingsID": {
          "type": "integer"
        },
        "CompanyName": {
          "type": "string",
          "maxLength": 255
        },
        "EnableArchiveSupplierInvoice": {
          "type": "boolean"
        },
        "TaxMandatoryType": {
          "type": "integer"
        },
        "UseNetsIntegration": {
          "type": "boolean"
        },
        "BankChargeAccountID": {
          "type": "integer"
        },
        "AgioLossAccountID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CompanyBankAccountID": {
          "type": "integer"
        },
        "RoundingNumberOfDecimals": {
          "type": "integer"
        },
        "UseXtraPaymentOrgXmlTag": {
          "type": "boolean"
        },
        "APActivated": {
          "type": "boolean"
        },
        "LogoHideField": {
          "type": "integer"
        },
        "AcceptableDelta4CustomerPaymentAccountID": {
          "type": "integer"
        },
        "SaveCustomersFromQuoteAsLead": {
          "type": "boolean"
        },
        "WebAddress": {
          "type": "string",
          "maxLength": 255
        },
        "DefaultSalesAccountID": {
          "type": "integer"
        },
        "EnableAdvancedJournalEntry": {
          "type": "boolean"
        },
        "RoundingType": {
          "type": "string"
        },
        "TaxableFromDate": {
          "type": "date"
        },
        "StoreDistributedInvoice": {
          "type": "boolean"
        },
        "SalaryBankAccountID": {
          "type": "integer"
        },
        "UseFinancialDateToCalculateVatPercent": {
          "type": "boolean"
        },
        "TwoStageAutobankEnabled": {
          "type": "boolean"
        },
        "DefaultDistributionsID": {
          "type": "integer"
        },
        "SupplierAccountID": {
          "type": "integer"
        },
        "APGuid": {
          "type": "string"
        },
        "EnableApprovalFlow": {
          "type": "boolean"
        },
        "ForceSupplierInvoiceApproval": {
          "type": "boolean"
        },
        "BatchInvoiceMinAmount": {
          "type": "double"
        },
        "PeriodSeriesAccountID": {
          "type": "integer"
        },
        "UseAssetRegister": {
          "type": "boolean"
        },
        "PaymentBankIdentification": {
          "type": "string",
          "maxLength": 255
        },
        "CustomerInvoiceReminderSettingsID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PersonNumber": {
          "type": "string",
          "maxLength": 20
        },
        "EnableCheckboxesForSupplierInvoiceList": {
          "type": "boolean"
        },
        "XtraPaymentOrgXmlTagValue": {
          "type": "string",
          "maxLength": 256
        },
        "DefaultPhoneID": {
          "type": "integer"
        },
        "BookCustomerInvoiceOnDeliveryDate": {
          "type": "boolean"
        },
        "OrganizationNumber": {
          "type": "string",
          "maxLength": 100
        },
        "IgnorePaymentsWithoutEndToEndID": {
          "type": "boolean"
        },
        "LogoFileID": {
          "type": "integer"
        },
        "Factoring": {
          "type": "integer"
        },
        "DefaultCustomerOrderReportID": {
          "type": "integer"
        },
        "CustomerAccountID": {
          "type": "integer"
        },
        "AllowAvtalegiroRegularInvoice": {
          "type": "boolean"
        },
        "AcceptableDelta4CustomerPayment": {
          "type": "double"
        },
        "HideInActiveSuppliers": {
          "type": "boolean"
        },
        "DefaultAccrualAccountID": {
          "type": "integer"
        },
        "DefaultAddress": {
          "$ref": "#/definitions/Address"
        },
        "DefaultPhone": {
          "$ref": "#/definitions/Phone"
        },
        "DefaultEmail": {
          "$ref": "#/definitions/Email"
        },
        "SAFTimportAccount": {
          "$ref": "#/definitions/Account"
        },
        "BankAccounts": {
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "type": "array"
        },
        "CompanyBankAccount": {
          "$ref": "#/definitions/BankAccount"
        },
        "TaxBankAccount": {
          "$ref": "#/definitions/BankAccount"
        },
        "SalaryBankAccount": {
          "$ref": "#/definitions/BankAccount"
        },
        "APContact": {
          "$ref": "#/definitions/Contact"
        },
        "APIncomming": {
          "items": {
            "$ref": "#/definitions/AccessPointFormat"
          },
          "type": "array"
        },
        "APOutgoing": {
          "items": {
            "$ref": "#/definitions/AccessPointFormat"
          },
          "type": "array"
        },
        "Distributions": {
          "$ref": "#/definitions/Distributions"
        },
        "CustomerInvoiceReminderSettings": {
          "$ref": "#/definitions/CustomerInvoiceReminderSettings"
        },
        "DefaultTOFCurrencySettings": {
          "$ref": "#/definitions/TOFCurrencySettings"
        },
        "FactoringEmail": {
          "$ref": "#/definitions/Email"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DistributionPlan": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Elements": {
          "items": {
            "$ref": "#/definitions/DistributionPlanElement"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DistributionPlanElement": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DistributionPlanElementTypeID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Priority": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DistributionPlanID": {
          "type": "integer"
        },
        "ElementType": {
          "$ref": "#/definitions/DistributionPlanElementType"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DistributionPlanElementType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "LegalEntities": {
          "items": {
            "$ref": "#/definitions/DistributionPlanElementTypeLegalEntity"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DistributionPlanElementTypeLegalEntity": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DistributionPlanElementTypeID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Distributions": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "PayCheckDistributionPlanID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CustomerInvoiceReminderDistributionPlanID": {
          "type": "integer"
        },
        "CustomerInvoiceDistributionPlanID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CustomerOrderDistributionPlanID": {
          "type": "integer"
        },
        "AnnualStatementDistributionPlanID": {
          "type": "integer"
        },
        "CustomerQuoteDistributionPlanID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomerInvoiceDistributionPlan": {
          "$ref": "#/definitions/DistributionPlan"
        },
        "CustomerOrderDistributionPlan": {
          "$ref": "#/definitions/DistributionPlan"
        },
        "CustomerQuoteDistributionPlan": {
          "$ref": "#/definitions/DistributionPlan"
        },
        "CustomerInvoiceReminderDistributionPlan": {
          "$ref": "#/definitions/DistributionPlan"
        },
        "PayCheckDistributionPlan": {
          "$ref": "#/definitions/DistributionPlan"
        },
        "AnnualStatementDistributionPlan": {
          "$ref": "#/definitions/DistributionPlan"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DistributionType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmailLog": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "From": {
          "type": "string",
          "maxLength": 255
        },
        "ExternalMessage": {
          "type": "string",
          "maxLength": 1024
        },
        "EntityDisplayValue": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "To": {
          "type": "string",
          "maxLength": 1024
        },
        "StatusCode": {
          "type": "integer"
        },
        "Subject": {
          "type": "string",
          "maxLength": 255
        },
        "JobRunExternalRef": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string",
          "maxLength": 255
        },
        "DistributeAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "JobRunID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Eventplan": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "ModelFilter": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "JobNames": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "PlanType": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Cargo": {
          "type": "string"
        },
        "IsSystemPlan": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 128
        },
        "OperationFilter": {
          "type": "string",
          "maxLength": 3
        },
        "SigningKey": {
          "type": "string",
          "maxLength": 256
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "ExpressionFilters": {
          "items": {
            "$ref": "#/definitions/ExpressionFilter"
          },
          "type": "array"
        },
        "Subscribers": {
          "items": {
            "$ref": "#/definitions/EventSubscriber"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EventSubscriber": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Authorization": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EventplanID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Endpoint": {
          "type": "string"
        },
        "Headers": {
          "type": "string"
        },
        "Name": {
          "type": "string",
          "maxLength": 128
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "Eventplan": {
          "$ref": "#/definitions/Eventplan"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ExpressionFilter": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityName": {
          "type": "string",
          "maxLength": 256
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EventplanID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Expression": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Eventplan": {
          "$ref": "#/definitions/Eventplan"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Period": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "No": {
          "type": "integer"
        },
        "PeriodSeriesID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountYear": {
          "type": "integer"
        },
        "PeriodTemplateID": {
          "type": "integer"
        },
        "FromDate": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PredefinedDescription": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ProductCategory": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Rght": {
          "type": "integer"
        },
        "Comment": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ParentID": {
          "type": "integer"
        },
        "Status": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Lft": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "Depth": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ProductCategoryLink": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ProductID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ProductCategoryID": {
          "type": "integer"
        },
        "ProductCategory": {
          "$ref": "#/definitions/ProductCategory"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Sharing": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "From": {
          "type": "string",
          "maxLength": 255
        },
        "ExternalMessage": {
          "type": "string",
          "maxLength": 1024
        },
        "EntityDisplayValue": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "To": {
          "type": "string",
          "maxLength": 1024
        },
        "StatusCode": {
          "type": "integer"
        },
        "Subject": {
          "type": "string",
          "maxLength": 255
        },
        "JobRunExternalRef": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string",
          "maxLength": 255
        },
        "DistributeAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "JobRunID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "StatusLog": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "ToStatus": {
          "type": "integer"
        },
        "FromStatus": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Tracelink": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Date": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DestinationInstanceID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SourceEntityName": {
          "type": "string",
          "maxLength": 255
        },
        "DestinationEntityName": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SourceInstanceID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "IsAutobankAdmin": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Protected": {
          "type": "boolean"
        },
        "Email": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserName": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "LastLogin": {
          "type": "date"
        },
        "PhoneNumber": {
          "type": "string",
          "maxLength": 255
        },
        "DisplayName": {
          "type": "string",
          "maxLength": 255
        },
        "BankIntegrationUserName": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "GlobalIdentity": {
          "type": "string"
        },
        "HasAgreedToImportDisclaimer": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UniQueryDefinition": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Category": {
          "type": "string",
          "maxLength": 250
        },
        "SortIndex": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ClickUrl": {
          "type": "string",
          "maxLength": 1000
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string",
          "maxLength": 250
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "IsShared": {
          "type": "boolean"
        },
        "ClickParam": {
          "type": "string",
          "maxLength": 255
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "ModuleID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 1000
        },
        "SystemGeneratedQuery": {
          "type": "boolean"
        },
        "MainModelName": {
          "type": "string",
          "maxLength": 255
        },
        "UniQueryFilters": {
          "items": {
            "$ref": "#/definitions/UniQueryFilter"
          },
          "type": "array"
        },
        "UniQueryFields": {
          "items": {
            "$ref": "#/definitions/UniQueryField"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UniQueryField": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Path": {
          "type": "string",
          "maxLength": 500
        },
        "CreatedBy": {
          "type": "string"
        },
        "Header": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedAt": {
          "type": "date"
        },
        "Index": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Field": {
          "type": "string",
          "maxLength": 255
        },
        "Alias": {
          "type": "string",
          "maxLength": 255
        },
        "Width": {
          "type": "string",
          "maxLength": 50
        },
        "UniQueryDefinitionID": {
          "type": "integer"
        },
        "FieldType": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SumFunction": {
          "type": "string",
          "maxLength": 100
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UniQueryFilter": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Value": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Operator": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "Field": {
          "type": "string",
          "maxLength": 255
        },
        "UniQueryDefinitionID": {
          "type": "integer"
        },
        "Group": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Team": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Rght": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ParentID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Lft": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "Depth": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Positions": {
          "items": {
            "$ref": "#/definitions/TeamPosition"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TeamPosition": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Position": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "RelatedSharedRoleId": {
          "type": "integer"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "ApproveOrder": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "TeamID": {
          "type": "integer"
        },
        "FromDate": {
          "type": "date"
        },
        "Team": {
          "$ref": "#/definitions/Team"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ApprovalRule": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Keywords": {
          "type": "string"
        },
        "IndustryCodes": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "RuleType": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "Steps": {
          "items": {
            "$ref": "#/definitions/ApprovalRuleStep"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ApprovalRuleStep": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "StepNumber": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ApprovalRuleID": {
          "type": "integer"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Limit": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ApprovalSubstitute": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SubstituteUserID": {
          "type": "integer"
        },
        "FromDate": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TaskApprovalPlan": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Comment": {
          "type": "string",
          "maxLength": 100
        },
        "StepNumber": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ApprovalRuleID": {
          "type": "integer"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CurrencyCode": {
          "type": "string",
          "maxLength": 255
        },
        "Limit": {
          "type": "double"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "TaskID": {
          "type": "integer"
        },
        "ApprovalID": {
          "type": "integer"
        },
        "Task": {
          "$ref": "#/definitions/Task"
        },
        "Approval": {
          "$ref": "#/definitions/Approval"
        },
        "ApprovalRule": {
          "$ref": "#/definitions/ApprovalRule"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Status": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 500
        },
        "CreatedBy": {
          "type": "string"
        },
        "Order": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsDepricated": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "System": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "StatusCategoryID": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCategory": {
          "$ref": "#/definitions/StatusCategory"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "StatusCategory": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "StatusCategoryCode": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "StatusRemark": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Remark": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Transition": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Controller": {
          "type": "string",
          "maxLength": 255
        },
        "MethodName": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TransitionThreshold": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SharedApproveTransitionId": {
          "type": "integer"
        },
        "Value": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PropertyName": {
          "type": "string",
          "maxLength": 255
        },
        "Operation": {
          "type": "string"
        },
        "Operator": {
          "type": "string"
        },
        "SharedRoleId": {
          "type": "integer"
        },
        "SharedRejectTransitionId": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Disabled": {
          "type": "boolean"
        },
        "RejectStatusCode": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TransitionThresholdApproval": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SharedApproveTransitionId": {
          "type": "integer"
        },
        "Value": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PropertyName": {
          "type": "string",
          "maxLength": 255
        },
        "Operation": {
          "type": "string"
        },
        "Operator": {
          "type": "string"
        },
        "SharedRoleId": {
          "type": "integer"
        },
        "SharedRejectTransitionId": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ApprovalID": {
          "type": "integer"
        },
        "RejectStatusCode": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Approval": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SharedRoleId": {
          "type": "integer"
        },
        "CurrencyCode": {
          "type": "string",
          "maxLength": 255
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "TaskID": {
          "type": "integer"
        },
        "Task": {
          "$ref": "#/definitions/Task"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Task": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SharedApproveTransitionId": {
          "type": "integer"
        },
        "ModelID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SharedRoleId": {
          "type": "integer"
        },
        "SharedRejectTransitionId": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Title": {
          "type": "string",
          "maxLength": 500
        },
        "RejectStatusCode": {
          "type": "integer"
        },
        "Approvals": {
          "items": {
            "$ref": "#/definitions/Approval"
          },
          "type": "array"
        },
        "ApprovalPlan": {
          "items": {
            "$ref": "#/definitions/TaskApprovalPlan"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TransitionFlow": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsDepricated": {
          "type": "boolean"
        },
        "ExpiresDate": {
          "type": "date"
        },
        "ToStatusID": {
          "type": "integer"
        },
        "TransitionID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "FromStatusID": {
          "type": "integer"
        },
        "FromStatus": {
          "$ref": "#/definitions/Status"
        },
        "ToStatus": {
          "$ref": "#/definitions/Status"
        },
        "Transition": {
          "$ref": "#/definitions/Transition"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Project": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Price": {
          "type": "double"
        },
        "ProjectNumberSeriesID": {
          "type": "integer"
        },
        "CostPrice": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ProjectLeadName": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedAt": {
          "type": "date"
        },
        "PlannedStartdate": {
          "type": "date"
        },
        "Total": {
          "type": "double"
        },
        "StartDate": {
          "type": "date"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ProjectNumber": {
          "type": "string",
          "maxLength": 255
        },
        "ProjectCustomerID": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "EndDate": {
          "type": "date"
        },
        "WorkPlaceAddressID": {
          "type": "integer"
        },
        "ProjectNumberNumeric": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "PlannedEnddate": {
          "type": "date"
        },
        "ProjectCustomer": {
          "$ref": "#/definitions/Customer"
        },
        "WorkPlaceAddress": {
          "$ref": "#/definitions/Address"
        },
        "ProjectTasks": {
          "items": {
            "$ref": "#/definitions/ProjectTask"
          },
          "type": "array"
        },
        "ProjectResources": {
          "items": {
            "$ref": "#/definitions/ProjectResource"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ProjectResource": {
      "properties": {
        "Responsibility": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ProjectID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ProjectResourceSchedule": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ProjectTaskID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ProjectTaskScheduleID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ProjectResourceID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ProjectTask": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Price": {
          "type": "double"
        },
        "Number": {
          "type": "string",
          "maxLength": 255
        },
        "CostPrice": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Total": {
          "type": "double"
        },
        "StartDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "EndDate": {
          "type": "date"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SuggestedNumber": {
          "type": "string",
          "maxLength": 255
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "ProjectID": {
          "type": "integer"
        },
        "ProjectTaskSchedules": {
          "items": {
            "$ref": "#/definitions/ProjectTaskSchedule"
          },
          "type": "array"
        },
        "ProjectTaskResources": {
          "items": {
            "$ref": "#/definitions/ProjectResourceSchedule"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ProjectTaskSchedule": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ProjectTaskID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StartDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "EndDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ScheduleResources": {
          "items": {
            "$ref": "#/definitions/ProjectResourceSchedule"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BarnepassProduct": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ProductID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/Product"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Product": {
      "properties": {
        "CalculateGrossPriceBasedOnNetPrice": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "DefaultProductCategoryID": {
          "type": "integer"
        },
        "CostPrice": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "AverageCost": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "VariansParentID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "ListPrice": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "PartName": {
          "type": "string",
          "maxLength": 255
        },
        "ImageFileID": {
          "type": "integer"
        },
        "Unit": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PriceIncVat": {
          "type": "double"
        },
        "Type": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "AccountID": {
          "type": "integer"
        },
        "PriceExVat": {
          "type": "double"
        },
        "ProductCategoryLinks": {
          "items": {
            "$ref": "#/definitions/ProductCategoryLink"
          },
          "type": "array"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "NumberSeries": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "NumberLock": {
          "type": "boolean"
        },
        "Comment": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "FromNumber": {
          "type": "integer"
        },
        "IsDefaultForTask": {
          "type": "boolean"
        },
        "NextNumber": {
          "type": "integer"
        },
        "UseNumbersFromNumberSeriesID": {
          "type": "integer"
        },
        "NumberSeriesTaskID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "System": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string",
          "maxLength": 255
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "MainAccountID": {
          "type": "integer"
        },
        "ToNumber": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountYear": {
          "type": "integer"
        },
        "Empty": {
          "type": "boolean"
        },
        "NumberSeriesTypeID": {
          "type": "integer"
        },
        "Disabled": {
          "type": "boolean"
        },
        "NumberSeriesType": {
          "$ref": "#/definitions/NumberSeriesType"
        },
        "UseNumbersFromNumberSeries": {
          "$ref": "#/definitions/NumberSeries"
        },
        "NumberSeriesTask": {
          "$ref": "#/definitions/NumberSeriesTask"
        },
        "MainAccount": {
          "$ref": "#/definitions/Account"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "NumberSeriesInvalidOverlap": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "NumberSerieTypeBID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "NumberSerieTypeAID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "NumberSerieTypeA": {
          "$ref": "#/definitions/NumberSeriesType"
        },
        "NumberSerieTypeB": {
          "$ref": "#/definitions/NumberSeriesType"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "NumberSeriesTask": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "NumberSeriesType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 100
        },
        "CanHaveSeveralActiveSeries": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "EntitySeriesIDField": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedAt": {
          "type": "date"
        },
        "Yearly": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "System": {
          "type": "boolean"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "EntityField": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Series": {
          "items": {
            "$ref": "#/definitions/NumberSeries"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EncryptionInfo": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "password": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "File": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Pages": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "PermaLink": {
          "type": "string",
          "maxLength": 1000
        },
        "StorageReference": {
          "type": "string",
          "maxLength": 255
        },
        "encryptionID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ContentType": {
          "type": "string",
          "maxLength": 255
        },
        "Size": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "Md5": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "OCRData": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "FileTags": {
          "items": {
            "$ref": "#/definitions/FileTag"
          },
          "type": "array"
        },
        "EntityLinks": {
          "items": {
            "$ref": "#/definitions/FileEntityLink"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FileTag": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "FileID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Status": {
          "type": "integer"
        },
        "TagName": {
          "type": "string",
          "maxLength": 50
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FileEntityLink": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "FileID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "IsAttachment": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "File": {
          "$ref": "#/definitions/File"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ElsaUsageLog": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Quantity": {
          "type": "integer"
        },
        "ProductType": {
          "type": "string"
        },
        "DateLogged": {
          "type": "date"
        },
        "ExternalReference": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccessPointFormat": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "IncommingID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Label": {
          "type": "string",
          "maxLength": 255
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "OutgoingID": {
          "type": "integer"
        },
        "ResourceName": {
          "type": "string",
          "maxLength": 300
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EHFLog": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "From": {
          "type": "string",
          "maxLength": 255
        },
        "ExternalMessage": {
          "type": "string",
          "maxLength": 1024
        },
        "EntityDisplayValue": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "To": {
          "type": "string",
          "maxLength": 1024
        },
        "StatusCode": {
          "type": "integer"
        },
        "Subject": {
          "type": "string",
          "maxLength": 255
        },
        "JobRunExternalRef": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string",
          "maxLength": 255
        },
        "DistributeAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "JobRunID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Department": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DepartmentManagerName": {
          "type": "string",
          "maxLength": 100
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "DepartmentNumberNumeric": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DepartmentNumber": {
          "type": "string",
          "maxLength": 255
        },
        "DepartmentNumberSeriesID": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Dimension10": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Number": {
          "type": "string",
          "maxLength": 255
        },
        "NumberNumeric": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Dimension5": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Number": {
          "type": "string",
          "maxLength": 255
        },
        "NumberNumeric": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Dimension6": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Number": {
          "type": "string",
          "maxLength": 255
        },
        "NumberNumeric": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Dimension7": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Number": {
          "type": "string",
          "maxLength": 255
        },
        "NumberNumeric": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Dimension8": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Number": {
          "type": "string",
          "maxLength": 255
        },
        "NumberNumeric": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Dimension9": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Number": {
          "type": "string",
          "maxLength": 255
        },
        "NumberNumeric": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Dimensions": {
      "properties": {
        "Dimension5ID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ProjectTaskID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Dimension9ID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ResponsibleID": {
          "type": "integer"
        },
        "Dimension7ID": {
          "type": "integer"
        },
        "Dimension6ID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Dimension8ID": {
          "type": "integer"
        },
        "DepartmentID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Dimension10ID": {
          "type": "integer"
        },
        "ProjectID": {
          "type": "integer"
        },
        "RegionID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DimensionsInfo": {
      "properties": {
        "ResponsibleName": {
          "type": "string"
        },
        "ID": {
          "type": "integer"
        },
        "ProjectTaskNumber": {
          "type": "string"
        },
        "Dimension5Name": {
          "type": "string"
        },
        "Dimension6Name": {
          "type": "string"
        },
        "Dimension10Number": {
          "type": "string"
        },
        "DepartmentName": {
          "type": "string"
        },
        "ProjectName": {
          "type": "string"
        },
        "Dimension10Name": {
          "type": "string"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "RegionCode": {
          "type": "string"
        },
        "ProjectNumber": {
          "type": "string"
        },
        "Dimension7Name": {
          "type": "string"
        },
        "Dimension6Number": {
          "type": "string"
        },
        "Dimension9Number": {
          "type": "string"
        },
        "Dimension8Name": {
          "type": "string"
        },
        "RegionName": {
          "type": "string"
        },
        "Dimension5Number": {
          "type": "string"
        },
        "Dimension9Name": {
          "type": "string"
        },
        "Dimension7Number": {
          "type": "string"
        },
        "ProjectTaskName": {
          "type": "string"
        },
        "DepartmentNumber": {
          "type": "string"
        },
        "Dimension8Number": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DimensionSettings": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "IsActive": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Label": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Dimension": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Region": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "StatusCode": {
          "type": "integer"
        },
        "RegionCode": {
          "type": "string",
          "maxLength": 100
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Responsible": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "NameOfResponsible": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Contract": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "HashTransactionAddress": {
          "type": "string",
          "maxLength": 44
        },
        "CreatedBy": {
          "type": "string"
        },
        "TeamsUri": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedAt": {
          "type": "date"
        },
        "Engine": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 30
        },
        "ContractCode": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Hash": {
          "type": "string",
          "maxLength": 64
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "Parameters": {
          "items": {
            "$ref": "#/definitions/ContractParameter"
          },
          "type": "array"
        },
        "Triggers": {
          "items": {
            "$ref": "#/definitions/ContractTrigger"
          },
          "type": "array"
        },
        "RunLogs": {
          "items": {
            "$ref": "#/definitions/ContractRunLog"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractAddress": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ContractID": {
          "type": "integer"
        },
        "ContractAssetID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AssetAddress": {
          "type": "string",
          "maxLength": 44
        },
        "Address": {
          "type": "string",
          "maxLength": 255
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Contract": {
          "$ref": "#/definitions/Contract"
        },
        "ContractAsset": {
          "$ref": "#/definitions/ContractAsset"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractAsset": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "IsTransferrable": {
          "type": "boolean"
        },
        "IsCosignedByDefiner": {
          "type": "boolean"
        },
        "IsPrivate": {
          "type": "boolean"
        },
        "IsIssuedByDefinerOnly": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "IsFixedDenominations": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Cap": {
          "type": "double"
        },
        "ContractID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "IsAutoDestroy": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "SpenderAttested": {
          "type": "boolean"
        },
        "Contract": {
          "$ref": "#/definitions/Contract"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractDebugLog": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ContractRunLogID": {
          "type": "integer"
        },
        "ContractID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Message": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Contract": {
          "$ref": "#/definitions/Contract"
        },
        "ContractRunLog": {
          "$ref": "#/definitions/ContractRunLog"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractParameter": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Value": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ContractID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 30
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Contract": {
          "$ref": "#/definitions/Contract"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractRunLog": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ContractID": {
          "type": "integer"
        },
        "RunTime": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Message": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "ContractTriggerID": {
          "type": "integer"
        },
        "Contract": {
          "$ref": "#/definitions/Contract"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractTransaction": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ReceiverAddress": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ContractID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AssetAddress": {
          "type": "string",
          "maxLength": 255
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ContractAddressID": {
          "type": "integer"
        },
        "SenderAddress": {
          "type": "string",
          "maxLength": 255
        },
        "Contract": {
          "$ref": "#/definitions/Contract"
        },
        "ContractAddress": {
          "$ref": "#/definitions/ContractAddress"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractTrigger": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "ModelFilter": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ContractID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "OperationFilter": {
          "type": "string",
          "maxLength": 3
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ExpressionFilter": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Contract": {
          "$ref": "#/definitions/Contract"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Comment": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "Text": {
          "type": "string"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AuthorID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Mentioned": {
          "items": {
            "$ref": "#/definitions/Mentioned"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Mentioned": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CommentID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ApiKey": {
      "properties": {
        "Encrypt": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "FilterDate": {
          "type": "date"
        },
        "Url": {
          "type": "string",
          "maxLength": 512
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ExternalId": {
          "type": "string",
          "maxLength": 255
        },
        "IntegrationKey": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "IntegrationType": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Altinn": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "PreferredLogin": {
          "type": "string"
        },
        "SystemID": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Language": {
          "type": "string",
          "maxLength": 255
        },
        "SystemPw": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AltinnReceipt": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "HasBeenRegistered": {
          "type": "boolean"
        },
        "AltinnResponseData": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Form": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "ErrorText": {
          "type": "string"
        },
        "TimeStamp": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "XmlReceipt": {
          "type": "string"
        },
        "UserSign": {
          "type": "string",
          "maxLength": 255
        },
        "ReceiptID": {
          "type": "integer"
        },
        "Signings": {
          "items": {
            "$ref": "#/definitions/AltinnSigning"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AltinnSigning": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "DateSigned": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusText": {
          "type": "string",
          "maxLength": 1000
        },
        "StatusCode": {
          "type": "integer"
        },
        "SignatureText": {
          "type": "string",
          "maxLength": 1000
        },
        "AltinnReceiptID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SignatureReference": {
          "type": "string",
          "maxLength": 100
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Barnepass": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "inntektsaar": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "oppgave": {
          "items": {
            "$ref": "#/definitions/BarnepassOppgave"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BarnepassOppgave": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "foedselsnummer": {
          "type": "string",
          "maxLength": 255
        },
        "email": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "paaloeptBeloep": {
          "type": "integer"
        },
        "navn": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "BarnepassID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UserRole": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserID": {
          "type": "integer"
        },
        "SharedRoleName": {
          "type": "string",
          "maxLength": 255
        },
        "SharedRoleId": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "User": {
          "$ref": "#/definitions/User"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Role": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Label": {
          "type": "string",
          "maxLength": 500
        },
        "Name": {
          "type": "string",
          "maxLength": 500
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "RolePermissions": {
          "items": {
            "$ref": "#/definitions/RolePermission"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "RolePermission": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "PermissionID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "RoleID": {
          "type": "integer"
        },
        "Role": {
          "$ref": "#/definitions/Role"
        },
        "Permission": {
          "$ref": "#/definitions/Permission"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Permission": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Name": {
          "type": "string",
          "maxLength": 500
        },
        "UpdatedBy": {
          "type": "string"
        },
        "RolePermissions": {
          "items": {
            "$ref": "#/definitions/RolePermission"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ApiMessage": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Service": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "Message": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "FromDate": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AutobankTransferLog": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Status": {
          "type": "integer"
        },
        "DocumentsId": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DateInserted": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AvtaleGiroAgreement": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "KeyPath": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DataSender": {
          "type": "string"
        },
        "NextNumber": {
          "type": "integer"
        },
        "Thumbprint": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AvtaleGiroBankAccount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AvtaleGiroAgreementID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "BankAccountNumber": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Company": {
          "$ref": "#/definitions/Company"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AvtaleGiroFile": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AvtaleGiroAgreementID": {
          "type": "integer"
        },
        "AvtaleGiroMergedFileID": {
          "type": "integer"
        },
        "FileID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AvtaleGiroContent": {
          "type": "string"
        },
        "Company": {
          "$ref": "#/definitions/Company"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AvtaleGiroMergedFile": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "TransmissionNumber": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankAgreement": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CustomerName": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "ServiceID": {
          "type": "string"
        },
        "OrderEmail": {
          "type": "string"
        },
        "OrderMobile": {
          "type": "string"
        },
        "OrderName": {
          "type": "string"
        },
        "CustomerOrgNumber": {
          "type": "string"
        },
        "ReceiptDate": {
          "type": "date"
        },
        "AccountOwnerOrgNumber": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountOwnerName": {
          "type": "string"
        },
        "ServiceAccountID": {
          "type": "integer"
        },
        "ReceiptID": {
          "type": "string"
        },
        "ServiceAccount": {
          "$ref": "#/definitions/ServiceAccount"
        },
        "Company": {
          "$ref": "#/definitions/Company"
        },
        "Services": {
          "items": {
            "$ref": "#/definitions/BankService"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankService": {
      "properties": {
        "DivisionName": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "ServiceType": {
          "type": "integer"
        },
        "ConfirmInNetbank": {
          "type": "boolean"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "FileType": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "BankAgreementID": {
          "type": "integer"
        },
        "DivisionID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "KidRule": {
          "type": "string"
        },
        "BankAgreement": {
          "$ref": "#/definitions/BankAgreement"
        },
        "BankAccounts": {
          "items": {
            "$ref": "#/definitions/BankServiceBankAccount"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankServiceBankAccount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AccountNumber": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "BankServiceID": {
          "type": "integer"
        },
        "BankService": {
          "$ref": "#/definitions/BankService"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Company": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "WebHookSubscriberId": {
          "type": "string"
        },
        "Key": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "IsTest": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "date"
        },
        "FileFlowEmail": {
          "type": "string"
        },
        "ClientNumber": {
          "type": "integer"
        },
        "IsTemplate": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "FileFlowOrgnrEmail": {
          "type": "string"
        },
        "MigrationVersion": {
          "type": "string"
        },
        "SchemaName": {
          "type": "string"
        },
        "IsGlobalTemplate": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "LastActivity": {
          "type": "date"
        },
        "OrganizationNumber": {
          "type": "string"
        },
        "ConnectionString": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanyAccess": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Roles": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "StartDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "EndDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "GlobalIdentity": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanyBackup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CompanyKey": {
          "type": "string"
        },
        "ScheduledForDeleteAt": {
          "type": "date"
        },
        "ContractType": {
          "type": "integer"
        },
        "CustomerName": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CopyFiles": {
          "type": "boolean"
        },
        "BackupStatus": {
          "type": "string"
        },
        "Environment": {
          "type": "string"
        },
        "CloudBlobName": {
          "type": "string"
        },
        "ContractID": {
          "type": "integer"
        },
        "CompanyName": {
          "type": "string"
        },
        "Reason": {
          "type": "string"
        },
        "ContainerName": {
          "type": "string"
        },
        "OrgNumber": {
          "type": "string"
        },
        "SchemaName": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "DeletedAt": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractCron": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "ContractID": {
          "type": "integer"
        },
        "Expression": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ContractTriggerID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractObyte": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "ContractID": {
          "type": "integer"
        },
        "AssetAddress": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ContractAddressID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DeniedUserAccessLog": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Occurred": {
          "type": "date"
        },
        "Email": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "Username": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FailedBankFile": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CompanyKey": {
          "type": "string"
        },
        "FileContent": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "FailedReason": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "HangfireJob": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CompanyKey": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "Status": {
          "type": "integer"
        },
        "HasError": {
          "type": "boolean"
        },
        "JobId": {
          "type": "string"
        },
        "Year": {
          "type": "integer"
        },
        "Completed": {
          "type": "boolean"
        },
        "GlobalIdentity": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "HangfireJobContext": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CompanyKey": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "Status": {
          "type": "integer"
        },
        "HasError": {
          "type": "boolean"
        },
        "JobId": {
          "type": "string"
        },
        "Year": {
          "type": "integer"
        },
        "SchemaName": {
          "type": "string"
        },
        "Completed": {
          "type": "boolean"
        },
        "GlobalIdentity": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "HangfireResponse": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CompanyKey": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "ProgressUrl": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "HasError": {
          "type": "boolean"
        },
        "JobId": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Year": {
          "type": "integer"
        },
        "Completed": {
          "type": "boolean"
        },
        "GlobalIdentity": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "KpiDefinition": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Application": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "IsPerUser": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "SourceType": {
          "type": "string"
        },
        "RefreshModels": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Interval": {
          "type": "string"
        },
        "RoleNames": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Route": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "KpiValue": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "Text": {
          "type": "string"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "KpiName": {
          "type": "string"
        },
        "ValueStatus": {
          "type": "string"
        },
        "LastUpdated": {
          "type": "date"
        },
        "KpiDefinitionID": {
          "type": "integer"
        },
        "Counter": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "UserIdentity": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "Total": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "OutgoingInvoice": {
      "properties": {
        "InvoiceType": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ISPOrganizationNumber": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "RecipientOrganizationNumber": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "RecipientPhoneNumber": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "InvoiceID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "DueDate": {
          "type": "date"
        },
        "MetaJson": {
          "type": "string"
        },
        "Amount": {
          "type": "double"
        },
        "ExternalReference": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ProcessFileLog": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CompanyKey": {
          "type": "string"
        },
        "EntityName": {
          "type": "string"
        },
        "FileID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "FileType": {
          "type": "integer"
        },
        "UserIdentity": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyID": {
          "type": "integer"
        },
        "CompanyName": {
          "type": "string"
        },
        "EntityCount": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Message": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "EntityInstanceID": {
          "type": "string"
        },
        "Company": {
          "$ref": "#/definitions/Company"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ServiceAccount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "KeyPath": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DataSender": {
          "type": "string"
        },
        "NextNumber": {
          "type": "integer"
        },
        "Thumbprint": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UserVerification": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Email": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "CompanyId": {
          "type": "integer"
        },
        "UserId": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ExpirationDate": {
          "type": "date"
        },
        "VerificationCode": {
          "type": "string"
        },
        "VerificationDate": {
          "type": "date"
        },
        "DisplayName": {
          "type": "string"
        },
        "UserType": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "RequestOrigin": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Account": {
      "properties": {
        "TopLevelAccountGroupID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "AccountNumber": {
          "type": "integer"
        },
        "Keywords": {
          "type": "string",
          "maxLength": 255
        },
        "VatTypeID": {
          "type": "integer"
        },
        "Locked": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "DoSynchronize": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Visible": {
          "type": "boolean"
        },
        "AccountSetupID": {
          "type": "integer"
        },
        "AccountGroupID": {
          "type": "integer"
        },
        "EmployeeID": {
          "type": "integer"
        },
        "LockManualPosts": {
          "type": "boolean"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SupplierID": {
          "type": "integer"
        },
        "UsePostPost": {
          "type": "boolean"
        },
        "CustomerID": {
          "type": "integer"
        },
        "SaftMappingAccountID": {
          "type": "integer"
        },
        "UseVatDeductionGroupID": {
          "type": "integer"
        },
        "SystemAccount": {
          "type": "boolean"
        },
        "AccountName": {
          "type": "string",
          "maxLength": 255
        },
        "CostAllocationID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "AccountID": {
          "type": "integer"
        },
        "AccountGroup": {
          "$ref": "#/definitions/AccountGroup"
        },
        "TopLevelAccountGroup": {
          "$ref": "#/definitions/AccountGroup"
        },
        "VatType": {
          "$ref": "#/definitions/VatType"
        },
        "MainAccount": {
          "$ref": "#/definitions/Account"
        },
        "Customer": {
          "$ref": "#/definitions/Customer"
        },
        "Supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "Employee": {
          "$ref": "#/definitions/Employee"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Alias": {
          "items": {
            "$ref": "#/definitions/AccountAlias"
          },
          "type": "array"
        },
        "MandatoryDimensions": {
          "items": {
            "$ref": "#/definitions/AccountMandatoryDimension"
          },
          "type": "array"
        },
        "CompatibleAccountGroups": {
          "items": {
            "$ref": "#/definitions/AccountGroup"
          },
          "type": "array"
        },
        "SubAccounts": {
          "items": {
            "$ref": "#/definitions/Account"
          },
          "type": "array"
        },
        "CostAllocation": {
          "$ref": "#/definitions/CostAllocation"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountAlias": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountGroup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AccountGroupSetupID": {
          "type": "integer"
        },
        "MainGroupID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "AccountGroupSetID": {
          "type": "integer"
        },
        "CompatibleAccountID": {
          "type": "integer"
        },
        "Summable": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "GroupNumber": {
          "type": "string",
          "maxLength": 10
        },
        "MainGroup": {
          "$ref": "#/definitions/AccountGroup"
        },
        "AccountGroupSet": {
          "$ref": "#/definitions/AccountGroupSet"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountGroupSet": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "System": {
          "type": "boolean"
        },
        "Shared": {
          "type": "boolean"
        },
        "FromAccountNumber": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "ToAccountNumber": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SubAccountAllowed": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountMandatoryDimension": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "DimensionNo": {
          "type": "integer"
        },
        "MandatoryType": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Accrual": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "JournalEntryLineDraftID": {
          "type": "integer"
        },
        "ResultAccountID": {
          "type": "integer"
        },
        "BalanceAccountID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccrualJournalEntryMode": {
          "type": "integer"
        },
        "AccrualAmount": {
          "type": "double"
        },
        "JournalEntryLineDraft": {
          "$ref": "#/definitions/JournalEntryLineDraft"
        },
        "Periods": {
          "items": {
            "$ref": "#/definitions/AccrualPeriod"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccrualPeriod": {
      "properties": {
        "AccrualID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "PeriodNo": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "JournalEntryDraftLineID": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountYear": {
          "type": "integer"
        },
        "Accrual": {
          "$ref": "#/definitions/Accrual"
        },
        "JournalEntryLineDraft": {
          "$ref": "#/definitions/JournalEntryLineDraft"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AltinnAccountLink": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AccountNumber": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "AccountingType": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AltinnAccountNumber": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ApprovalData": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityName": {
          "type": "string",
          "maxLength": 100
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EntityReference": {
          "type": "string",
          "maxLength": 200
        },
        "IPAddress": {
          "type": "string",
          "maxLength": 45
        },
        "EntityCount": {
          "type": "integer"
        },
        "VerificationMethod": {
          "type": "string",
          "maxLength": 250
        },
        "VerificationReference": {
          "type": "string",
          "maxLength": 500
        },
        "UpdatedBy": {
          "type": "string"
        },
        "EntityHash": {
          "type": "string",
          "maxLength": 100
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Asset": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Kommunenr": {
          "type": "string"
        },
        "PurchaseAmount": {
          "type": "double"
        },
        "NetFinancialValue": {
          "type": "double"
        },
        "IBValue1984": {
          "type": "double"
        },
        "Bnr": {
          "type": "integer"
        },
        "ScrapValue": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "LowerDepreciationValue": {
          "type": "double"
        },
        "Lifetime": {
          "type": "integer"
        },
        "HistoricalCostPrice": {
          "type": "double"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "AssetGroupCode": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "BalanceAccountID": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "PurchaseDate": {
          "type": "date"
        },
        "AutoDepreciation": {
          "type": "boolean"
        },
        "IncomingFinancialValue": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Gnr": {
          "type": "integer"
        },
        "DepreciationCycle": {
          "type": "integer"
        },
        "DepreciationStartDate": {
          "type": "date"
        },
        "DepreciationAccountID": {
          "type": "integer"
        },
        "BalanceAccount": {
          "$ref": "#/definitions/Account"
        },
        "DepreciationAccount": {
          "$ref": "#/definitions/Account"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "DepreciationLines": {
          "items": {
            "$ref": "#/definitions/DepreciationLine"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AssetTaxbasedIB": {
      "properties": {
        "GroupCode": {
          "type": "string",
          "maxLength": 255
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Value": {
          "type": "double"
        },
        "PurchaseAmount": {
          "type": "double"
        },
        "TaxbasedDepreciation": {
          "type": "double"
        },
        "TaxBasedUB": {
          "type": "double"
        },
        "Movement": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "DepreciationRate": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PurchaseYear": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "Year": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AssetID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Bank": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EmailID": {
          "type": "integer"
        },
        "BIC": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Web": {
          "type": "string",
          "maxLength": 255
        },
        "InitialBIC": {
          "type": "string",
          "maxLength": 11
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "PhoneID": {
          "type": "integer"
        },
        "AddressID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        },
        "Phone": {
          "$ref": "#/definitions/Phone"
        },
        "Email": {
          "$ref": "#/definitions/Email"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankAccount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AccountNumber": {
          "type": "string",
          "maxLength": 100
        },
        "Locked": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "BankID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "IntegrationStatus": {
          "type": "integer"
        },
        "Label": {
          "type": "string",
          "maxLength": 255
        },
        "IntegrationSettings": {
          "type": "string"
        },
        "IBAN": {
          "type": "string",
          "maxLength": 100
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CompanySettingsID": {
          "type": "integer"
        },
        "AccountID": {
          "type": "integer"
        },
        "BankAccountType": {
          "type": "string",
          "maxLength": 100
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankIntegrationAgreement": {
      "properties": {
        "HasOrderedIntegrationChange": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "PropertiesJson": {
          "type": "string",
          "maxLength": 255
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ServiceProvider": {
          "type": "integer"
        },
        "IsBankBalance": {
          "type": "boolean"
        },
        "PreApprovedBankPayments": {
          "type": "string"
        },
        "Email": {
          "type": "string",
          "maxLength": 256
        },
        "IsInbound": {
          "type": "boolean"
        },
        "DefaultAgreement": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsOutgoing": {
          "type": "boolean"
        },
        "ServiceID": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "BankAccountID": {
          "type": "integer"
        },
        "HasNewAccountInformation": {
          "type": "boolean"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "BankAcceptance": {
          "type": "boolean"
        },
        "ServiceTemplateID": {
          "type": "string"
        },
        "BankAccount": {
          "$ref": "#/definitions/BankAccount"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankRule": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Rule": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ActionCode": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Priority": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 200
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankStatement": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "FileID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "EndBalance": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "BankAccountID": {
          "type": "integer"
        },
        "StartBalance": {
          "type": "double"
        },
        "ToDate": {
          "type": "date"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "CurrencyCode": {
          "type": "string",
          "maxLength": 10
        },
        "ArchiveReference": {
          "type": "string",
          "maxLength": 30
        },
        "Amount": {
          "type": "double"
        },
        "StatementID": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "FromDate": {
          "type": "date"
        },
        "Entries": {
          "items": {
            "$ref": "#/definitions/BankStatementEntry"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankStatementEntry": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "StructuredReference": {
          "type": "string",
          "maxLength": 20
        },
        "InvoiceNumber": {
          "type": "string",
          "maxLength": 20
        },
        "Category": {
          "type": "string",
          "maxLength": 30
        },
        "CreatedBy": {
          "type": "string"
        },
        "SenderName": {
          "type": "string",
          "maxLength": 80
        },
        "CreatedAt": {
          "type": "date"
        },
        "OpenAmountCurrency": {
          "type": "double"
        },
        "TransactionId": {
          "type": "string"
        },
        "ValueDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "BookingDate": {
          "type": "date"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "SenderAccount": {
          "type": "string",
          "maxLength": 20
        },
        "CurrencyCode": {
          "type": "string",
          "maxLength": 10
        },
        "ArchiveReference": {
          "type": "string",
          "maxLength": 30
        },
        "Receivername": {
          "type": "string",
          "maxLength": 80
        },
        "CID": {
          "type": "string",
          "maxLength": 30
        },
        "Amount": {
          "type": "double"
        },
        "StatementID": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "OpenAmount": {
          "type": "double"
        },
        "BankStatementID": {
          "type": "integer"
        },
        "ReceiverAccount": {
          "type": "string",
          "maxLength": 20
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankStatementMatch": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Batch": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "Group": {
          "type": "string"
        },
        "JournalEntryLineID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "BankStatementEntryID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankStatementRule": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Rule": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Priority": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 200
        },
        "EntryText": {
          "type": "string",
          "maxLength": 200
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Budget": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AccountingYear": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Entries": {
          "items": {
            "$ref": "#/definitions/BudgetEntry"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BudgetEntry": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PeriodNumber": {
          "type": "integer"
        },
        "BudgetID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanyAccountingSettings": {
      "properties": {
        "AssetSaleProfitNoVatAccountID": {
          "type": "integer"
        },
        "AssetSaleProductID": {
          "type": "integer"
        },
        "AssetSaleLossNoVatAccountID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AssetSaleProfitVatAccountID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "AssetSaleProfitBalancingAccountID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ReInvoicingCostsharingProductID": {
          "type": "integer"
        },
        "ReInvoicingMethod": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ReInvoicingTurnoverProductID": {
          "type": "integer"
        },
        "AssetSaleLossVatAccountID": {
          "type": "integer"
        },
        "AssetWriteoffAccountID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AssetSaleLossBalancingAccountID": {
          "type": "integer"
        },
        "ReInvoicingCostsharingProduct": {
          "$ref": "#/definitions/Product"
        },
        "ReInvoicingTurnoverProduct": {
          "$ref": "#/definitions/Product"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanyBankAccount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "IsSalary": {
          "type": "boolean"
        },
        "IsTax": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsOutgoing": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "BankAccountID": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "CreditAmount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "IsIncomming": {
          "type": "boolean"
        },
        "AccountID": {
          "type": "integer"
        },
        "BankAccount": {
          "$ref": "#/definitions/BankAccount"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CostAllocation": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/CostAllocationItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CostAllocationItem": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Percent": {
          "type": "double"
        },
        "Amount": {
          "type": "double"
        },
        "CostAllocationID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "AccountID": {
          "type": "integer"
        },
        "Account": {
          "$ref": "#/definitions/Account"
        },
        "VatType": {
          "$ref": "#/definitions/VatType"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomLiquidityPayment": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsCustomerPayment": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "DueDate": {
          "type": "date"
        },
        "EndDate": {
          "type": "date"
        },
        "CustomLiquidityPaymentType": {
          "type": "string"
        },
        "Amount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 255
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DepreciationLine": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "AssetJELineID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "DepreciationJELineID": {
          "type": "integer"
        },
        "DepreciationType": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AssetID": {
          "type": "integer"
        },
        "DepreciationJELine": {
          "$ref": "#/definitions/JournalEntryLine"
        },
        "AssetJELine": {
          "$ref": "#/definitions/JournalEntryLine"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FinancialYear": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ValidFrom": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ValidTo": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Year": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntry": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "JournalEntryAccrualID": {
          "type": "integer"
        },
        "JournalEntryDraftGroup": {
          "type": "string"
        },
        "FinancialYearID": {
          "type": "integer"
        },
        "NumberSeriesTaskID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "JournalEntryNumber": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "NumberSeriesID": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 200
        },
        "JournalEntryNumberNumeric": {
          "type": "integer"
        },
        "Lines": {
          "items": {
            "$ref": "#/definitions/JournalEntryLine"
          },
          "type": "array"
        },
        "DraftLines": {
          "items": {
            "$ref": "#/definitions/JournalEntryLineDraft"
          },
          "type": "array"
        },
        "JournalEntryAccrual": {
          "$ref": "#/definitions/Accrual"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryLine": {
      "properties": {
        "AccrualID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "TaxBasisAmountCurrency": {
          "type": "double"
        },
        "InvoiceNumber": {
          "type": "string",
          "maxLength": 100
        },
        "VatTypeID": {
          "type": "integer"
        },
        "BatchNumber": {
          "type": "integer"
        },
        "TaxBasisAmount": {
          "type": "double"
        },
        "VatJournalEntryPostID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PostPostJournalEntryLineID": {
          "type": "integer"
        },
        "PaymentReferenceID": {
          "type": "integer"
        },
        "VatReportID": {
          "type": "integer"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "JournalEntryTypeID": {
          "type": "integer"
        },
        "RegisteredDate": {
          "type": "date"
        },
        "ReferenceCreditPostID": {
          "type": "integer"
        },
        "PaymentID": {
          "type": "string",
          "maxLength": 255
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "VatPeriodID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "VatDeductionPercent": {
          "type": "integer"
        },
        "JournalEntryLineDraftID": {
          "type": "integer"
        },
        "RestAmount": {
          "type": "double"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "DueDate": {
          "type": "date"
        },
        "SubAccountID": {
          "type": "integer"
        },
        "OriginalReferencePostID": {
          "type": "integer"
        },
        "PeriodID": {
          "type": "integer"
        },
        "ReferenceOriginalPostID": {
          "type": "integer"
        },
        "FinancialDate": {
          "type": "date"
        },
        "Amount": {
          "type": "double"
        },
        "PaymentInfoTypeID": {
          "type": "integer"
        },
        "JournalEntryNumber": {
          "type": "string",
          "maxLength": 100
        },
        "VatDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Signature": {
          "type": "string",
          "maxLength": 255
        },
        "SupplierInvoiceID": {
          "type": "integer"
        },
        "RestAmountCurrency": {
          "type": "double"
        },
        "CustomerOrderID": {
          "type": "integer"
        },
        "OriginalJournalEntryPost": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "AccountID": {
          "type": "integer"
        },
        "VatPercent": {
          "type": "double"
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "JournalEntryNumberNumeric": {
          "type": "integer"
        },
        "JournalEntry": {
          "$ref": "#/definitions/JournalEntry"
        },
        "VatJournalEntryPost": {
          "$ref": "#/definitions/JournalEntryLine"
        },
        "ReferenceCreditPost": {
          "$ref": "#/definitions/JournalEntryLine"
        },
        "OriginalReferencePost": {
          "$ref": "#/definitions/JournalEntryLine"
        },
        "ReferenceOriginalPost": {
          "$ref": "#/definitions/JournalEntryLine"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Accrual": {
          "$ref": "#/definitions/Accrual"
        },
        "JournalEntryLineDraft": {
          "$ref": "#/definitions/JournalEntryLineDraft"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryLineDraft": {
      "properties": {
        "AccrualID": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "TaxBasisAmountCurrency": {
          "type": "double"
        },
        "InvoiceNumber": {
          "type": "string",
          "maxLength": 100
        },
        "VatTypeID": {
          "type": "integer"
        },
        "BatchNumber": {
          "type": "integer"
        },
        "TaxBasisAmount": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PostPostJournalEntryLineID": {
          "type": "integer"
        },
        "PaymentReferenceID": {
          "type": "integer"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "JournalEntryTypeID": {
          "type": "integer"
        },
        "RegisteredDate": {
          "type": "date"
        },
        "PaymentID": {
          "type": "string",
          "maxLength": 255
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "VatPeriodID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "VatDeductionPercent": {
          "type": "integer"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "DueDate": {
          "type": "date"
        },
        "SubAccountID": {
          "type": "integer"
        },
        "PeriodID": {
          "type": "integer"
        },
        "FinancialDate": {
          "type": "date"
        },
        "Amount": {
          "type": "double"
        },
        "PaymentInfoTypeID": {
          "type": "integer"
        },
        "JournalEntryNumber": {
          "type": "string",
          "maxLength": 100
        },
        "VatDate": {
          "type": "date"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Signature": {
          "type": "string",
          "maxLength": 255
        },
        "SupplierInvoiceID": {
          "type": "integer"
        },
        "CustomerOrderID": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 500
        },
        "AccountID": {
          "type": "integer"
        },
        "VatPercent": {
          "type": "double"
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "JournalEntryNumberNumeric": {
          "type": "integer"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Accrual": {
          "$ref": "#/definitions/Accrual"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryMode": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ColumnSetUp": {
          "type": "string",
          "maxLength": 500
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "TraceLinkTypes": {
          "type": "string",
          "maxLength": 500
        },
        "StatusCode": {
          "type": "integer"
        },
        "VisibleModules": {
          "type": "string",
          "maxLength": 500
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntrySourceSerie": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "JournalEntrySourceID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Number": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "MainName": {
          "type": "string",
          "maxLength": 100
        },
        "DisplayName": {
          "type": "string",
          "maxLength": 100
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "ExpectNegativeAmount": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "LedgerSuggestion": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "Source": {
          "type": "string"
        },
        "IndustryCode": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "IndustryName": {
          "type": "string"
        },
        "OrgNumber": {
          "type": "string"
        },
        "BusinessType": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Payment": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "XmlTagPmtInfIdReference": {
          "type": "string",
          "maxLength": 100
        },
        "ReconcilePayment": {
          "type": "boolean"
        },
        "InvoiceNumber": {
          "type": "string",
          "maxLength": 100
        },
        "InPaymentID": {
          "type": "string",
          "maxLength": 36
        },
        "IsExternal": {
          "type": "boolean"
        },
        "PaymentBatchID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ExternalBankAccountNumber": {
          "type": "string",
          "maxLength": 35
        },
        "PaymentNotificationReportFileID": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsCustomerPayment": {
          "type": "boolean"
        },
        "IsPaymentClaim": {
          "type": "boolean"
        },
        "OcrPaymentStrings": {
          "type": "string",
          "maxLength": 500
        },
        "Debtor": {
          "type": "string",
          "maxLength": 255
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "TransactionID": {
          "type": "string"
        },
        "StatusText": {
          "type": "string",
          "maxLength": 500
        },
        "PaymentStatusReportFileID": {
          "type": "integer"
        },
        "IsPaymentCancellationRequest": {
          "type": "boolean"
        },
        "PaymentID": {
          "type": "string",
          "maxLength": 100
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "SerialNumberOrAcctSvcrRef": {
          "type": "string",
          "maxLength": 35
        },
        "StatusCode": {
          "type": "integer"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "Domain": {
          "type": "string",
          "maxLength": 100
        },
        "DueDate": {
          "type": "date"
        },
        "XmlTagEndToEndIdReference": {
          "type": "string",
          "maxLength": 100
        },
        "PaymentDate": {
          "type": "date"
        },
        "FromBankAccountID": {
          "type": "integer"
        },
        "CustomerInvoiceReminderID": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "BusinessRelationID": {
          "type": "integer"
        },
        "ToBankAccountID": {
          "type": "integer"
        },
        "PaymentCodeID": {
          "type": "integer"
        },
        "Proprietary": {
          "type": "string",
          "maxLength": 100
        },
        "AutoJournal": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SupplierInvoiceID": {
          "type": "integer"
        },
        "BankChargeAmount": {
          "type": "double"
        },
        "Description": {
          "type": "string"
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "CustomerInvoice": {
          "$ref": "#/definitions/CustomerInvoice"
        },
        "SupplierInvoice": {
          "$ref": "#/definitions/SupplierInvoice"
        },
        "CustomerInvoiceReminder": {
          "$ref": "#/definitions/CustomerInvoiceReminder"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PaymentBatch": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "TotalAmount": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "Camt054CMsgId": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsCustomerPayment": {
          "type": "boolean"
        },
        "PaymentReferenceID": {
          "type": "string",
          "maxLength": 200
        },
        "PaymentStatusReportFileID": {
          "type": "integer"
        },
        "PaymentFileID": {
          "type": "integer"
        },
        "OcrHeadingStrings": {
          "type": "string",
          "maxLength": 500
        },
        "StatusCode": {
          "type": "integer"
        },
        "NumberOfPayments": {
          "type": "integer"
        },
        "ReceiptDate": {
          "type": "date"
        },
        "OcrTransmissionNumber": {
          "type": "integer"
        },
        "TransferredDate": {
          "type": "date"
        },
        "HashValue": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PaymentBatchTypeID": {
          "type": "integer"
        },
        "Payments": {
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PostPost": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "Date": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "JournalEntryLine2ID": {
          "type": "integer"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "Amount": {
          "type": "double"
        },
        "JournalEntryLine1ID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReInvoice": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "TaxExclusiveAmount": {
          "type": "double"
        },
        "OwnCostShare": {
          "type": "double"
        },
        "TaxInclusiveAmount": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ReInvoicingType": {
          "type": "integer"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ProductID": {
          "type": "integer"
        },
        "OwnCostAmount": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "SupplierInvoiceID": {
          "type": "integer"
        },
        "SupplierInvoice": {
          "$ref": "#/definitions/SupplierInvoice"
        },
        "Product": {
          "$ref": "#/definitions/Product"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/ReInvoiceItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReInvoiceItem": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "Surcharge": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "NetAmount": {
          "type": "double"
        },
        "ReInvoiceID": {
          "type": "integer"
        },
        "Vat": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "GrossAmount": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CustomerID": {
          "type": "integer"
        },
        "Share": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Customer": {
          "$ref": "#/definitions/Customer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SupplierInvoice": {
      "properties": {
        "InternalNote": {
          "type": "string",
          "maxLength": 500
        },
        "Requisition": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceType": {
          "type": "integer"
        },
        "CreditDays": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "OurReference": {
          "type": "string",
          "maxLength": 255
        },
        "ID": {
          "type": "integer"
        },
        "InvoicePostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "DeliveryMethod": {
          "type": "string",
          "maxLength": 100
        },
        "Payment": {
          "type": "string",
          "maxLength": 255
        },
        "TaxExclusiveAmount": {
          "type": "double"
        },
        "ShippingCountry": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceNumber": {
          "type": "string",
          "maxLength": 100
        },
        "ReInvoiceID": {
          "type": "integer"
        },
        "ShippingAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "SupplierOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "TaxInclusiveAmount": {
          "type": "double"
        },
        "Comment": {
          "type": "string"
        },
        "ShippingPostalCode": {
          "type": "string",
          "maxLength": 10
        },
        "CreatedBy": {
          "type": "string"
        },
        "PaymentTermsID": {
          "type": "integer"
        },
        "InvoiceCountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceCountry": {
          "type": "string",
          "maxLength": 100
        },
        "CreatedAt": {
          "type": "date"
        },
        "Credited": {
          "type": "boolean"
        },
        "YourReference": {
          "type": "string",
          "maxLength": 255
        },
        "ShippingCity": {
          "type": "string",
          "maxLength": 100
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "VatTotalsAmountCurrency": {
          "type": "double"
        },
        "ShippingCountryCode": {
          "type": "string",
          "maxLength": 100
        },
        "PaymentDueDate": {
          "type": "date"
        },
        "PaymentID": {
          "type": "string",
          "maxLength": 100
        },
        "DeliveryTerm": {
          "type": "string",
          "maxLength": 100
        },
        "InvoiceReceiverName": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "PayableRoundingAmount": {
          "type": "double"
        },
        "FreeTxt": {
          "type": "string"
        },
        "DeliveryTermsID": {
          "type": "integer"
        },
        "CustomerPerson": {
          "type": "string",
          "maxLength": 255
        },
        "TaxInclusiveAmountCurrency": {
          "type": "double"
        },
        "InvoiceDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SupplierID": {
          "type": "integer"
        },
        "VatTotalsAmount": {
          "type": "double"
        },
        "BankAccountID": {
          "type": "integer"
        },
        "RestAmount": {
          "type": "double"
        },
        "PrintStatus": {
          "type": "integer"
        },
        "IsSentToPayment": {
          "type": "boolean"
        },
        "DeliveryName": {
          "type": "string",
          "maxLength": 255
        },
        "PayableRoundingCurrencyAmount": {
          "type": "double"
        },
        "TaxExclusiveAmountCurrency": {
          "type": "double"
        },
        "ReInvoiced": {
          "type": "boolean"
        },
        "CustomerOrgNumber": {
          "type": "string",
          "maxLength": 100
        },
        "ShippingAddressLine2": {
          "type": "string",
          "maxLength": 255
        },
        "SalesPerson": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "PaymentStatus": {
          "type": "integer"
        },
        "AmountRegards": {
          "type": "string",
          "maxLength": 255
        },
        "PaymentInformation": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceOriginType": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DefaultDimensionsID": {
          "type": "integer"
        },
        "DeliveryDate": {
          "type": "date"
        },
        "CreditedAmount": {
          "type": "double"
        },
        "CreditedAmountCurrency": {
          "type": "double"
        },
        "RestAmountCurrency": {
          "type": "double"
        },
        "InvoiceCity": {
          "type": "string",
          "maxLength": 100
        },
        "PaymentTerm": {
          "type": "string",
          "maxLength": 100
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "ProjectID": {
          "type": "integer"
        },
        "ShippingAddressLine1": {
          "type": "string",
          "maxLength": 255
        },
        "InvoiceReferenceID": {
          "type": "integer"
        },
        "InvoiceAddressLine3": {
          "type": "string",
          "maxLength": 255
        },
        "Payments": {
          "items": {
            "$ref": "#/definitions/Payment"
          },
          "type": "array"
        },
        "JournalEntry": {
          "$ref": "#/definitions/JournalEntry"
        },
        "DefaultDimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "Supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/SupplierInvoiceItem"
          },
          "type": "array"
        },
        "ReInvoice": {
          "$ref": "#/definitions/ReInvoice"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SupplierInvoiceItem": {
      "properties": {
        "CalculateGrossPriceBasedOnNetPrice": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "ItemText": {
          "type": "string",
          "maxLength": 600
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "SumVatCurrency": {
          "type": "double"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "SumTotalExVatCurrency": {
          "type": "double"
        },
        "SortIndex": {
          "type": "integer"
        },
        "Comment": {
          "type": "string",
          "maxLength": 500
        },
        "DiscountPercent": {
          "type": "double"
        },
        "NumberOfItems": {
          "type": "double"
        },
        "CreatedBy": {
          "type": "string"
        },
        "PriceExVatCurrency": {
          "type": "double"
        },
        "DiscountCurrency": {
          "type": "double"
        },
        "CreatedAt": {
          "type": "date"
        },
        "SumTotalIncVat": {
          "type": "double"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "InvoicePeriodStartDate": {
          "type": "date"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "PriceSetByUser": {
          "type": "boolean"
        },
        "Discount": {
          "type": "double"
        },
        "SumVat": {
          "type": "double"
        },
        "ProductID": {
          "type": "integer"
        },
        "InvoicePeriodEndDate": {
          "type": "date"
        },
        "SumTotalIncVatCurrency": {
          "type": "double"
        },
        "SumTotalExVat": {
          "type": "double"
        },
        "Unit": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PriceIncVat": {
          "type": "double"
        },
        "AccountingCost": {
          "type": "string",
          "maxLength": 255
        },
        "SupplierInvoiceID": {
          "type": "integer"
        },
        "PriceExVat": {
          "type": "double"
        },
        "VatPercent": {
          "type": "double"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatCodeGroup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "No": {
          "type": "string",
          "maxLength": 20
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatDeduction": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "VatDeductionGroupID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ValidFrom": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ValidTo": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "DeductionPercent": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatDeductionGroup": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatPost": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "VatCodeGroupID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "HasTaxAmount": {
          "type": "boolean"
        },
        "No": {
          "type": "string",
          "maxLength": 20
        },
        "StatusCode": {
          "type": "integer"
        },
        "HasTaxBasis": {
          "type": "boolean"
        },
        "ReportAsNegativeAmount": {
          "type": "boolean"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReport": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Comment": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "TerminPeriodID": {
          "type": "integer"
        },
        "ReportedDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "VatReportTypeID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "InternalComment": {
          "type": "string",
          "maxLength": 255
        },
        "ExternalRefNo": {
          "type": "string",
          "maxLength": 20
        },
        "ExecutedDate": {
          "type": "date"
        },
        "Title": {
          "type": "string",
          "maxLength": 250
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "VatReportArchivedSummaryID": {
          "type": "integer"
        },
        "VatReportType": {
          "$ref": "#/definitions/VatReportType"
        },
        "JournalEntry": {
          "$ref": "#/definitions/JournalEntry"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportArchivedSummary": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "PaymentToDescription": {
          "type": "string",
          "maxLength": 255
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "PaymentPeriod": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "AmountToBeReceived": {
          "type": "double"
        },
        "PaymentYear": {
          "type": "integer"
        },
        "PaymentDueDate": {
          "type": "date"
        },
        "SummaryHeader": {
          "type": "string",
          "maxLength": 255
        },
        "PaymentID": {
          "type": "string",
          "maxLength": 100
        },
        "ReportName": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AmountToBePayed": {
          "type": "double"
        },
        "PaymentBankAccountNumber": {
          "type": "string",
          "maxLength": 100
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportReference": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "VatPostID": {
          "type": "integer"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "Account": {
          "$ref": "#/definitions/Account"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string",
          "maxLength": 100
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatType": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "IncomingAccountID": {
          "type": "integer"
        },
        "DirectJournalEntryOnly": {
          "type": "boolean"
        },
        "Locked": {
          "type": "boolean"
        },
        "VatCodeGroupID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ReversedTaxDutyVat": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Visible": {
          "type": "boolean"
        },
        "VatCode": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "InUse": {
          "type": "boolean"
        },
        "OutputVat": {
          "type": "boolean"
        },
        "Name": {
          "type": "string",
          "maxLength": 255
        },
        "Alias": {
          "type": "string",
          "maxLength": 255
        },
        "VatCodeGroupingValue": {
          "type": "string"
        },
        "OutgoingAccountID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "VatTypeSetupID": {
          "type": "integer"
        },
        "AvailableInModules": {
          "type": "boolean"
        },
        "IncomingAccount": {
          "$ref": "#/definitions/Account"
        },
        "OutgoingAccount": {
          "$ref": "#/definitions/Account"
        },
        "VatCodeGroup": {
          "$ref": "#/definitions/VatCodeGroup"
        },
        "VatReportReferences": {
          "items": {
            "$ref": "#/definitions/VatReportReference"
          },
          "type": "array"
        },
        "VatTypePercentages": {
          "items": {
            "$ref": "#/definitions/VatTypePercentage"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatTypePercentage": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ValidFrom": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ValidTo": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "VatPercent": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualAccount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SendStatus": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AnnualSettlementID": {
          "type": "integer"
        },
        "MainFileID": {
          "type": "integer"
        },
        "ReceiptID": {
          "type": "integer"
        },
        "AnnualSettlement": {
          "$ref": "#/definitions/AnnualSettlement"
        },
        "AnnualAccountNoteInfo": {
          "items": {
            "$ref": "#/definitions/AnnualAccountNoteInfo"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualAccountNoteInfo": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Done": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PropertyName": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "NoteData": {
          "type": "string"
        },
        "AnnualAccountID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Reconcile": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "IntervalNumber": {
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ToDate": {
          "type": "date"
        },
        "ReconcileType": {
          "type": "string",
          "maxLength": 255
        },
        "Interval": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountYear": {
          "type": "integer"
        },
        "FromDate": {
          "type": "date"
        },
        "Accounts": {
          "items": {
            "$ref": "#/definitions/ReconcileAccount"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReconcileAccount": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "ApprovedAt": {
          "type": "date"
        },
        "Comment": {
          "type": "string",
          "maxLength": 255
        },
        "HasAttachements": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ReconcileID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Balance": {
          "type": "double"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "ApprovedBy": {
          "type": "string",
          "maxLength": 255
        },
        "AccountID": {
          "type": "integer"
        },
        "IsApproved": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualSettlement": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "AnnualSettlementJSONData": {
          "type": "string"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SkjermingsfradragBasisJSONData": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "TransportJSONData": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "ReconcileID": {
          "type": "integer"
        },
        "ValidationResponse": {
          "type": "string"
        },
        "AnnualSettlementCheckListID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "SendStatus": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AccountYear": {
          "type": "integer"
        },
        "Type": {
          "type": "integer"
        },
        "AutoJournalPostPonedTax": {
          "type": "boolean"
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "ReceiptID": {
          "type": "integer"
        },
        "Reconcile": {
          "$ref": "#/definitions/Reconcile"
        },
        "JournalEntry": {
          "$ref": "#/definitions/JournalEntry"
        },
        "AnnualSettlementCheckList": {
          "$ref": "#/definitions/AnnualSettlementCheckList"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualSettlementCheckList": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "IsAllCustomerInvoicesPaid": {
          "type": "boolean"
        },
        "CreatedBy": {
          "type": "string"
        },
        "IsAmeldingOK": {
          "type": "boolean"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsAllJournalsDone": {
          "type": "boolean"
        },
        "StatusCode": {
          "type": "integer"
        },
        "AreAllPreviousYearsEndedAndBalances": {
          "type": "boolean"
        },
        "IsOnAllowList": {
          "type": "boolean"
        },
        "IsAssetsOK": {
          "type": "boolean"
        },
        "IsStockOK": {
          "type": "boolean"
        },
        "IsShareCapitalOK": {
          "type": "boolean"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "IsAllSupplierInvoicesPaid": {
          "type": "boolean"
        },
        "IsVatReportOK": {
          "type": "boolean"
        },
        "IsCalculativeDepreciationsOK": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TaxReport": {
      "properties": {
        "Data": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string",
          "maxLength": 255
        },
        "StatusCode": {
          "type": "integer"
        },
        "Year": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "AnnualSettlementID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EntityValidationRule": {
      "properties": {
        "Level": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Value": {
          "type": "string"
        },
        "EntityType": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PropertyName": {
          "type": "string"
        },
        "Operation": {
          "type": "string"
        },
        "Operator": {
          "type": "string"
        },
        "OnConflict": {
          "type": "string"
        },
        "System": {
          "type": "boolean"
        },
        "SyncKey": {
          "type": "string"
        },
        "ChangedByCompany": {
          "type": "boolean"
        },
        "Message": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EntityValidationRuleTemplate": {
      "properties": {
        "Level": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Value": {
          "type": "string"
        },
        "EntityType": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "PropertyName": {
          "type": "string"
        },
        "Operation": {
          "type": "string"
        },
        "Operator": {
          "type": "string"
        },
        "OnConflict": {
          "type": "string"
        },
        "System": {
          "type": "boolean"
        },
        "SyncKey": {
          "type": "string"
        },
        "ChangedByCompany": {
          "type": "boolean"
        },
        "Message": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ComplexValidationRule": {
      "properties": {
        "Level": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Operation": {
          "type": "string"
        },
        "OnConflict": {
          "type": "string"
        },
        "ValidationCode": {
          "type": "integer"
        },
        "System": {
          "type": "boolean"
        },
        "SyncKey": {
          "type": "string"
        },
        "ChangedByCompany": {
          "type": "boolean"
        },
        "Message": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ComplexValidationRuleTemplate": {
      "properties": {
        "Level": {
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Operation": {
          "type": "string"
        },
        "OnConflict": {
          "type": "string"
        },
        "ValidationCode": {
          "type": "integer"
        },
        "System": {
          "type": "boolean"
        },
        "SyncKey": {
          "type": "string"
        },
        "ChangedByCompany": {
          "type": "boolean"
        },
        "Message": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomField": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Nullable": {
          "type": "boolean"
        },
        "ModelID": {
          "type": "integer"
        },
        "DataType": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ValueList": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/ValueItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ValueItem": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Value": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Code": {
          "type": "string"
        },
        "Index": {
          "type": "integer"
        },
        "ValueListID": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ValueList": {
          "$ref": "#/definitions/ValueList"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ComponentLayoutDto": {
      "properties": {
        "Url": {
          "type": "string"
        },
        "BaseEntity": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Fields": {
          "items": {
            "$ref": "#/definitions/FieldLayoutDto"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FieldLayoutDto": {
      "properties": {
        "Section": {
          "type": "integer"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "Options": {
          "type": "string"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "EntityType": {
          "type": "string",
          "maxLength": 100
        },
        "Hidden": {
          "type": "boolean"
        },
        "Combo": {
          "type": "integer"
        },
        "Placement": {
          "type": "integer"
        },
        "ComponentLayoutID": {
          "type": "integer"
        },
        "Placeholder": {
          "type": "string",
          "maxLength": 500
        },
        "Url": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "Property": {
          "type": "string",
          "maxLength": 100
        },
        "Legend": {
          "type": "string",
          "maxLength": 100
        },
        "StatusCode": {
          "type": "integer"
        },
        "LineBreak": {
          "type": "boolean"
        },
        "DisplayField": {
          "type": "string",
          "maxLength": 255
        },
        "Label": {
          "type": "string",
          "maxLength": 100
        },
        "Alignment": {
          "type": "string"
        },
        "LookupEntityType": {
          "type": "string"
        },
        "FieldSet": {
          "type": "integer"
        },
        "ValueList": {
          "type": "string"
        },
        "Width": {
          "type": "string",
          "maxLength": 255
        },
        "Sectionheader": {
          "type": "string",
          "maxLength": 255
        },
        "FieldType": {
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "Description": {
          "type": "string",
          "maxLength": 100
        },
        "HelpText": {
          "type": "string",
          "maxLength": 100
        },
        "LookupField": {
          "type": "boolean"
        },
        "ReadOnly": {
          "type": "boolean"
        },
        "Validations": {
          "items": {
            "$ref": "#/definitions/EntityValidationRule"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AssignmentDetails": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TimeSheet": {
      "properties": {
        "Workflow": {
          "type": "string"
        },
        "ToDate": {
          "type": "date"
        },
        "FromDate": {
          "type": "date"
        },
        "Relation": {
          "$ref": "#/definitions/WorkRelation"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/TimeSheetItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TimeSheetItem": {
      "properties": {
        "WeekNumber": {
          "type": "integer"
        },
        "Overtime": {
          "type": "double"
        },
        "SickTime": {
          "type": "double"
        },
        "Date": {
          "type": "date"
        },
        "Status": {
          "type": "string"
        },
        "ValidTimeOff": {
          "type": "double"
        },
        "WeekDay": {
          "type": "integer"
        },
        "Invoicable": {
          "type": "double"
        },
        "Workflow": {
          "type": "string"
        },
        "IsWeekend": {
          "type": "boolean"
        },
        "StartTime": {
          "type": "date"
        },
        "ExpectedTime": {
          "type": "double"
        },
        "ValidTime": {
          "type": "double"
        },
        "TotalTime": {
          "type": "double"
        },
        "TimeOff": {
          "type": "double"
        },
        "Flextime": {
          "type": "double"
        },
        "EndTime": {
          "type": "date"
        },
        "Projecttime": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WorkBalanceDto": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "SumOvertime": {
          "type": "integer"
        },
        "Balancetype": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "ValidFrom": {
          "type": "date"
        },
        "CreatedAt": {
          "type": "date"
        },
        "IsStartBalance": {
          "type": "boolean"
        },
        "Days": {
          "type": "double"
        },
        "LastDayExpected": {
          "type": "integer"
        },
        "ValidTimeOff": {
          "type": "integer"
        },
        "BalanceFrom": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "BalanceDate": {
          "type": "date"
        },
        "Minutes": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "LastDayActual": {
          "type": "integer"
        },
        "WorkRelationID": {
          "type": "integer"
        },
        "ActualMinutes": {
          "type": "integer"
        },
        "Description": {
          "type": "string",
          "maxLength": 120
        },
        "ExpectedMinutes": {
          "type": "integer"
        },
        "WorkRelation": {
          "$ref": "#/definitions/WorkRelation"
        },
        "Previous": {
          "$ref": "#/definitions/BalanceInfo"
        },
        "Details": {
          "items": {
            "$ref": "#/definitions/FlexDetail"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BalanceInfo": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "BalanceDate": {
          "type": "date"
        },
        "Minutes": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FlexDetail": {
      "properties": {
        "Date": {
          "type": "date"
        },
        "ValidTimeOff": {
          "type": "integer"
        },
        "IsWeekend": {
          "type": "boolean"
        },
        "WorkedMinutes": {
          "type": "integer"
        },
        "ExpectedMinutes": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContactSearchServiceResponse": {
      "properties": {
        "ObjectName": {
          "type": "string"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "Success": {
          "type": "boolean"
        },
        "Method": {
          "type": "string"
        },
        "ErrorCode": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CampaignTemplateDataModel": {
      "properties": {
        "CompanySettings": {
          "$ref": "#/definitions/CompanySettings"
        },
        "Invoice": {
          "$ref": "#/definitions/CustomerInvoice"
        },
        "Order": {
          "$ref": "#/definitions/CustomerOrder"
        },
        "Quote": {
          "$ref": "#/definitions/CustomerQuote"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "IActionResult": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "InvoiceAndReminderStatus": {
      "properties": {
        "CurrencyCodeID": {
          "type": "integer"
        },
        "CurrencyCodeShortCode": {
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "integer"
        },
        "NextReminderType": {
          "type": "integer"
        },
        "LastReminderType": {
          "type": "integer"
        },
        "LastRemindedDate": {
          "type": "date"
        },
        "InvoiceEmailAddress": {
          "type": "string"
        },
        "DebtCollectionCount": {
          "type": "integer"
        },
        "TaxInclusiveAmount": {
          "type": "double"
        },
        "CustomerName": {
          "type": "string"
        },
        "LastDistributionStatusCode": {
          "type": "integer"
        },
        "TotalFeeCurrency": {
          "type": "double"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "DepartmentName": {
          "type": "string"
        },
        "ProjectName": {
          "type": "string"
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "RestAmountInclFeeAndInterest": {
          "type": "double"
        },
        "RestAmountInclFeeAndInterestCurrency": {
          "type": "double"
        },
        "TaxInclusiveAmountCurrency": {
          "type": "double"
        },
        "InvoiceDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "ReminderCount": {
          "type": "integer"
        },
        "CustomerNumber": {
          "type": "integer"
        },
        "NextDueDate": {
          "type": "date"
        },
        "RestAmount": {
          "type": "double"
        },
        "TotalInterestFeeCurrency": {
          "type": "double"
        },
        "ProjectNumber": {
          "type": "string"
        },
        "Fee": {
          "type": "double"
        },
        "CreateNextReminderDate": {
          "type": "date"
        },
        "TotalInterestFee": {
          "type": "double"
        },
        "CustomerID": {
          "type": "integer"
        },
        "NextReminderNumber": {
          "type": "integer"
        },
        "CustomerEmailAddress": {
          "type": "string"
        },
        "LastReminderID": {
          "type": "integer"
        },
        "ExternalReference": {
          "type": "string"
        },
        "TotalFee": {
          "type": "double"
        },
        "RestAmountCurrency": {
          "type": "double"
        },
        "LastReminderNumber": {
          "type": "integer"
        },
        "DepartmentNumber": {
          "type": "string"
        },
        "DontSendReminders": {
          "type": "boolean"
        },
        "InvoicePaymentDueDate": {
          "type": "date"
        },
        "CurrencyCodeCode": {
          "type": "string"
        },
        "FeeCurrency": {
          "type": "double"
        },
        "DebtCollectionNoticeCount": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "InvoicesAndRemindersReadyToRemind": {
      "properties": {
        "CurrencyCodeID": {
          "type": "integer"
        },
        "Interest": {
          "type": "double"
        },
        "CurrencyCodeShortCode": {
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "integer"
        },
        "TaxInclusiveAmount": {
          "type": "double"
        },
        "CustomerName": {
          "type": "string"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "TaxInclusiveAmountCurrency": {
          "type": "double"
        },
        "InvoiceDate": {
          "type": "date"
        },
        "StatusCode": {
          "type": "integer"
        },
        "CustomerNumber": {
          "type": "integer"
        },
        "RestAmount": {
          "type": "double"
        },
        "Fee": {
          "type": "double"
        },
        "DueDate": {
          "type": "date"
        },
        "CustomerID": {
          "type": "integer"
        },
        "CustomerInvoiceReminderID": {
          "type": "integer"
        },
        "ReminderNumber": {
          "type": "integer"
        },
        "ExternalReference": {
          "type": "string"
        },
        "RestAmountCurrency": {
          "type": "double"
        },
        "DontSendReminders": {
          "type": "boolean"
        },
        "EmailAddress": {
          "type": "string"
        },
        "CurrencyCodeCode": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PrerunInvoiceReminderResult": {
      "properties": {
        "NotDueInvoices": {
          "type": "integer"
        },
        "InvoicesWithReminderStop": {
          "type": "integer"
        },
        "InvoicesWithNoMoreRules": {
          "type": "integer"
        },
        "Rules": {
          "items": {
            "$ref": "#/definitions/PrerunInvoiceReminderResultRule"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PrerunInvoiceReminderResultRule": {
      "properties": {
        "Reminders": {
          "type": "integer"
        },
        "ReminderNumber": {
          "type": "integer"
        },
        "RuleTitle": {
          "type": "string"
        },
        "ReminderRuleType": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CanDistributeReminderResult": {
      "properties": {
        "RemindersWithDistributionPlan": {
          "type": "integer"
        },
        "HasPrintService": {
          "type": "boolean"
        },
        "RemindersWithEmail": {
          "type": "integer"
        },
        "CanDistributeAllRemindersUsingPlan": {
          "type": "boolean"
        },
        "RemindersWithPrint": {
          "type": "integer"
        },
        "AlreadySentCount": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DistributeInvoiceReminderInput": {
      "properties": {
        "SendByPrintServiceIfPossible": {
          "type": "boolean"
        },
        "SendByEmailIfPossible": {
          "type": "boolean"
        },
        "SendByDistributionPlanFirst": {
          "type": "boolean"
        },
        "SendRemainingToCasehandler": {
          "type": "boolean"
        },
        "CasehandlerEmail": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TradeHeaderCalculationSummary": {
      "properties": {
        "SumVatBasisCurrency": {
          "type": "double"
        },
        "SumVatCurrency": {
          "type": "double"
        },
        "SumTotalExVatCurrency": {
          "type": "double"
        },
        "SumDiscount": {
          "type": "double"
        },
        "DecimalRoundingCurrency": {
          "type": "double"
        },
        "SumTotalIncVat": {
          "type": "double"
        },
        "DecimalRounding": {
          "type": "double"
        },
        "SumDiscountCurrency": {
          "type": "double"
        },
        "SumVat": {
          "type": "double"
        },
        "SumNoVatBasisCurrency": {
          "type": "double"
        },
        "SumTotalIncVatCurrency": {
          "type": "double"
        },
        "SumTotalExVat": {
          "type": "double"
        },
        "SumNoVatBasis": {
          "type": "double"
        },
        "SumVatBasis": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatCalculationSummary": {
      "properties": {
        "SumVatBasisCurrency": {
          "type": "double"
        },
        "SumVatCurrency": {
          "type": "double"
        },
        "SumVat": {
          "type": "double"
        },
        "SumVatBasis": {
          "type": "double"
        },
        "VatPercent": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "InvoicePaymentData": {
      "properties": {
        "CurrencyCodeID": {
          "type": "integer"
        },
        "AgioAmount": {
          "type": "double"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "PaymentID": {
          "type": "string"
        },
        "BankChargeAccountID": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "PaymentDate": {
          "type": "date"
        },
        "FromBankAccountID": {
          "type": "integer"
        },
        "Amount": {
          "type": "double"
        },
        "AgioAccountID": {
          "type": "integer"
        },
        "BankChargeAmount": {
          "type": "double"
        },
        "AccountID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "InvoiceSummary": {
      "properties": {
        "SumCreditedAmount": {
          "type": "double"
        },
        "SumTotalAmount": {
          "type": "double"
        },
        "SumRestAmount": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerNoAndName": {
      "properties": {
        "Number": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "InvoicePayment": {
      "properties": {
        "AmountCurrency": {
          "type": "double"
        },
        "FinancialDate": {
          "type": "date"
        },
        "Amount": {
          "type": "double"
        },
        "JournalEntryNumber": {
          "type": "string"
        },
        "JournalEntryLineID": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "OrderOffer": {
      "properties": {
        "CostPercentage": {
          "type": "double"
        },
        "Status": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "OrderId": {
          "type": "string"
        },
        "Reasons": {
          "items": {
            "$ref": "#/definitions/Reason"
          },
          "type": "array"
        },
        "PurchaseAmount": {
          "$ref": "#/definitions/AmountDetail"
        },
        "InvoiceAmount": {
          "$ref": "#/definitions/AmountDetail"
        },
        "FinancialCost": {
          "$ref": "#/definitions/AmountDetail"
        },
        "Fee": {
          "$ref": "#/definitions/AmountDetail"
        },
        "TotalCost": {
          "$ref": "#/definitions/AmountDetail"
        },
        "DisbursementAmount": {
          "$ref": "#/definitions/AmountDetail"
        },
        "Limits": {
          "$ref": "#/definitions/Limits"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Reason": {
      "properties": {
        "ReasonHelpLink": {
          "type": "string"
        },
        "ReasonDescription": {
          "type": "string"
        },
        "ReasonCode": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AmountDetail": {
      "properties": {
        "Currency": {
          "type": "string"
        },
        "Amount": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Limits": {
      "properties": {
        "RemainingLimit": {
          "type": "double"
        },
        "MaxInvoiceAmount": {
          "type": "double"
        },
        "Limit": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AmeldingAgaAndTaxSums": {
      "properties": {
        "AccountNumber": {
          "type": "string"
        },
        "KIDFinancialTax": {
          "type": "string"
        },
        "MessageID": {
          "type": "string"
        },
        "GarnishmentTax": {
          "type": "double"
        },
        "period": {
          "type": "integer"
        },
        "KIDGarnishment": {
          "type": "string"
        },
        "TaxDraw": {
          "type": "double"
        },
        "DueDate": {
          "type": "date"
        },
        "KIDEmploymentTax": {
          "type": "string"
        },
        "KIDTaxDraw": {
          "type": "string"
        },
        "FinancialTax": {
          "type": "double"
        },
        "EmploymentTax": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PayrollRunInAmeldingPeriod": {
      "properties": {
        "PayrollrunDescription": {
          "type": "string"
        },
        "PayrollrunPaydate": {
          "type": "date"
        },
        "CanGenerateAddition": {
          "type": "boolean"
        },
        "AmeldingSentdate": {
          "type": "date"
        },
        "PayrollrunID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PayAgaTaxDTO": {
      "properties": {
        "correctPennyDiff": {
          "type": "boolean"
        },
        "payDate": {
          "type": "date"
        },
        "payFinancialTax": {
          "type": "boolean"
        },
        "payGarnishment": {
          "type": "boolean"
        },
        "payAga": {
          "type": "boolean"
        },
        "payTaxDraw": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ValidationMessage": {
      "properties": {
        "Level": {
          "type": "string"
        },
        "EntityID": {
          "type": "integer"
        },
        "ID": {
          "type": "integer"
        },
        "EntityType": {
          "type": "string"
        },
        "PropertyName": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "EntityValidationRule": {
          "$ref": "#/definitions/EntityValidationRule"
        },
        "ComplexValidationRule": {
          "$ref": "#/definitions/ComplexValidationRule"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AmeldingSumUp": {
      "properties": {
        "entities": {
          "items": {
            "$ref": "#/definitions/AmeldingEntity"
          },
          "type": "array"
        },
        "agadetails": {
          "items": {
            "$ref": "#/definitions/AGADetails"
          },
          "type": "array"
        },
        "totals": {
          "$ref": "#/definitions/Totals"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AmeldingEntity": {
      "properties": {
        "sums": {
          "$ref": "#/definitions/Sums"
        },
        "employees": {
          "items": {
            "$ref": "#/definitions/Employees"
          },
          "type": "array"
        },
        "transactionTypes": {
          "items": {
            "$ref": "#/definitions/TransactionTypes"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Sums": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Employees": {
      "properties": {
        "arbeidsforhold": {
          "items": {
            "$ref": "#/definitions/Employments"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Employments": {
      "properties": {
        "permisjon": {
          "items": {
            "$ref": "#/definitions/EmploymentLeaves"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmploymentLeaves": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TransactionTypes": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AGADetails": {
      "properties": {
        "zoneName": {
          "type": "string"
        },
        "baseAmount": {
          "type": "double"
        },
        "sectorName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "rate": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Totals": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualStatement": {
      "properties": {
        "EmployerCountryCode": {
          "type": "string"
        },
        "EmployerWebAddress": {
          "type": "string"
        },
        "EmployeeSSn": {
          "type": "string"
        },
        "EmployerEmail": {
          "type": "string"
        },
        "EmployerCity": {
          "type": "string"
        },
        "EmployeeName": {
          "type": "string"
        },
        "VacationPayBase": {
          "type": "double"
        },
        "EmployeeAddress": {
          "type": "string"
        },
        "EmployerTaxMandatory": {
          "type": "boolean"
        },
        "EmployerName": {
          "type": "string"
        },
        "EmployerOrgNr": {
          "type": "string"
        },
        "EmployeeCity": {
          "type": "string"
        },
        "EmployeeMunicipalNumber": {
          "type": "string"
        },
        "EmployerAddress": {
          "type": "string"
        },
        "EmployeeNumber": {
          "type": "integer"
        },
        "EmployerPostCode": {
          "type": "string"
        },
        "Year": {
          "type": "integer"
        },
        "EmployerCountry": {
          "type": "string"
        },
        "EmployeeMunicipalName": {
          "type": "string"
        },
        "EmployeePostCode": {
          "type": "string"
        },
        "EmployerPhoneNumber": {
          "type": "string"
        },
        "Contributions": {
          "items": {
            "$ref": "#/definitions/AnnualStatementLine"
          },
          "type": "array"
        },
        "PensionOrBenefits": {
          "items": {
            "$ref": "#/definitions/AnnualStatementLine"
          },
          "type": "array"
        },
        "Deductions": {
          "items": {
            "$ref": "#/definitions/AnnualStatementLine"
          },
          "type": "array"
        },
        "Draws": {
          "items": {
            "$ref": "#/definitions/AnnualStatementLine"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualStatementLine": {
      "properties": {
        "TaxReturnPost": {
          "type": "string"
        },
        "LineIndex": {
          "type": "integer"
        },
        "SupplementPackageName": {
          "type": "string"
        },
        "IsDeduction": {
          "type": "boolean"
        },
        "Sum": {
          "type": "double"
        },
        "Amount": {
          "type": "double"
        },
        "Description": {
          "type": "string"
        },
        "Supplements": {
          "items": {
            "$ref": "#/definitions/SupplementInfo"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SupplementInfo": {
      "properties": {
        "ValueBool": {
          "type": "boolean"
        },
        "ValueType": {
          "type": "string"
        },
        "ValueMoney": {
          "type": "double"
        },
        "ValueDate": {
          "type": "date"
        },
        "Name": {
          "type": "string"
        },
        "ValueDate2": {
          "type": "date"
        },
        "WageTypeSupplementID": {
          "type": "integer"
        },
        "ValueString": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualStatementReportSetup": {
      "properties": {
        "Mail": {
          "$ref": "#/definitions/AnnualStatementEmailInfo"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualStatementEmailInfo": {
      "properties": {
        "Subject": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "HandleState": {
      "properties": {
        "inState": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TaxCardReadStatus": {
      "properties": {
        "Text": {
          "type": "string"
        },
        "mainStatus": {
          "type": "string"
        },
        "IsJob": {
          "type": "boolean"
        },
        "Title": {
          "type": "string"
        },
        "employeestatus": {
          "items": {
            "$ref": "#/definitions/EmployeeStatus"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmployeeStatus": {
      "properties": {
        "ssn": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "employeeID": {
          "type": "integer"
        },
        "employeeNumber": {
          "type": "integer"
        },
        "year": {
          "type": "integer"
        },
        "info": {
          "type": "string"
        },
        "changedFields": {
          "items": {
            "$ref": "#/definitions/FieldsChanged"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FieldsChanged": {
      "properties": {
        "valFrom": {
          "type": "string"
        },
        "valTo": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmploymentHistoryRecord": {
      "properties": {
        "RegulativeStepNr": {
          "type": "integer"
        },
        "HourRate": {
          "type": "double"
        },
        "MonthRate": {
          "type": "double"
        },
        "RegulativeGroupID": {
          "type": "integer"
        },
        "WorkPercent": {
          "type": "double"
        },
        "ChangedAt": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CodeListRowsCodeListRow": {
      "properties": {
        "Value2": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Value1": {
          "type": "string"
        },
        "Value3": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MonthlyPay": {
      "properties": {
        "BasicPay": {
          "type": "double"
        },
        "PeriodText": {
          "type": "string"
        },
        "Period": {
          "type": "integer"
        },
        "SalaryTransactions": {
          "items": {
            "$ref": "#/definitions/SalaryTransaction"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Paycheck": {
      "properties": {
        "employee": {
          "$ref": "#/definitions/Employee"
        },
        "payroll": {
          "$ref": "#/definitions/PayrollRun"
        },
        "transactions": {
          "items": {
            "$ref": "#/definitions/SalaryTransaction"
          },
          "type": "array"
        },
        "sumOnPay": {
          "$ref": "#/definitions/SumOnRun"
        },
        "sumOnYear": {
          "$ref": "#/definitions/SumOnYear"
        },
        "sumVacationLastYear": {
          "$ref": "#/definitions/VacationPayLastYear"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SumOnRun": {
      "properties": {
        "tax": {
          "type": "double"
        },
        "employeeID": {
          "type": "integer"
        },
        "grossPayment": {
          "type": "double"
        },
        "netPayment": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SumOnYear": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VacationPayLastYear": {
      "properties": {
        "paidHolidayPay": {
          "type": "double"
        },
        "baseVacation": {
          "type": "double"
        },
        "employeeID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryTransactionPay": {
      "properties": {
        "TaxBankAccountID": {
          "type": "integer"
        },
        "CompanyCity": {
          "type": "string"
        },
        "CompanyAddress": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "Withholding": {
          "type": "double"
        },
        "CompanyBankAccountID": {
          "type": "integer"
        },
        "CompanyPostalCode": {
          "type": "string"
        },
        "PaymentDate": {
          "type": "date"
        },
        "SalaryBankAccountID": {
          "type": "integer"
        },
        "PayList": {
          "items": {
            "$ref": "#/definitions/SalaryTransactionPayLine"
          },
          "type": "array"
        },
        "SalaryBalancePayList": {
          "items": {
            "$ref": "#/definitions/SalaryBalancePayLine"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryTransactionPayLine": {
      "properties": {
        "EmployeeName": {
          "type": "string"
        },
        "Tax": {
          "type": "double"
        },
        "City": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "EmployeeNumber": {
          "type": "integer"
        },
        "Account": {
          "type": "string"
        },
        "NetPayment": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryBalancePayLine": {
      "properties": {
        "Text": {
          "type": "string"
        },
        "Sum": {
          "type": "double"
        },
        "Account": {
          "type": "string"
        },
        "Kid": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PostingSummary": {
      "properties": {
        "SubEntity": {
          "$ref": "#/definitions/SubEntity"
        },
        "PayrollRun": {
          "$ref": "#/definitions/PayrollRun"
        },
        "PostList": {
          "items": {
            "$ref": "#/definitions/JournalEntryLine"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PaycheckReportSetup": {
      "properties": {
        "Mail": {
          "$ref": "#/definitions/PaycheckEmailInfo"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PaycheckEmailInfo": {
      "properties": {
        "GroupByWageType": {
          "type": "boolean"
        },
        "Subject": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "ReportID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "WorkItemToSalary": {
      "properties": {
        "PayrollRunID": {
          "type": "integer"
        },
        "Rate": {
          "type": "double"
        },
        "WageType": {
          "$ref": "#/definitions/WageType"
        },
        "Employment": {
          "$ref": "#/definitions/Employment"
        },
        "WorkItems": {
          "items": {
            "$ref": "#/definitions/WorkItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Reconciliation": {
      "properties": {
        "ToPeriod": {
          "type": "integer"
        },
        "BookedPayruns": {
          "type": "integer"
        },
        "CreatedPayruns": {
          "type": "integer"
        },
        "FromPeriod": {
          "type": "integer"
        },
        "CalculatedPayruns": {
          "type": "integer"
        },
        "Year": {
          "type": "integer"
        },
        "Groups": {
          "items": {
            "$ref": "#/definitions/ReconciliationGroup"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReconciliationGroup": {
      "properties": {
        "AccountNumber": {
          "type": "string"
        },
        "Sum": {
          "type": "double"
        },
        "Lines": {
          "items": {
            "$ref": "#/definitions/ReconciliationLine"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReconciliationLine": {
      "properties": {
        "HasEmploymentTax": {
          "type": "boolean"
        },
        "WageTypeName": {
          "type": "string"
        },
        "IncomeType": {
          "type": "string"
        },
        "Benefit": {
          "type": "string"
        },
        "Sum": {
          "type": "double"
        },
        "WageTypeNumber": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UnionReport": {
      "properties": {
        "ToDate": {
          "type": "date"
        },
        "Year": {
          "type": "integer"
        },
        "FromDate": {
          "type": "date"
        },
        "Summaries": {
          "items": {
            "$ref": "#/definitions/UnionSummary"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UnionSummary": {
      "properties": {
        "SupplierID": {
          "type": "integer"
        },
        "Supplier": {
          "$ref": "#/definitions/Supplier"
        },
        "Members": {
          "items": {
            "$ref": "#/definitions/UnionMember"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UnionMember": {
      "properties": {
        "Ensurance": {
          "type": "double"
        },
        "OUO": {
          "type": "double"
        },
        "Name": {
          "type": "string"
        },
        "UnionDraw": {
          "type": "double"
        },
        "MemberNumber": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryTransactionSums": {
      "properties": {
        "baseTableTax": {
          "type": "double"
        },
        "Payrun": {
          "type": "integer"
        },
        "percentTax": {
          "type": "double"
        },
        "baseAGA": {
          "type": "double"
        },
        "calculatedVacationPay": {
          "type": "double"
        },
        "baseVacation": {
          "type": "double"
        },
        "paidAdvance": {
          "type": "double"
        },
        "Employee": {
          "type": "integer"
        },
        "paidPension": {
          "type": "double"
        },
        "calculatedAGA": {
          "type": "double"
        },
        "calculatedFinancialTax": {
          "type": "double"
        },
        "tableTax": {
          "type": "double"
        },
        "manualTax": {
          "type": "double"
        },
        "grossPayment": {
          "type": "double"
        },
        "basePercentTax": {
          "type": "double"
        },
        "netPayment": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SalaryTransactionPeriodSums": {
      "properties": {
        "ToPeriod": {
          "type": "integer"
        },
        "AgaRate": {
          "type": "double"
        },
        "AgaZone": {
          "type": "string"
        },
        "FromPeriod": {
          "type": "integer"
        },
        "Year": {
          "type": "integer"
        },
        "OrgNumber": {
          "type": "string"
        },
        "MunicipalName": {
          "type": "string"
        },
        "Sums": {
          "$ref": "#/definitions/SalaryTransactionSums"
        },
        "Aga": {
          "$ref": "#/definitions/AGACalculation"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "code": {
      "properties": {
        "inngaarIGrunnlagForTrekk": {
          "type": "string"
        },
        "gyldigtil": {
          "type": "string"
        },
        "fordel": {
          "type": "string"
        },
        "skatteOgAvgiftregel": {
          "type": "string"
        },
        "gmlcode": {
          "type": "string"
        },
        "postnr": {
          "type": "string"
        },
        "kunfranav": {
          "type": "string"
        },
        "gyldigfom": {
          "type": "string"
        },
        "uninavn": {
          "type": "string"
        },
        "utloeserArbeidsgiveravgift": {
          "type": "string"
        },
        "loennsinntekt": {
          "$ref": "#/definitions/Loennsinntekt"
        },
        "ytelseFraOffentlige": {
          "$ref": "#/definitions/YtelseFraOffentlige"
        },
        "pensjonEllerTrygd": {
          "$ref": "#/definitions/PensjonEllerTrygd"
        },
        "naeringsinntekt": {
          "$ref": "#/definitions/Naeringsinntekt"
        },
        "fradrag": {
          "$ref": "#/definitions/Fradrag"
        },
        "forskuddstrekk": {
          "$ref": "#/definitions/Forskuddstrekk"
        },
        "utleggstrekk": {
          "$ref": "#/definitions/Utleggstrekk"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Loennsinntekt": {
      "properties": {
        "antall": {
          "type": "double"
        },
        "antallSpecified": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "YtelseFraOffentlige": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PensjonEllerTrygd": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Naeringsinntekt": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Fradrag": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Forskuddstrekk": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Utleggstrekk": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CreateCompanyDetails": {
      "properties": {
        "ContractType": {
          "type": "integer"
        },
        "IsTest": {
          "type": "boolean"
        },
        "CopyFiles": {
          "type": "boolean"
        },
        "LicenseKey": {
          "type": "string"
        },
        "ContractID": {
          "type": "integer"
        },
        "CompanyName": {
          "type": "string"
        },
        "TemplateCompanyKey": {
          "type": "string"
        },
        "IsTemplate": {
          "type": "boolean"
        },
        "ProductNames": {
          "type": "string"
        },
        "CompanySettings": {
          "$ref": "#/definitions/CompanySettings"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UserDto": {
      "properties": {
        "IsAutobankAdmin": {
          "type": "boolean"
        },
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "Protected": {
          "type": "boolean"
        },
        "Email": {
          "type": "string",
          "maxLength": 255
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "UserName": {
          "type": "string",
          "maxLength": 255
        },
        "PermissionHandling": {
          "type": "string"
        },
        "StatusCode": {
          "type": "integer"
        },
        "LastLogin": {
          "type": "date"
        },
        "PhoneNumber": {
          "type": "string",
          "maxLength": 255
        },
        "DisplayName": {
          "type": "string",
          "maxLength": 255
        },
        "BankIntegrationUserName": {
          "type": "string",
          "maxLength": 255
        },
        "UpdatedBy": {
          "type": "string"
        },
        "PhoneNumberConfirmed": {
          "type": "boolean"
        },
        "GlobalIdentity": {
          "type": "string"
        },
        "HasAgreedToImportDisclaimer": {
          "type": "boolean"
        },
        "License": {
          "$ref": "#/definitions/UserLicenseInformation"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UserLicenseInformation": {
      "properties": {
        "Comment": {
          "type": "string"
        },
        "UserLicenseKey": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UserLicenseEndDate": {
          "type": "date"
        },
        "GlobalIdentity": {
          "type": "string"
        },
        "CustomerInfo": {
          "$ref": "#/definitions/CustomerInfo"
        },
        "CustomerAgreement": {
          "$ref": "#/definitions/CustomerLicenseAgreementInfo"
        },
        "UserType": {
          "$ref": "#/definitions/UserLicenseType"
        },
        "Company": {
          "$ref": "#/definitions/CompanyLicenseInfomation"
        },
        "ContractType": {
          "$ref": "#/definitions/ContractLicenseType"
        },
        "UserLicenseAgreement": {
          "$ref": "#/definitions/LicenseAgreementInfo"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerInfo": {
      "properties": {
        "CustomerType": {
          "type": "integer"
        },
        "IsRoamingUser": {
          "type": "boolean"
        },
        "HasExternalAccountant": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CustomerLicenseAgreementInfo": {
      "properties": {
        "HasAgreedToLicense": {
          "type": "boolean"
        },
        "CanAgreeToLicense": {
          "type": "boolean"
        },
        "AgreementId": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UserLicenseType": {
      "properties": {
        "EndDate": {
          "type": "date"
        },
        "TypeName": {
          "type": "string"
        },
        "TypeID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CompanyLicenseInfomation": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "Key": {
          "type": "string"
        },
        "ContactPerson": {
          "type": "string"
        },
        "ContractID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "EndDate": {
          "type": "date"
        },
        "ContactEmail": {
          "type": "string"
        },
        "Agency": {
          "$ref": "#/definitions/Agency"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Agency": {
      "properties": {
        "CompanyKey": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ContractLicenseType": {
      "properties": {
        "TrialExpiration": {
          "type": "date"
        },
        "StartDate": {
          "type": "date"
        },
        "TypeName": {
          "type": "string"
        },
        "TypeID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "LicenseAgreementInfo": {
      "properties": {
        "HasAgreedToLicense": {
          "type": "boolean"
        },
        "AgreementId": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CreateBankUserDTO": {
      "properties": {
        "Password": {
          "type": "string"
        },
        "AdminPassword": {
          "type": "string"
        },
        "IsAdmin": {
          "type": "boolean"
        },
        "Phone": {
          "type": "string"
        },
        "AdminUserId": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ChangeAutobankPasswordDTO": {
      "properties": {
        "NewPassword": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankVerificationDto": {
      "properties": {
        "ClientID": {
          "type": "string"
        },
        "IsVerified": {
          "type": "boolean"
        },
        "VerifiedUntil": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ActiveNumberSeriesTask": {
      "properties": {
        "NumberSeriesTask": {
          "$ref": "#/definitions/NumberSeriesTask"
        },
        "DefaultNumberSeries": {
          "$ref": "#/definitions/NumberSeries"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SplitFileResult": {
      "properties": {
        "FirstPart": {
          "$ref": "#/definitions/File"
        },
        "SecondPart": {
          "$ref": "#/definitions/File"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SplitFileMultipeResult": {
      "properties": {
        "Parts": {
          "items": {
            "$ref": "#/definitions/File"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "FreeAmountSummary": {
      "properties": {
        "RestFreeAmount": {
          "type": "integer"
        },
        "SubEntitiesSums": {
          "items": {
            "$ref": "#/definitions/SubEntityAgaSums"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SubEntityAgaSums": {
      "properties": {
        "SubEntity": {
          "$ref": "#/definitions/SubEntity"
        },
        "Sums": {
          "$ref": "#/definitions/AGASums"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AGASums": {
      "properties": {
        "UsedFreeAmount": {
          "type": "integer"
        },
        "MaxFreeAmount": {
          "type": "integer"
        },
        "GrantSum": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AuthenticationChallengeBE": {
      "properties": {
        "ValidFrom": {
          "type": "date"
        },
        "ValidTo": {
          "type": "date"
        },
        "Status": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "ExtensionData": {
          "$ref": "#/definitions/ExtensionDataObject"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ExtensionDataObject": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AltinnAuthRequest": {
      "properties": {
        "UserPassword": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "PreferredLogin": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "A06Options": {
      "properties": {
        "IncludeInfoPerPerson": {
          "type": "boolean"
        },
        "ToPeriod": {
          "type": "string"
        },
        "IncludeEmployments": {
          "type": "boolean"
        },
        "FromPeriod": {
          "type": "string"
        },
        "IncludeIncome": {
          "type": "boolean"
        },
        "Year": {
          "type": "integer"
        },
        "ReportType": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "A07Response": {
      "properties": {
        "Data": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        },
        "mainStatus": {
          "type": "string"
        },
        "DataType": {
          "type": "string"
        },
        "DataName": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SelfEmployed": {
      "properties": {
        "year": {
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/SelfEmployedItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SelfEmployedItem": {
      "properties": {
        "number": {
          "type": "string"
        },
        "supplierID": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "amount": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SetIntegrationDataDto": {
      "properties": {
        "ExternalId": {
          "type": "string"
        },
        "IntegrationKey": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CurrencyRateData": {
      "properties": {
        "IsOverrideRate": {
          "type": "boolean"
        },
        "Factor": {
          "type": "double"
        },
        "RateDateOld": {
          "type": "date"
        },
        "RateDate": {
          "type": "date"
        },
        "ExchangeRate": {
          "type": "double"
        },
        "ExchangeRateOld": {
          "type": "double"
        },
        "FromCurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EmailDTO": {
      "properties": {
        "FromAddress": {
          "type": "string"
        },
        "CopyAddress": {
          "type": "string"
        },
        "Format": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "ReportID": {
          "type": "integer"
        },
        "Parameters": {
          "items": {
            "$ref": "#/definitions/ReportParameter"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReportParameter": {
      "properties": {
        "Value": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DistributionPlanElementValidation": {
      "properties": {
        "ElementType": {
          "type": "string"
        },
        "ElementTypeName": {
          "type": "string"
        },
        "Priority": {
          "type": "integer"
        },
        "IsValid": {
          "type": "boolean"
        },
        "PlanElement": {
          "$ref": "#/definitions/DistributionPlanElement"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SendEmail": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "EntityType": {
          "type": "string"
        },
        "Localization": {
          "type": "string"
        },
        "FromAddress": {
          "type": "string"
        },
        "CopyAddress": {
          "type": "string"
        },
        "ReportName": {
          "type": "string"
        },
        "ReplyAddress": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "ReportID": {
          "type": "integer"
        },
        "Attachments": {
          "items": {
            "$ref": "#/definitions/SendEmailAttachment"
          },
          "type": "array"
        },
        "Parameters": {
          "items": {
            "$ref": "#/definitions/ReportParameter"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SendEmailAttachment": {
      "properties": {
        "FileID": {
          "type": "integer"
        },
        "Attachment": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "RssList": {
      "properties": {
        "Url": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Items": {
          "items": {
            "$ref": "#/definitions/RssItem"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "RssItem": {
      "properties": {
        "Category": {
          "type": "string"
        },
        "Link": {
          "type": "string"
        },
        "PubDate": {
          "type": "string"
        },
        "Guid": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Enclosure": {
          "$ref": "#/definitions/Enclosure"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Enclosure": {
      "properties": {
        "Url": {
          "type": "string"
        },
        "Length": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SharingUpdates": {
      "properties": {
        "SharingStatusUpdates": {
          "items": {
            "$ref": "#/definitions/SharingStatusUpdate"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SharingStatusUpdate": {
      "properties": {
        "Status": {
          "type": "string"
        },
        "SharingId": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TeamReport": {
      "properties": {
        "ToDate": {
          "type": "date"
        },
        "FromDate": {
          "type": "date"
        },
        "Team": {
          "$ref": "#/definitions/Team"
        },
        "Members": {
          "items": {
            "$ref": "#/definitions/MemberDetails"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MemberDetails": {
      "properties": {
        "MinutesWorked": {
          "type": "integer"
        },
        "TotalBalance": {
          "type": "integer"
        },
        "ReportBalance": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ExpectedMinutes": {
          "type": "integer"
        },
        "WorkRelation": {
          "$ref": "#/definitions/WorkRelation"
        },
        "TimeOff": {
          "items": {
            "$ref": "#/definitions/FlexDetail"
          },
          "type": "array"
        },
        "MissingDays": {
          "items": {
            "$ref": "#/definitions/FlexDetail"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "TeamPositionDto": {
      "properties": {
        "Position": {
          "type": "string"
        },
        "PositionName": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "EHFCustomer": {
      "properties": {
        "orgname": {
          "type": "string"
        },
        "contactname": {
          "type": "string"
        },
        "contactemail": {
          "type": "string"
        },
        "orgno": {
          "type": "string"
        },
        "contactphone": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ServiceMetadataDto": {
      "properties": {
        "ServiceName": {
          "type": "string"
        },
        "SupportEmail": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountUsageReference": {
      "properties": {
        "EntityID": {
          "type": "integer"
        },
        "Entity": {
          "type": "string"
        },
        "Info": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MandatoryDimensionAccountReport": {
      "properties": {
        "Deleted": {
          "type": "boolean"
        },
        "ID": {
          "type": "integer"
        },
        "UpdatedAt": {
          "type": "date"
        },
        "AccountNumber": {
          "type": "string"
        },
        "MissingOnlyWarningsDimensionsMessage": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "date"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "journalEntryLineDraftID": {
          "type": "integer"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "MissingRequiredDimensionsMessage": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountDimension": {
      "properties": {
        "AccountNumber": {
          "type": "integer"
        },
        "DimensionsID": {
          "type": "integer"
        },
        "AccountID": {
          "type": "integer"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AssetResponseMessage": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AssetReportDTO": {
      "properties": {
        "GroupCode": {
          "type": "string"
        },
        "LastDepreciation": {
          "type": "date"
        },
        "Number": {
          "type": "integer"
        },
        "GroupName": {
          "type": "string"
        },
        "Lifetime": {
          "type": "integer"
        },
        "BalanceAccountNumber": {
          "type": "integer"
        },
        "BalanceAccountName": {
          "type": "string"
        },
        "CurrentValue": {
          "type": "double"
        },
        "Name": {
          "type": "string"
        },
        "DepreciationAccountNumber": {
          "type": "integer"
        },
        "Lines": {
          "items": {
            "$ref": "#/definitions/AssetReportLineDTO"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AssetReportLineDTO": {
      "properties": {
        "Value": {
          "type": "double"
        },
        "Date": {
          "type": "date"
        },
        "TypeID": {
          "type": "integer"
        },
        "Type": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AssetDto": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "PurchaseDate": {
          "type": "date"
        },
        "IncomingFinancialValue": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankBalanceDto": {
      "properties": {
        "BalanceBooked": {
          "type": "double"
        },
        "AccountNumber": {
          "type": "string"
        },
        "BalanceAvailable": {
          "type": "double"
        },
        "Date": {
          "type": "date"
        },
        "IsTestData": {
          "type": "boolean"
        },
        "Comment": {
          "type": "string"
        },
        "MainAccountName": {
          "type": "string"
        },
        "IsMainAccountBalance": {
          "type": "boolean"
        },
        "AccountName": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankData": {
      "properties": {
        "AccountNumber": {
          "type": "string"
        },
        "IBAN": {
          "type": "string"
        },
        "Bank": {
          "$ref": "#/definitions/Bank"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CreateBankIntegrationDTO": {
      "properties": {
        "ServiceProvider": {
          "type": "integer"
        },
        "IsBankBalance": {
          "type": "boolean"
        },
        "RequireTwoStage": {
          "type": "boolean"
        },
        "Email": {
          "type": "string"
        },
        "IsInbound": {
          "type": "boolean"
        },
        "Password": {
          "type": "string"
        },
        "Bank": {
          "type": "string"
        },
        "IsOutgoing": {
          "type": "boolean"
        },
        "UserName": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "BankAccountID": {
          "type": "integer"
        },
        "IsBankStatement": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "TuserName": {
          "type": "string"
        },
        "BankApproval": {
          "type": "boolean"
        },
        "BankAcceptance": {
          "type": "boolean"
        },
        "BankAccounts": {
          "items": {
            "$ref": "#/definitions/BankAccountDTO"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankAccountDTO": {
      "properties": {
        "IsBankBalance": {
          "type": "boolean"
        },
        "Bic": {
          "type": "string"
        },
        "IsInbound": {
          "type": "boolean"
        },
        "IsOutgoing": {
          "type": "boolean"
        },
        "BBAN": {
          "type": "string"
        },
        "IsBankStatement": {
          "type": "boolean"
        },
        "IBAN": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ZdataUpdateBankProperties": {
      "properties": {
        "IsBankBalance": {
          "type": "boolean"
        },
        "IsInbound": {
          "type": "boolean"
        },
        "Password": {
          "type": "string"
        },
        "IsOutgoing": {
          "type": "boolean"
        },
        "ServiceID": {
          "type": "string"
        },
        "IsBankStatement": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AutobankUserDTO": {
      "properties": {
        "Password": {
          "type": "string"
        },
        "UserID": {
          "type": "integer"
        },
        "IsAdmin": {
          "type": "boolean"
        },
        "Phone": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UpdateServiceStatusDTO": {
      "properties": {
        "ServiceID": {
          "type": "string"
        },
        "StatusCode": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "UpdateServiceIDDTO": {
      "properties": {
        "NewServiceID": {
          "type": "string"
        },
        "ServiceID": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankMatchSuggestion": {
      "properties": {
        "Amount": {
          "type": "double"
        },
        "Group": {
          "type": "string"
        },
        "JournalEntryLineID": {
          "type": "integer"
        },
        "BankStatementEntryID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MatchRequest": {
      "properties": {
        "JournalEntries": {
          "items": {
            "$ref": "#/definitions/MatchCandidate"
          },
          "type": "array"
        },
        "BankEntries": {
          "items": {
            "$ref": "#/definitions/MatchCandidate"
          },
          "type": "array"
        },
        "Settings": {
          "$ref": "#/definitions/MatchSettings"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MatchCandidate": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "Date": {
          "type": "date"
        },
        "IsBankEntry": {
          "type": "boolean"
        },
        "Closed": {
          "type": "boolean"
        },
        "Amount": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MatchSettings": {
      "properties": {
        "MaxDayOffset": {
          "type": "integer"
        },
        "MaxDelta": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReconciliationStatus": {
      "properties": {
        "TotalAmount": {
          "type": "double"
        },
        "NumberOfItems": {
          "type": "integer"
        },
        "IsReconciled": {
          "type": "boolean"
        },
        "Todate": {
          "type": "date"
        },
        "NumberOfUnReconciled": {
          "type": "integer"
        },
        "TotalUnreconciled": {
          "type": "double"
        },
        "AccountID": {
          "type": "integer"
        },
        "FromDate": {
          "type": "date"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BalanceDto": {
      "properties": {
        "BalanceInStatement": {
          "type": "double"
        },
        "StartDate": {
          "type": "date"
        },
        "EndDate": {
          "type": "date"
        },
        "Balance": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankfileFormat": {
      "properties": {
        "Separator": {
          "type": "string"
        },
        "IsFixed": {
          "type": "boolean"
        },
        "CustomFormat": {
          "type": "string"
        },
        "IsXml": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "FileExtension": {
          "type": "string"
        },
        "LinePrefix": {
          "type": "string"
        },
        "SkipRows": {
          "type": "integer"
        },
        "Columns": {
          "items": {
            "$ref": "#/definitions/BankfileColumn"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BankfileColumn": {
      "properties": {
        "IsFallBack": {
          "type": "boolean"
        },
        "DataType": {
          "type": "string"
        },
        "FieldMapping": {
          "type": "string"
        },
        "Length": {
          "type": "integer"
        },
        "StartPos": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ZdataEntryTransactionsDto": {
      "properties": {
        "StatementId": {
          "type": "string"
        },
        "Transactions": {
          "items": {
            "$ref": "#/definitions/ZdataTransactionDto"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ZdataTransactionDto": {
      "properties": {
        "AccountNumber": {
          "type": "string"
        },
        "AccountCurrency": {
          "type": "string"
        },
        "TransactionId": {
          "type": "string"
        },
        "BankInformation": {
          "type": "string"
        },
        "ValueDate": {
          "type": "date"
        },
        "EndBalance": {
          "type": "double"
        },
        "BookingDate": {
          "type": "date"
        },
        "AmountCurrency": {
          "type": "string"
        },
        "SenderAccount": {
          "type": "string"
        },
        "ArchiveReference": {
          "type": "string"
        },
        "Amount": {
          "type": "double"
        },
        "StatementId": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalSuggestion": {
      "properties": {
        "BankStatementRuleID": {
          "type": "integer"
        },
        "MatchWithEntryID": {
          "type": "integer"
        },
        "FinancialDate": {
          "type": "date"
        },
        "Amount": {
          "type": "double"
        },
        "Description": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "Account": {
          "$ref": "#/definitions/Account"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReportRow": {
      "properties": {
        "BudPeriod1": {
          "type": "double"
        },
        "ID": {
          "type": "integer"
        },
        "AccountNumber": {
          "type": "integer"
        },
        "Period4": {
          "type": "double"
        },
        "SubGroupName": {
          "type": "string"
        },
        "Period11": {
          "type": "double"
        },
        "BudPeriod9": {
          "type": "double"
        },
        "BudPeriod4": {
          "type": "double"
        },
        "IsSubTotal": {
          "type": "boolean"
        },
        "BudgetSum": {
          "type": "double"
        },
        "Period12": {
          "type": "double"
        },
        "BudPeriod5": {
          "type": "double"
        },
        "Period9": {
          "type": "double"
        },
        "Period5": {
          "type": "double"
        },
        "GroupName": {
          "type": "string"
        },
        "SumPeriodLastYearAccumulated": {
          "type": "double"
        },
        "Period10": {
          "type": "double"
        },
        "PrecedingBalance": {
          "type": "double"
        },
        "BudPeriod3": {
          "type": "double"
        },
        "BudPeriod12": {
          "type": "double"
        },
        "BudPeriod11": {
          "type": "double"
        },
        "BudPeriod8": {
          "type": "double"
        },
        "Period3": {
          "type": "double"
        },
        "Sum": {
          "type": "double"
        },
        "BudgetAccumulated": {
          "type": "double"
        },
        "Period8": {
          "type": "double"
        },
        "AccountName": {
          "type": "string"
        },
        "Period7": {
          "type": "double"
        },
        "AccountYear": {
          "type": "integer"
        },
        "Period6": {
          "type": "double"
        },
        "SumPeriodAccumulated": {
          "type": "double"
        },
        "Period2": {
          "type": "double"
        },
        "BudPeriod2": {
          "type": "double"
        },
        "BudPeriod6": {
          "type": "double"
        },
        "SumLastYear": {
          "type": "double"
        },
        "SubGroupNumber": {
          "type": "integer"
        },
        "SumPeriod": {
          "type": "double"
        },
        "Period1": {
          "type": "double"
        },
        "BudPeriod10": {
          "type": "double"
        },
        "BudPeriod7": {
          "type": "double"
        },
        "GroupNumber": {
          "type": "integer"
        },
        "SumPeriodLastYear": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "BudgetImport": {
      "properties": {
        "Budget": {
          "$ref": "#/definitions/Budget"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "LiquidityTableDTO": {
      "properties": {
        "BankBalance": {
          "type": "double"
        },
        "OverdueSupplierInvoices": {
          "type": "double"
        },
        "BankBalanceRefferance": {
          "type": "string"
        },
        "OverdueCustomerInvoices": {
          "type": "double"
        },
        "Period": {
          "items": {
            "$ref": "#/definitions/DetailsDTO"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "DetailsDTO": {
      "properties": {
        "Custumer": {
          "type": "double"
        },
        "VAT": {
          "type": "double"
        },
        "CustomPayments": {
          "type": "double"
        },
        "Liquidity": {
          "type": "double"
        },
        "Sum": {
          "type": "double"
        },
        "Supplier": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryData": {
      "properties": {
        "InvoiceNumber": {
          "type": "string"
        },
        "CreditVatTypeID": {
          "type": "integer"
        },
        "PostPostJournalEntryLineID": {
          "type": "integer"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "PaymentID": {
          "type": "string"
        },
        "CustomerInvoiceID": {
          "type": "integer"
        },
        "CreditAccountID": {
          "type": "integer"
        },
        "NumberSeriesTaskID": {
          "type": "integer"
        },
        "DebitVatTypeID": {
          "type": "integer"
        },
        "StatusCode": {
          "type": "integer"
        },
        "VatDeductionPercent": {
          "type": "integer"
        },
        "CreditAccountNumber": {
          "type": "integer"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "DueDate": {
          "type": "date"
        },
        "CurrencyID": {
          "type": "integer"
        },
        "JournalEntryDataAccrualID": {
          "type": "integer"
        },
        "DebitAccountNumber": {
          "type": "integer"
        },
        "FinancialDate": {
          "type": "date"
        },
        "Amount": {
          "type": "double"
        },
        "VatDate": {
          "type": "date"
        },
        "DebitAccountID": {
          "type": "integer"
        },
        "SupplierInvoiceID": {
          "type": "integer"
        },
        "SupplierInvoiceNo": {
          "type": "string"
        },
        "CustomerOrderID": {
          "type": "integer"
        },
        "NumberSeriesID": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "JournalEntryNo": {
          "type": "string"
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCode"
        },
        "DebitAccount": {
          "$ref": "#/definitions/Account"
        },
        "DebitVatType": {
          "$ref": "#/definitions/VatType"
        },
        "CreditAccount": {
          "$ref": "#/definitions/Account"
        },
        "CreditVatType": {
          "$ref": "#/definitions/VatType"
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "JournalEntryPaymentData": {
          "$ref": "#/definitions/JournalEntryPaymentData"
        },
        "JournalEntryDataAccrual": {
          "$ref": "#/definitions/Accrual"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryPaymentData": {
      "properties": {
        "PaymentData": {
          "$ref": "#/definitions/Payment"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryPeriodData": {
      "properties": {
        "PeriodNo": {
          "type": "integer"
        },
        "PeriodSumYear1": {
          "type": "double"
        },
        "PeriodName": {
          "type": "string"
        },
        "PeriodSumYear2": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryLineRequestSummary": {
      "properties": {
        "SumDebit": {
          "type": "double"
        },
        "SumBalance": {
          "type": "double"
        },
        "SumTaxBasisAmount": {
          "type": "double"
        },
        "SumCredit": {
          "type": "double"
        },
        "SumLedger": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryLinePostPostData": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "MarkedAgainstJournalEntryNumber": {
          "type": "string"
        },
        "CurrencyCodeID": {
          "type": "integer"
        },
        "CurrencyCodeShortCode": {
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "PeriodNo": {
          "type": "integer"
        },
        "JournalEntryTypeName": {
          "type": "string"
        },
        "SubAccountNumber": {
          "type": "integer"
        },
        "SumPostPostAmount": {
          "type": "double"
        },
        "CurrencyExchangeRate": {
          "type": "double"
        },
        "PaymentID": {
          "type": "string"
        },
        "SumPostPostAmountCurrency": {
          "type": "double"
        },
        "StatusCode": {
          "type": "integer"
        },
        "RestAmount": {
          "type": "double"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "DueDate": {
          "type": "date"
        },
        "SubAccountName": {
          "type": "string"
        },
        "NumberOfPayments": {
          "type": "integer"
        },
        "FinancialDate": {
          "type": "date"
        },
        "Amount": {
          "type": "double"
        },
        "MarkedAgainstJournalEntryLineID": {
          "type": "integer"
        },
        "JournalEntryNumber": {
          "type": "string"
        },
        "AccountYear": {
          "type": "integer"
        },
        "RestAmountCurrency": {
          "type": "double"
        },
        "Description": {
          "type": "string"
        },
        "JournalEntryID": {
          "type": "integer"
        },
        "JournalEntryNumberNumeric": {
          "type": "integer"
        },
        "CurrencyCodeCode": {
          "type": "string"
        },
        "Markings": {
          "items": {
            "$ref": "#/definitions/JournalEntryLinePostPostData"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "PaymentBatchApproveStatus": {
      "properties": {
        "StatusCode": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "ApprovalsRemaining": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CreatePaymentBatchDTO": {
      "properties": {
        "Password": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "HashValue": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "CreateAvtaleGiroPaymentBatchDTO": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEntryLineCouple": {
      "properties": {
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MarkingResult": {
      "properties": {
        "Pairs": {
          "items": {
            "$ref": "#/definitions/JournalEntryLineCouple"
          },
          "type": "array"
        },
        "Entries": {
          "items": {
            "$ref": "#/definitions/MarkingEntry"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MarkingEntry": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "OriginalRestAmount": {
          "type": "double"
        },
        "StatusCode": {
          "type": "string"
        },
        "RestAmount": {
          "type": "double"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "OriginalStatusCode": {
          "type": "string"
        },
        "FinancialDate": {
          "type": "date"
        },
        "Amount": {
          "type": "double"
        },
        "JournalEntryNumber": {
          "type": "string"
        },
        "RestAmountCurrency": {
          "type": "double"
        },
        "Markings": {
          "items": {
            "$ref": "#/definitions/MarkingReference"
          },
          "type": "array"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "MarkingReference": {
      "properties": {
        "ID": {
          "type": "integer"
        },
        "JournalEntryNumber": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "SupplierInvoiceDetail": {
      "properties": {
        "AccountNumber": {
          "type": "integer"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "VatTypeID": {
          "type": "integer"
        },
        "VatCode": {
          "type": "string"
        },
        "InvoiceDate": {
          "type": "date"
        },
        "SupplierID": {
          "type": "integer"
        },
        "AmountCurrency": {
          "type": "double"
        },
        "Amount": {
          "type": "double"
        },
        "AccountName": {
          "type": "string"
        },
        "DeliveryDate": {
          "type": "date"
        },
        "SupplierInvoiceID": {
          "type": "integer"
        },
        "VatTypeName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "AccountID": {
          "type": "integer"
        },
        "VatPercent": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportMessage": {
      "properties": {
        "Level": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportSummary": {
      "properties": {
        "VatCodeGroupNo": {
          "type": "string"
        },
        "VatCodeGroupID": {
          "type": "integer"
        },
        "VatCodeGroupName": {
          "type": "string"
        },
        "NumberOfJournalEntryLines": {
          "type": "integer"
        },
        "IsHistoricData": {
          "type": "boolean"
        },
        "HasTaxAmount": {
          "type": "boolean"
        },
        "HasTaxBasis": {
          "type": "boolean"
        },
        "SumTaxBasisAmount": {
          "type": "double"
        },
        "SumVatAmount": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportSummaryPerPost": {
      "properties": {
        "VatPostID": {
          "type": "integer"
        },
        "VatPostName": {
          "type": "string"
        },
        "VatCodeGroupNo": {
          "type": "string"
        },
        "VatCodeGroupID": {
          "type": "integer"
        },
        "VatCodeGroupName": {
          "type": "string"
        },
        "NumberOfJournalEntryLines": {
          "type": "integer"
        },
        "IsHistoricData": {
          "type": "boolean"
        },
        "HasTaxAmount": {
          "type": "boolean"
        },
        "VatPostReportAsNegativeAmount": {
          "type": "boolean"
        },
        "HasTaxBasis": {
          "type": "boolean"
        },
        "SumTaxBasisAmount": {
          "type": "double"
        },
        "VatPostNo": {
          "type": "string"
        },
        "SumVatAmount": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportSummaryPerPostPerAccount": {
      "properties": {
        "VatAccountName": {
          "type": "string"
        },
        "VatPostID": {
          "type": "integer"
        },
        "VatPostName": {
          "type": "string"
        },
        "VatCodeGroupNo": {
          "type": "string"
        },
        "VatJournalEntryPostAccountName": {
          "type": "string"
        },
        "TaxBasisAmount": {
          "type": "double"
        },
        "VatCodeGroupID": {
          "type": "integer"
        },
        "VatCodeGroupName": {
          "type": "string"
        },
        "NumberOfJournalEntryLines": {
          "type": "integer"
        },
        "VatJournalEntryPostAccountID": {
          "type": "integer"
        },
        "IsHistoricData": {
          "type": "boolean"
        },
        "HasTaxAmount": {
          "type": "boolean"
        },
        "VatCode": {
          "type": "string"
        },
        "VatAccountID": {
          "type": "integer"
        },
        "VatAccountNumber": {
          "type": "integer"
        },
        "VatPostReportAsNegativeAmount": {
          "type": "boolean"
        },
        "StdVatCode": {
          "type": "string"
        },
        "HasTaxBasis": {
          "type": "boolean"
        },
        "SumTaxBasisAmount": {
          "type": "double"
        },
        "FinancialDate": {
          "type": "date"
        },
        "Amount": {
          "type": "double"
        },
        "VatPostNo": {
          "type": "string"
        },
        "JournalEntryNumber": {
          "type": "string"
        },
        "VatDate": {
          "type": "date"
        },
        "SumVatAmount": {
          "type": "double"
        },
        "VatJournalEntryPostAccountNumber": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "VatReportNotReportedJournalEntryData": {
      "properties": {
        "NumberOfJournalEntryLines": {
          "type": "integer"
        },
        "TerminPeriodID": {
          "type": "integer"
        },
        "SumTaxBasisAmount": {
          "type": "double"
        },
        "SumVatAmount": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AltinnSigningTextResponse": {
      "properties": {
        "SigningText": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AltinnGetVatReportDataFromAltinnResult": {
      "properties": {
        "Status": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualAccountReport": {
      "properties": {
        "SubReportList": {
          "items": {
            "$ref": "#/definitions/AnnualAccountSubReport"
          },
          "type": "array"
        },
        "NoteRegnskapsPrinsipp": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteUsikkerhetFortsattDrift": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteAksjeOpplysninger": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteAarsverk": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteLoenn": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteYtelserDagligLeder": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteYtelserLedendePersoner": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteYtelserRevisjon": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteTjenestepensjon": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteLaanSikkerhetLedendePerson": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteDatterselskapTilknyttetSelskap": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteSkattekostnad": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteBankinnskudd": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteAnleggsmidlerDriftsmidler": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteEgenkapital": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "NoteUtenforMinimumskravSmaaForetak": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "PosterUtenomBalansen": {
          "$ref": "#/definitions/AnnualAccountNoteInfoReport"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualAccountSubReport": {
      "properties": {
        "Notenr": {
          "type": "string"
        },
        "Aarets": {
          "type": "string"
        },
        "Beskrivelse": {
          "type": "string"
        },
        "PropertyName": {
          "type": "string"
        },
        "GroupName": {
          "type": "string"
        },
        "SortOrder": {
          "type": "integer"
        },
        "IsSum": {
          "type": "boolean"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualAccountNoteInfoReport": {
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "EmptyText": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "JournalEComDTO": {
      "properties": {
        "amount": {
          "type": "double"
        },
        "annualSettlementID": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualSettlementDisposalDisplayItem": {
      "properties": {
        "Item": {
          "type": "string"
        },
        "Amount": {
          "type": "double"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AnnualSettlementAccountIBAndUBDisplayItem": {
      "properties": {
        "AccountNumber": {
          "type": "string"
        },
        "UB": {
          "type": "double"
        },
        "IB": {
          "type": "double"
        },
        "Year": {
          "type": "integer"
        },
        "AccountName": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "ReportElement": {
      "properties": {
        "Value": {
          "type": "double"
        },
        "IsSum": {
          "type": "boolean"
        },
        "BaseValue": {
          "type": "double"
        },
        "Label": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Avviksforekomst": {
      "properties": {
        "mottattVerdi": {
          "type": "double"
        },
        "beregnetVerdiSpecified": {
          "type": "boolean"
        },
        "oevrigInformasjon": {
          "type": "string"
        },
        "avvikstype": {
          "type": "string"
        },
        "mottattTekst": {
          "type": "string"
        },
        "avvikIVerdiSpecified": {
          "type": "boolean"
        },
        "beregnetTekst": {
          "type": "string"
        },
        "avvikIVerdi": {
          "type": "double"
        },
        "forekomstidentifikator": {
          "type": "string"
        },
        "mottattVerdiSpecified": {
          "type": "boolean"
        },
        "beregnetVerdi": {
          "type": "double"
        },
        "sti": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "Veiledningsforekomst": {
      "properties": {
        "betjeningsstrategi": {
          "type": "string"
        },
        "hjelpetekst": {
          "type": "string"
        },
        "forekomstidentifikator": {
          "type": "string"
        },
        "sti": {
          "type": "string"
        },
        "veiledningstype": {
          "type": "string"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    },
    "AccountUsage": {
      "properties": {
        "AccountNumber": {
          "type": "integer"
        },
        "PercentWeight": {
          "type": "double"
        },
        "Counter": {
          "type": "integer"
        },
        "CustomValues": {
          "$ref": "#/definitions/CustomValues"
        }
      },
      "type": "object"
    }
  },
  "host": "test-api.softrig.com",
  "info": {
    "contact": {
      "name": "",
      "url": ""
    },
    "license": {
      "name": "",
      "url": ""
    },
    "title": "",
    "version": "1.0"
  },
  "paths": {
    "/workers?action=create-worker-from-user": {
      "post": {
        "description": "create-worker-from-user Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        },
        "tags": [
          "Worker"
        ],
        "parameters": []
      }
    },
    "/workers/{id}": {
      "delete": {
        "description": "Delete Worker",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        },
        "tags": [
          "Worker"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Worker",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        },
        "tags": [
          "Worker"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Worker",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        },
        "tags": [
          "Worker"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Worker",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        ]
      }
    },
    "/workers": {
      "get": {
        "description": "Query Worker",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Worker"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Worker"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Worker",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        },
        "tags": [
          "Worker"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Worker",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        ]
      }
    },
    "/workitems/{id}": {
      "delete": {
        "description": "Delete WorkItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        },
        "tags": [
          "WorkItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get WorkItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        },
        "tags": [
          "WorkItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update WorkItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        },
        "tags": [
          "WorkItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "WorkItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        ]
      }
    },
    "/workitems": {
      "get": {
        "description": "Query WorkItem",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WorkItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "WorkItem"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create WorkItem",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        },
        "tags": [
          "WorkItem"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "WorkItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItem"
            }
          }
        ]
      }
    },
    "/worktypes/{id}": {
      "delete": {
        "description": "Delete WorkType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkType"
            }
          }
        },
        "tags": [
          "WorkType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get WorkType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkType"
            }
          }
        },
        "tags": [
          "WorkType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update WorkType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkType"
            }
          }
        },
        "tags": [
          "WorkType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "WorkType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkType"
            }
          }
        ]
      }
    },
    "/worktypes": {
      "get": {
        "description": "Query WorkType",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WorkType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "WorkType"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create WorkType",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/WorkType"
            }
          }
        },
        "tags": [
          "WorkType"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "WorkType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkType"
            }
          }
        ]
      }
    },
    "/workprofiles/{id}": {
      "delete": {
        "description": "Delete WorkProfile",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkProfile"
            }
          }
        },
        "tags": [
          "WorkProfile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get WorkProfile",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkProfile"
            }
          }
        },
        "tags": [
          "WorkProfile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update WorkProfile",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkProfile"
            }
          }
        },
        "tags": [
          "WorkProfile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "WorkProfile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkProfile"
            }
          }
        ]
      }
    },
    "/workprofiles": {
      "get": {
        "description": "Query WorkProfile",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WorkProfile"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "WorkProfile"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create WorkProfile",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/WorkProfile"
            }
          }
        },
        "tags": [
          "WorkProfile"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "WorkProfile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkProfile"
            }
          }
        ]
      }
    },
    "/workbalances/{id}": {
      "delete": {
        "description": "Delete WorkBalance",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkBalance"
            }
          }
        },
        "tags": [
          "WorkBalance"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get WorkBalance",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkBalance"
            }
          }
        },
        "tags": [
          "WorkBalance"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update WorkBalance",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkBalance"
            }
          }
        },
        "tags": [
          "WorkBalance"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "WorkBalance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkBalance"
            }
          }
        ]
      }
    },
    "/workbalances": {
      "get": {
        "description": "Query WorkBalance",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WorkBalance"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "WorkBalance"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create WorkBalance",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/WorkBalance"
            }
          }
        },
        "tags": [
          "WorkBalance"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "WorkBalance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkBalance"
            }
          }
        ]
      }
    },
    "/worktimeoff/{id}": {
      "delete": {
        "description": "Delete WorkTimeOff",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkTimeOff"
            }
          }
        },
        "tags": [
          "WorkTimeOff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get WorkTimeOff",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkTimeOff"
            }
          }
        },
        "tags": [
          "WorkTimeOff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update WorkTimeOff",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkTimeOff"
            }
          }
        },
        "tags": [
          "WorkTimeOff"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "WorkTimeOff",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkTimeOff"
            }
          }
        ]
      }
    },
    "/worktimeoff": {
      "get": {
        "description": "Query WorkTimeOff",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WorkTimeOff"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "WorkTimeOff"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create WorkTimeOff",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/WorkTimeOff"
            }
          }
        },
        "tags": [
          "WorkTimeOff"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "WorkTimeOff",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkTimeOff"
            }
          }
        ]
      }
    },
    "/workitemgroups?action=create-from-items": {
      "post": {
        "description": "create-from-items Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkItemGroup"
            }
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": []
      }
    },
    "/workitemgroups/{id}?action=AssignTo": {
      "post": {
        "description": "AssignTo Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "details",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssignmentDetails"
            }
          }
        ]
      }
    },
    "/workitemgroups/{id}?action=Assign": {
      "post": {
        "description": "Assign Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/workitemgroups/{id}?action=Approve": {
      "post": {
        "description": "Approve Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/workitemgroups/{id}?action=Reject": {
      "post": {
        "description": "Reject Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/workitemgroups/{id}": {
      "delete": {
        "description": "Delete WorkItemGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkItemGroup"
            }
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get WorkItemGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkItemGroup"
            }
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update WorkItemGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkItemGroup"
            }
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "WorkItemGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemGroup"
            }
          }
        ]
      }
    },
    "/workitemgroups": {
      "get": {
        "description": "Query WorkItemGroup",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WorkItemGroup"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create WorkItemGroup",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/WorkItemGroup"
            }
          }
        },
        "tags": [
          "WorkItemGroup"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "WorkItemGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkItemGroup"
            }
          }
        ]
      }
    },
    "/workrelations/{id}?action=timesheet": {
      "get": {
        "description": "timesheet Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TimeSheet"
            }
          }
        },
        "tags": [
          "WorkRelation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/workrelations/{id}?action=calc-flex-balance": {
      "get": {
        "description": "calc-flex-balance Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkBalanceDto"
            }
          }
        },
        "tags": [
          "WorkRelation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/workrelations/{id}": {
      "delete": {
        "description": "Delete WorkRelation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkRelation"
            }
          }
        },
        "tags": [
          "WorkRelation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get WorkRelation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkRelation"
            }
          }
        },
        "tags": [
          "WorkRelation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update WorkRelation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkRelation"
            }
          }
        },
        "tags": [
          "WorkRelation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "WorkRelation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkRelation"
            }
          }
        ]
      }
    },
    "/workrelations": {
      "get": {
        "description": "Query WorkRelation",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WorkRelation"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "WorkRelation"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create WorkRelation",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/WorkRelation"
            }
          }
        },
        "tags": [
          "WorkRelation"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "WorkRelation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkRelation"
            }
          }
        ]
      }
    },
    "/batchinvoices/{id}?action=addCustomerOrder": {
      "put": {
        "description": "addCustomerOrder Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BatchInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "orderids",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/batchinvoices/{id}?action=addCustomerInvoice": {
      "put": {
        "description": "addCustomerInvoice Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BatchInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "customerInvoiceDratIds",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/batchinvoices/{id}?action=addCustomer": {
      "put": {
        "description": "addCustomer Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BatchInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "customerIds",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/batchinvoices/{id}?action=invoice": {
      "put": {
        "description": "invoice Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "BatchInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/batchinvoices/{id}": {
      "delete": {
        "description": "Delete BatchInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BatchInvoice"
            }
          }
        },
        "tags": [
          "BatchInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BatchInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BatchInvoice"
            }
          }
        },
        "tags": [
          "BatchInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update BatchInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BatchInvoice"
            }
          }
        },
        "tags": [
          "BatchInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BatchInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchInvoice"
            }
          }
        ]
      }
    },
    "/batchinvoices": {
      "get": {
        "description": "Query BatchInvoice",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BatchInvoice"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BatchInvoice"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create BatchInvoice",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BatchInvoice"
            }
          }
        },
        "tags": [
          "BatchInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BatchInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchInvoice"
            }
          }
        ]
      }
    },
    "/business-relations?action=search-data-hotel": {
      "get": {
        "description": "search-data-hotel Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContactSearchServiceResponse"
            }
          }
        },
        "tags": [
          "BusinessRelation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "searchText",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/business-relations/{id}": {
      "delete": {
        "description": "Delete BusinessRelation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BusinessRelation"
            }
          }
        },
        "tags": [
          "BusinessRelation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BusinessRelation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BusinessRelation"
            }
          }
        },
        "tags": [
          "BusinessRelation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update BusinessRelation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BusinessRelation"
            }
          }
        },
        "tags": [
          "BusinessRelation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BusinessRelation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessRelation"
            }
          }
        ]
      }
    },
    "/business-relations": {
      "get": {
        "description": "Query BusinessRelation",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BusinessRelation"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BusinessRelation"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create BusinessRelation",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BusinessRelation"
            }
          }
        },
        "tags": [
          "BusinessRelation"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BusinessRelation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BusinessRelation"
            }
          }
        ]
      }
    },
    "/campaigntemplate/{id}?action=parseemailtemplate": {
      "get": {
        "description": "parseemailtemplate Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CampaignTemplate"
            }
          }
        },
        "tags": [
          "CampaignTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "dataId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/campaigntemplate/{id}?action=gettemplatedata": {
      "get": {
        "description": "gettemplatedata Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CampaignTemplateDataModel"
            }
          }
        },
        "tags": [
          "CampaignTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "dataId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/campaigntemplate/{id}?action=resettemplate": {
      "put": {
        "description": "resettemplate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CampaignTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "template",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "bodyTemplate",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "respondToEmail",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "expandEntities",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "subjectTemplate",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/campaigntemplate/{id}?action=getdefaulttemplate": {
      "get": {
        "description": "getdefaulttemplate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CampaignTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "templateType",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/campaigntemplate/{id}": {
      "delete": {
        "description": "Delete CampaignTemplate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CampaignTemplate"
            }
          }
        },
        "tags": [
          "CampaignTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CampaignTemplate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CampaignTemplate"
            }
          }
        },
        "tags": [
          "CampaignTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CampaignTemplate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CampaignTemplate"
            }
          }
        },
        "tags": [
          "CampaignTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CampaignTemplate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampaignTemplate"
            }
          }
        ]
      }
    },
    "/campaigntemplate": {
      "get": {
        "description": "Query CampaignTemplate",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CampaignTemplate"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CampaignTemplate"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CampaignTemplate",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CampaignTemplate"
            }
          }
        },
        "tags": [
          "CampaignTemplate"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CampaignTemplate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampaignTemplate"
            }
          }
        ]
      }
    },
    "/contacts/{id}": {
      "delete": {
        "description": "Delete Contact",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Contact",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Contact",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Contact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ]
      }
    },
    "/contacts": {
      "get": {
        "description": "Query Contact",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Contact"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Contact",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        },
        "tags": [
          "Contact"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Contact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ]
      }
    },
    "/customers/{id}?action=next": {
      "get": {
        "description": "next Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/customers/{id}?action=previous": {
      "get": {
        "description": "previous Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/customers?action=activate": {
      "put": {
        "description": "activate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/customers?action=deactivate": {
      "put": {
        "description": "deactivate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/customers?action=block": {
      "put": {
        "description": "block Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/customers?action=validate-customer-KID-Alias": {
      "get": {
        "description": "validate-customer-KID-Alias Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerKidAlias",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/customers?action=bulk-save": {
      "put": {
        "description": "bulk-save Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customers",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Customer"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/customers/{id}": {
      "delete": {
        "description": "Delete Customer",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Customer",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Customer",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ]
      }
    },
    "/customers": {
      "get": {
        "description": "Query Customer",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Customer"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Customer",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "tags": [
          "Customer"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=get-customer-invoice-and-reminder-data": {
      "get": {
        "description": "get-customer-invoice-and-reminder-data Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IActionResult"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "getDueInvoicesOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "compareWithDate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "invoicesWithReminderStop",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "searchText",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "reminderNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "invoiceId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "top",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=get-customer-invoices-ready-for-reminding": {
      "get": {
        "description": "get-customer-invoices-ready-for-reminding Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "includeInvoiceWithReminderStop",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=get-customer-invoices-ready-for-debt-collection": {
      "get": {
        "description": "get-customer-invoices-ready-for-debt-collection Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "includeInvoiceWithReminderStop",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=get-customer-invoices-sent-to-debt-collection": {
      "get": {
        "description": "get-customer-invoices-sent-to-debt-collection Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": []
      }
    },
    "/invoicereminders?action=create-invoicereminders-for-invoicelist": {
      "post": {
        "description": "create-invoicereminders-for-invoicelist Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceReminder"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerInvoiceIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=create-invoicereminders-from-parameters": {
      "post": {
        "description": "create-invoicereminders-from-parameters Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "getDueInvoicesOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "compareWithDate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "invoiceWithReminderStop",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "searchText",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "reminderNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=prerun-invoicereminders-for-invoicelist": {
      "post": {
        "description": "prerun-invoicereminders-for-invoicelist Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PrerunInvoiceReminderResult"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerInvoiceIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=prerun-invoicereminders-from-parameters": {
      "post": {
        "description": "prerun-invoicereminders-from-parameters Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PrerunInvoiceReminderResult"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "getDueInvoicesOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "compareWithDate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "invoiceWithReminderStop",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "searchText",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "reminderNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=create-invoicereminders-from-reminder-rules": {
      "post": {
        "description": "create-invoicereminders-from-reminder-rules Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceReminder"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": []
      }
    },
    "/invoicereminders?action=get-invoicereminders-for-invoicelist": {
      "post": {
        "description": "get-invoicereminders-for-invoicelist Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceReminder"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerInvoiceIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=get-invoicereminders-from-reminder-rules": {
      "post": {
        "description": "get-invoicereminders-from-reminder-rules Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceReminder"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": []
      }
    },
    "/invoicereminders?action=queue-for-debt-collection": {
      "put": {
        "description": "queue-for-debt-collection Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerInvoiceIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=get-sum-reminders-to-debt-collection": {
      "get": {
        "description": "get-sum-reminders-to-debt-collection Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": []
      }
    },
    "/invoicereminders?action=get-sum-customer-invoices-ready-for-reminding": {
      "get": {
        "description": "get-sum-customer-invoices-ready-for-reminding Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": []
      }
    },
    "/invoicereminders?action=send": {
      "put": {
        "description": "send Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reminderIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=can-distribute-reminders": {
      "put": {
        "description": "can-distribute-reminders Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CanDistributeReminderResult"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reminderIds",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=distribute-reminders": {
      "put": {
        "description": "distribute-reminders Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "input",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DistributeInvoiceReminderInput"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=send-invoice-print": {
      "put": {
        "description": "send-invoice-print Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reminderIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=set-status-to-sent": {
      "put": {
        "description": "set-status-to-sent Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reminderIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders?action=create-notification-ready-for-debt-collection": {
      "post": {
        "description": "create-notification-ready-for-debt-collection Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reminderIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders/{id}?action=send": {
      "post": {
        "description": "send Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoicereminders/{id}": {
      "delete": {
        "description": "Delete CustomerInvoiceReminder",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminder"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomerInvoiceReminder",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminder"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomerInvoiceReminder",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminder"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomerInvoiceReminder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminder"
            }
          }
        ]
      }
    },
    "/invoicereminders": {
      "get": {
        "description": "Query CustomerInvoiceReminder",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceReminder"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomerInvoiceReminder",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminder"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomerInvoiceReminder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminder"
            }
          }
        ]
      }
    },
    "/invoicereminderrules/{id}": {
      "delete": {
        "description": "Delete CustomerInvoiceReminderRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderRule"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomerInvoiceReminderRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderRule"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomerInvoiceReminderRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderRule"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomerInvoiceReminderRule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderRule"
            }
          }
        ]
      }
    },
    "/invoicereminderrules": {
      "get": {
        "description": "Query CustomerInvoiceReminderRule",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceReminderRule"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomerInvoiceReminderRule",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderRule"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderRule"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomerInvoiceReminderRule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderRule"
            }
          }
        ]
      }
    },
    "/invoiceremindersettings?action=get-default-rules": {
      "get": {
        "description": "get-default-rules Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceReminderSettings"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "parameters": []
      }
    },
    "/invoiceremindersettings/{id}": {
      "delete": {
        "description": "Delete CustomerInvoiceReminderSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderSettings"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomerInvoiceReminderSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderSettings"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomerInvoiceReminderSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderSettings"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomerInvoiceReminderSettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderSettings"
            }
          }
        ]
      }
    },
    "/invoiceremindersettings": {
      "get": {
        "description": "Query CustomerInvoiceReminderSettings",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceReminderSettings"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomerInvoiceReminderSettings",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderSettings"
            }
          }
        },
        "tags": [
          "CustomerInvoiceReminderSettings"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomerInvoiceReminderSettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceReminderSettings"
            }
          }
        ]
      }
    },
    "/debtcollectionautomation/{id}": {
      "delete": {
        "description": "Delete DebtCollectionAutomation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DebtCollectionAutomation"
            }
          }
        },
        "tags": [
          "DebtCollectionAutomation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get DebtCollectionAutomation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DebtCollectionAutomation"
            }
          }
        },
        "tags": [
          "DebtCollectionAutomation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update DebtCollectionAutomation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DebtCollectionAutomation"
            }
          }
        },
        "tags": [
          "DebtCollectionAutomation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "DebtCollectionAutomation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DebtCollectionAutomation"
            }
          }
        ]
      }
    },
    "/debtcollectionautomation": {
      "get": {
        "description": "Query DebtCollectionAutomation",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/DebtCollectionAutomation"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "DebtCollectionAutomation"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create DebtCollectionAutomation",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/DebtCollectionAutomation"
            }
          }
        },
        "tags": [
          "DebtCollectionAutomation"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "DebtCollectionAutomation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DebtCollectionAutomation"
            }
          }
        ]
      }
    },
    "/debtcollectionsettings/{id}": {
      "delete": {
        "description": "Delete DebtCollectionSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DebtCollectionSettings"
            }
          }
        },
        "tags": [
          "DebtCollectionSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get DebtCollectionSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DebtCollectionSettings"
            }
          }
        },
        "tags": [
          "DebtCollectionSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update DebtCollectionSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DebtCollectionSettings"
            }
          }
        },
        "tags": [
          "DebtCollectionSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "DebtCollectionSettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DebtCollectionSettings"
            }
          }
        ]
      }
    },
    "/debtcollectionsettings": {
      "get": {
        "description": "Query DebtCollectionSettings",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/DebtCollectionSettings"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "DebtCollectionSettings"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create DebtCollectionSettings",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/DebtCollectionSettings"
            }
          }
        },
        "tags": [
          "DebtCollectionSettings"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "DebtCollectionSettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DebtCollectionSettings"
            }
          }
        ]
      }
    },
    "/invoices?action=regular": {
      "post": {
        "description": "regular Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        ]
      }
    },
    "/invoices?action=calculate-invoice-summary": {
      "post": {
        "description": "calculate-invoice-summary Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TradeHeaderCalculationSummary"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "invoiceItems",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceItem"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=calculate-vat-summary": {
      "get": {
        "description": "calculate-vat-summary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatCalculationSummary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices?action=calculate-vat-summary": {
      "get": {
        "description": "calculate-vat-summary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatCalculationSummary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "InvoiceNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=next": {
      "get": {
        "description": "next Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=previous": {
      "get": {
        "description": "previous Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=create-invoice-journalentrydraft": {
      "put": {
        "description": "create-invoice-journalentrydraft Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=create-credit-draft-invoice": {
      "put": {
        "description": "create-credit-draft-invoice Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=payInvoice": {
      "put": {
        "description": "payInvoice Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentData"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=pay-invoice-with-number-series-id": {
      "put": {
        "description": "pay-invoice-with-number-series-id Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentData"
            }
          },
          {
            "in": "path",
            "name": "numberSeriesID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices?action=match-invoices-manual": {
      "put": {
        "description": "match-invoices-manual Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerInvoiceIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "paymentID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices?action=get-customer-invoice-summary": {
      "get": {
        "description": "get-customer-invoice-summary Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InvoiceSummary"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "odataFilter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=set-customer-invoice-printstatus": {
      "put": {
        "description": "set-customer-invoice-printstatus Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "printStatus",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=toggle-reminder-stop": {
      "put": {
        "description": "toggle-reminder-stop Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=validate-vipps-user": {
      "get": {
        "description": "validate-vipps-user Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=update-external-status": {
      "put": {
        "description": "update-external-status Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "newStatus",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices?action=get-barnepass-data": {
      "get": {
        "description": "get-barnepass-data Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BarnepassOppgave"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices?action=get-customer": {
      "get": {
        "description": "get-customer Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/invoices?action=get-customers": {
      "get": {
        "description": "get-customers Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Customer"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customersNrAndName",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerNoAndName"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=get-payments": {
      "get": {
        "description": "get-payments Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/InvoicePayment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=get-aprila-offer": {
      "get": {
        "description": "get-aprila-offer Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=accept-decline-aprila-offer": {
      "post": {
        "description": "accept-decline-aprila-offer Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "aprilaOrderId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "acceptOffer",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "body",
            "name": "offer",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderOffer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=fulfill-aprila-offer": {
      "post": {
        "description": "fulfill-aprila-offer Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=invoice": {
      "post": {
        "description": "invoice Transition",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}?action=pay": {
      "post": {
        "description": "pay Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoices/{id}": {
      "delete": {
        "description": "Delete CustomerInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomerInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomerInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomerInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        ]
      }
    },
    "/invoices": {
      "get": {
        "description": "Query CustomerInvoice",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoice"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomerInvoice",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "tags": [
          "CustomerInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomerInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        ]
      }
    },
    "/invoiceitems/{id}?action=invoice": {
      "post": {
        "description": "invoice Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerInvoiceItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/invoiceitems/{id}": {
      "delete": {
        "description": "Delete CustomerInvoiceItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceItem"
            }
          }
        },
        "tags": [
          "CustomerInvoiceItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomerInvoiceItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceItem"
            }
          }
        },
        "tags": [
          "CustomerInvoiceItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomerInvoiceItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceItem"
            }
          }
        },
        "tags": [
          "CustomerInvoiceItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomerInvoiceItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceItem"
            }
          }
        ]
      }
    },
    "/invoiceitems": {
      "get": {
        "description": "Query CustomerInvoiceItem",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerInvoiceItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerInvoiceItem"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomerInvoiceItem",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceItem"
            }
          }
        },
        "tags": [
          "CustomerInvoiceItem"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomerInvoiceItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerInvoiceItem"
            }
          }
        ]
      }
    },
    "/orders?action=calculate-order-summary": {
      "post": {
        "description": "calculate-order-summary Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TradeHeaderCalculationSummary"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "orderItems",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerOrderItem"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/orders/{id}?action=set-customer-order-printstatus": {
      "put": {
        "description": "set-customer-order-printstatus Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "printStatus",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/orders/{id}?action=calculate-vat-summary": {
      "get": {
        "description": "calculate-vat-summary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatCalculationSummary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/orders?action=calculate-vat-summary": {
      "get": {
        "description": "calculate-vat-summary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatCalculationSummary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "OrderNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/orders/{id}?action=next": {
      "get": {
        "description": "next Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/orders/{id}?action=previous": {
      "get": {
        "description": "previous Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/orders/{id}?action=transfer-to-invoice": {
      "put": {
        "description": "transfer-to-invoice Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          },
          {
            "in": "path",
            "name": "copyFiles",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/FileEntityLink"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/orders/{id}?action=register": {
      "post": {
        "description": "register Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/orders/{id}?action=partlyTransferToInvoice": {
      "post": {
        "description": "partlyTransferToInvoice Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/orders/{id}?action=transferToInvoice": {
      "post": {
        "description": "transferToInvoice Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/orders/{id}?action=complete": {
      "post": {
        "description": "complete Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/orders/{id}": {
      "delete": {
        "description": "Delete CustomerOrder",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomerOrder",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomerOrder",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomerOrder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "description": "Query CustomerOrder",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerOrder"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomerOrder",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        },
        "tags": [
          "CustomerOrder"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomerOrder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        ]
      }
    },
    "/orderitems/{id}?action=register": {
      "post": {
        "description": "register Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerOrderItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/orderitems/{id}?action=toInvoice": {
      "post": {
        "description": "toInvoice Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerOrderItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/orderitems/{id}?action=complete": {
      "post": {
        "description": "complete Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerOrderItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/orderitems/{id}": {
      "delete": {
        "description": "Delete CustomerOrderItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        },
        "tags": [
          "CustomerOrderItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomerOrderItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        },
        "tags": [
          "CustomerOrderItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomerOrderItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        },
        "tags": [
          "CustomerOrderItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomerOrderItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        ]
      }
    },
    "/orderitems": {
      "get": {
        "description": "Query CustomerOrderItem",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerOrderItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerOrderItem"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomerOrderItem",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        },
        "tags": [
          "CustomerOrderItem"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomerOrderItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        ]
      }
    },
    "/paymentinfotype?action=get-paymentinfotype-parts-macros": {
      "get": {
        "description": "get-paymentinfotype-parts-macros Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "PaymentInfoType"
        ],
        "parameters": []
      }
    },
    "/paymentinfotype?action=validate-get-paymentinfo": {
      "get": {
        "description": "validate-get-paymentinfo Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "PaymentInfoType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerInvoice",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomerInvoice"
            }
          },
          {
            "in": "path",
            "name": "paymentInfoTypeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentinfotype?action=activate-paymentinfotype": {
      "put": {
        "description": "activate-paymentinfotype Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PaymentInfoType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentinfotype?action=deactivate-paymentinfotype": {
      "put": {
        "description": "deactivate-paymentinfotype Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PaymentInfoType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentinfotype/{id}": {
      "delete": {
        "description": "Delete PaymentInfoType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentInfoType"
            }
          }
        },
        "tags": [
          "PaymentInfoType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PaymentInfoType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentInfoType"
            }
          }
        },
        "tags": [
          "PaymentInfoType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PaymentInfoType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentInfoType"
            }
          }
        },
        "tags": [
          "PaymentInfoType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PaymentInfoType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentInfoType"
            }
          }
        ]
      }
    },
    "/paymentinfotype": {
      "get": {
        "description": "Query PaymentInfoType",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentInfoType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PaymentInfoType"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PaymentInfoType",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PaymentInfoType"
            }
          }
        },
        "tags": [
          "PaymentInfoType"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PaymentInfoType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentInfoType"
            }
          }
        ]
      }
    },
    "/productcategories/{id}": {
      "delete": {
        "description": "Delete ProductCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProductCategory"
            }
          }
        },
        "tags": [
          "ProductCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ProductCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProductCategory"
            }
          }
        },
        "tags": [
          "ProductCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ProductCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProductCategory"
            }
          }
        },
        "tags": [
          "ProductCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ProductCategory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductCategory"
            }
          }
        ]
      }
    },
    "/productcategories": {
      "get": {
        "description": "Query ProductCategory",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ProductCategory"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ProductCategory"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ProductCategory",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ProductCategory"
            }
          }
        },
        "tags": [
          "ProductCategory"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ProductCategory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductCategory"
            }
          }
        ]
      }
    },
    "/productcategorylinks/{id}": {
      "delete": {
        "description": "Delete ProductCategoryLink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProductCategoryLink"
            }
          }
        },
        "tags": [
          "ProductCategoryLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ProductCategoryLink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProductCategoryLink"
            }
          }
        },
        "tags": [
          "ProductCategoryLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ProductCategoryLink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProductCategoryLink"
            }
          }
        },
        "tags": [
          "ProductCategoryLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ProductCategoryLink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductCategoryLink"
            }
          }
        ]
      }
    },
    "/productcategorylinks": {
      "get": {
        "description": "Query ProductCategoryLink",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ProductCategoryLink"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ProductCategoryLink"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ProductCategoryLink",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ProductCategoryLink"
            }
          }
        },
        "tags": [
          "ProductCategoryLink"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ProductCategoryLink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductCategoryLink"
            }
          }
        ]
      }
    },
    "/products/{id}?action=transitions": {
      "get": {
        "description": "transitions Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/products?action=calculateprice": {
      "post": {
        "description": "calculateprice Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ]
      }
    },
    "/products?action=getnewpartname": {
      "get": {
        "description": "getnewpartname Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": []
      }
    },
    "/products/{id}?action=first": {
      "get": {
        "description": "first Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/products/{id}?action=last": {
      "get": {
        "description": "last Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/products/{id}?action=previous": {
      "get": {
        "description": "previous Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/products/{id}?action=next": {
      "get": {
        "description": "next Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/products?action=bulk-save": {
      "put": {
        "description": "bulk-save Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "products",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Product"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/products/{id}?action=is-used": {
      "get": {
        "description": "is-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/products?action=get-barnepass-products": {
      "get": {
        "description": "get-barnepass-products Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Product"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": []
      }
    },
    "/products?action=save-barnepass-products": {
      "put": {
        "description": "save-barnepass-products Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "productIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/products?action=syncronize-products-account-and-vat-to-standard": {
      "put": {
        "description": "syncronize-products-account-and-vat-to-standard Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "oldAccountId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/products/{id}?action=Delete": {
      "post": {
        "description": "Delete Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/products/{id}?action=Discard": {
      "post": {
        "description": "Discard Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/products/{id}?action=Reactivate": {
      "post": {
        "description": "Reactivate Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/products/{id}": {
      "delete": {
        "description": "Delete Product",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Product",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Product",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ]
      }
    },
    "/products": {
      "get": {
        "description": "Query Product",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Product"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Product",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ]
      }
    },
    "/quotes?action=calculate-quote-summary": {
      "post": {
        "description": "calculate-quote-summary Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TradeHeaderCalculationSummary"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "quoteItems",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerQuoteItem"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/quotes/{id}?action=calculate-vat-summary": {
      "get": {
        "description": "calculate-vat-summary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatCalculationSummary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/quotes?action=calculate-vat-summary": {
      "get": {
        "description": "calculate-vat-summary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatCalculationSummary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "QuoteNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/quotes/{id}?action=next": {
      "get": {
        "description": "next Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/quotes/{id}?action=set-customer-quote-printstatus": {
      "put": {
        "description": "set-customer-quote-printstatus Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "printStatus",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/quotes/{id}?action=previous": {
      "get": {
        "description": "previous Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/quotes/{id}?action=register": {
      "post": {
        "description": "register Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/quotes/{id}?action=shipToCustomer": {
      "post": {
        "description": "shipToCustomer Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/quotes/{id}?action=customerAccept": {
      "post": {
        "description": "customerAccept Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/quotes/{id}?action=toOrder": {
      "post": {
        "description": "toOrder Transition",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/quotes/{id}?action=toInvoice": {
      "post": {
        "description": "toInvoice Transition",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/quotes/{id}?action=complete": {
      "post": {
        "description": "complete Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/quotes/{id}": {
      "delete": {
        "description": "Delete CustomerQuote",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomerQuote",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomerQuote",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomerQuote",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        ]
      }
    },
    "/quotes": {
      "get": {
        "description": "Query CustomerQuote",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerQuote"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomerQuote",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        },
        "tags": [
          "CustomerQuote"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomerQuote",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        ]
      }
    },
    "/quoteitems/{id}": {
      "delete": {
        "description": "Delete CustomerQuoteItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        },
        "tags": [
          "CustomerQuoteItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomerQuoteItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        },
        "tags": [
          "CustomerQuoteItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomerQuoteItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        },
        "tags": [
          "CustomerQuoteItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomerQuoteItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        ]
      }
    },
    "/quoteitems": {
      "get": {
        "description": "Query CustomerQuoteItem",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomerQuoteItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomerQuoteItem"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomerQuoteItem",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        },
        "tags": [
          "CustomerQuoteItem"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomerQuoteItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        ]
      }
    },
    "/recurringinvoices/{id}?action=execute": {
      "post": {
        "description": "execute Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RecurringInvoiceLog"
            }
          }
        },
        "tags": [
          "RecurringInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/recurringinvoices/{id}?action=activate": {
      "post": {
        "description": "activate Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "RecurringInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/recurringinvoices/{id}?action=deactivate": {
      "post": {
        "description": "deactivate Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "RecurringInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/recurringinvoices/{id}": {
      "delete": {
        "description": "Delete RecurringInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RecurringInvoice"
            }
          }
        },
        "tags": [
          "RecurringInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get RecurringInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RecurringInvoice"
            }
          }
        },
        "tags": [
          "RecurringInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update RecurringInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RecurringInvoice"
            }
          }
        },
        "tags": [
          "RecurringInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "RecurringInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecurringInvoice"
            }
          }
        ]
      }
    },
    "/recurringinvoices": {
      "get": {
        "description": "Query RecurringInvoice",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/RecurringInvoice"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "RecurringInvoice"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create RecurringInvoice",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/RecurringInvoice"
            }
          }
        },
        "tags": [
          "RecurringInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "RecurringInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecurringInvoice"
            }
          }
        ]
      }
    },
    "/recurringinvoiceitems/{id}": {
      "get": {
        "description": "Get RecurringInvoiceItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RecurringInvoiceItem"
            }
          }
        },
        "tags": [
          "RecurringInvoiceItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/recurringinvoiceitems": {
      "get": {
        "description": "Query RecurringInvoiceItem",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/RecurringInvoiceItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "RecurringInvoiceItem"
        ],
        "parameters": []
      }
    },
    "/RecurringInvoicelogs/{id}": {
      "delete": {
        "description": "Delete RecurringInvoiceLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RecurringInvoiceLog"
            }
          }
        },
        "tags": [
          "RecurringInvoiceLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get RecurringInvoiceLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RecurringInvoiceLog"
            }
          }
        },
        "tags": [
          "RecurringInvoiceLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/RecurringInvoicelogs": {
      "get": {
        "description": "Query RecurringInvoiceLog",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/RecurringInvoiceLog"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "RecurringInvoiceLog"
        ],
        "parameters": []
      }
    },
    "/sellers/{id}": {
      "delete": {
        "description": "Delete Seller",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Seller"
            }
          }
        },
        "tags": [
          "Seller"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Seller",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Seller"
            }
          }
        },
        "tags": [
          "Seller"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Seller",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Seller"
            }
          }
        },
        "tags": [
          "Seller"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Seller",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Seller"
            }
          }
        ]
      }
    },
    "/sellers": {
      "get": {
        "description": "Query Seller",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Seller"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Seller"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Seller",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Seller"
            }
          }
        },
        "tags": [
          "Seller"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Seller",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Seller"
            }
          }
        ]
      }
    },
    "/sellerlinks/{id}": {
      "delete": {
        "description": "Delete SellerLink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SellerLink"
            }
          }
        },
        "tags": [
          "SellerLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get SellerLink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SellerLink"
            }
          }
        },
        "tags": [
          "SellerLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update SellerLink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SellerLink"
            }
          }
        },
        "tags": [
          "SellerLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SellerLink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SellerLink"
            }
          }
        ]
      }
    },
    "/sellerlinks": {
      "get": {
        "description": "Query SellerLink",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SellerLink"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SellerLink"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create SellerLink",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SellerLink"
            }
          }
        },
        "tags": [
          "SellerLink"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "SellerLink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SellerLink"
            }
          }
        ]
      }
    },
    "/subcompanies/{id}": {
      "delete": {
        "description": "Delete SubCompany",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubCompany"
            }
          }
        },
        "tags": [
          "SubCompany"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get SubCompany",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubCompany"
            }
          }
        },
        "tags": [
          "SubCompany"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update SubCompany",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubCompany"
            }
          }
        },
        "tags": [
          "SubCompany"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SubCompany",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubCompany"
            }
          }
        ]
      }
    },
    "/subcompanies": {
      "get": {
        "description": "Query SubCompany",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SubCompany"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SubCompany"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create SubCompany",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SubCompany"
            }
          }
        },
        "tags": [
          "SubCompany"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "SubCompany",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubCompany"
            }
          }
        ]
      }
    },
    "/contacts/{contactid}/addresses/{id}": {
      "delete": {
        "description": "Delete Address",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        },
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Address",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        },
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Address",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        },
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Address",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      }
    },
    "/contacts/{contactid}/addresses": {
      "get": {
        "description": "Query Address",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Address"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Address"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Address",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        },
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Address",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ]
      }
    },
    "/suppliers/{id}?action=next": {
      "get": {
        "description": "next Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/suppliers/{id}?action=previous": {
      "get": {
        "description": "previous Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/suppliers?action=activate": {
      "put": {
        "description": "activate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/suppliers?action=deactivate": {
      "put": {
        "description": "deactivate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/suppliers?action=block": {
      "put": {
        "description": "block Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/suppliers?action=unblock": {
      "put": {
        "description": "unblock Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/suppliers?action=delete": {
      "put": {
        "description": "delete Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/suppliers?action=bulk-save": {
      "put": {
        "description": "bulk-save Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "suppliers",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Supplier"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/suppliers/{id}": {
      "delete": {
        "description": "Delete Supplier",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Supplier",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Supplier",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Supplier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ]
      }
    },
    "/suppliers": {
      "get": {
        "description": "Query Supplier",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Supplier"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Supplier",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Supplier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ]
      }
    },
    "/terms?action=get-payment-terms": {
      "get": {
        "description": "get-payment-terms Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Terms"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "parameters": []
      }
    },
    "/terms?action=get-delivery-terms": {
      "get": {
        "description": "get-delivery-terms Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Terms"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "parameters": []
      }
    },
    "/terms/{id}": {
      "delete": {
        "description": "Delete Terms",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Terms"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Terms",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Terms"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Terms",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Terms"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Terms",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Terms"
            }
          }
        ]
      }
    },
    "/terms": {
      "get": {
        "description": "Query Terms",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Terms"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Terms",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Terms"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Terms",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Terms"
            }
          }
        ]
      }
    },
    "/amelding/{id}?action=get-amelding": {
      "get": {
        "description": "get-amelding Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/amelding/{id}?action=get-feedback": {
      "get": {
        "description": "get-feedback Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/amelding/{id}?action=send": {
      "put": {
        "description": "send Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AmeldingData"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/amelding/{id}?action=feedback": {
      "put": {
        "description": "feedback Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AmeldingData"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/amelding?action=amelding-feedback-in-period": {
      "get": {
        "description": "amelding-feedback-in-period Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fromPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/amelding?action=payrollruns-in-amelding-period": {
      "get": {
        "description": "payrollruns-in-amelding-period Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "period",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/amelding/{id}?action=pay-aga-tax": {
      "post": {
        "description": "pay-aga-tax Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PayAgaTaxDTO"
            }
          }
        ]
      }
    },
    "/amelding/{id}?action=rebuild-logs": {
      "get": {
        "description": "rebuild-logs Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/amelding?action=validate-periods": {
      "get": {
        "description": "validate-periods Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ValidationMessage"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/amelding/{id}": {
      "delete": {
        "description": "Delete AmeldingData",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AmeldingData"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AmeldingData",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AmeldingData"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/amelding": {
      "get": {
        "description": "Query AmeldingData",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AmeldingData"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AmeldingData",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AmeldingData"
            }
          }
        },
        "tags": [
          "AmeldingData"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AmeldingData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AmeldingData"
            }
          }
        ]
      }
    },
    "/ameldingsums/{id}?action=get-sumup": {
      "get": {
        "description": "get-sumup Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AmeldingSumUp"
            }
          }
        },
        "tags": [
          "AmeldingSumUp"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/ameldingsums/{id}": {},
    "/ameldingsums": {},
    "/annual-statement?action=inselection": {
      "get": {
        "description": "inselection Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "AnnualStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employees",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annual-statement?action=email": {
      "put": {
        "description": "email Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "AnnualStatement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "setup",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AnnualStatementReportSetup"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annual-statement?action=generate-zip": {
      "put": {
        "description": "generate-zip Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "AnnualStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annual-statement/{id}": {},
    "/annual-statement": {},
    "/basicamounts/{id}": {
      "get": {
        "description": "Get BasicAmount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BasicAmount"
            }
          }
        },
        "tags": [
          "BasicAmount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/basicamounts": {
      "get": {
        "description": "Query BasicAmount",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BasicAmount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BasicAmount"
        ],
        "parameters": []
      }
    },
    "/companysalary/{id}": {
      "delete": {
        "description": "Delete CompanySalary",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanySalary"
            }
          }
        },
        "tags": [
          "CompanySalary"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CompanySalary",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanySalary"
            }
          }
        },
        "tags": [
          "CompanySalary"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CompanySalary",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanySalary"
            }
          }
        },
        "tags": [
          "CompanySalary"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CompanySalary",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanySalary"
            }
          }
        ]
      }
    },
    "/companysalary": {
      "get": {
        "description": "Query CompanySalary",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CompanySalary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CompanySalary"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CompanySalary",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CompanySalary"
            }
          }
        },
        "tags": [
          "CompanySalary"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CompanySalary",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanySalary"
            }
          }
        ]
      }
    },
    "/companyvacationrates?action=current": {
      "get": {
        "description": "current Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyVacationRate"
            }
          }
        },
        "tags": [
          "CompanyVacationRate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/companyvacationrates/{id}": {
      "delete": {
        "description": "Delete CompanyVacationRate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyVacationRate"
            }
          }
        },
        "tags": [
          "CompanyVacationRate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CompanyVacationRate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyVacationRate"
            }
          }
        },
        "tags": [
          "CompanyVacationRate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CompanyVacationRate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyVacationRate"
            }
          }
        },
        "tags": [
          "CompanyVacationRate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CompanyVacationRate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyVacationRate"
            }
          }
        ]
      }
    },
    "/companyvacationrates": {
      "get": {
        "description": "Query CompanyVacationRate",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CompanyVacationRate"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CompanyVacationRate"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CompanyVacationRate",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CompanyVacationRate"
            }
          }
        },
        "tags": [
          "CompanyVacationRate"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CompanyVacationRate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyVacationRate"
            }
          }
        ]
      }
    },
    "/employeecategories/{id}?action=employeesoncategory": {
      "get": {
        "description": "employeesoncategory Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/employeecategories/{id}?action=payrollrunsoncategory": {
      "get": {
        "description": "payrollrunsoncategory Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/employeecategories/{id}": {
      "delete": {
        "description": "Delete EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EmployeeCategory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        ]
      }
    },
    "/employeecategories": {
      "get": {
        "description": "Query EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeCategory"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create EmployeeCategory",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "EmployeeCategory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        ]
      }
    },
    "/employees/{empno}/category/{id}": {
      "delete": {
        "description": "Delete EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EmployeeCategory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        ]
      }
    },
    "/employees/{empno}/category": {
      "get": {
        "description": "Query EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeCategory"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create EmployeeCategory",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "EmployeeCategory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        ]
      }
    },
    "/payrollrun/{runid}/category/{id}": {
      "delete": {
        "description": "Delete EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EmployeeCategory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        ]
      }
    },
    "/payrollrun/{runid}/category": {
      "get": {
        "description": "Query EmployeeCategory",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeCategory"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create EmployeeCategory",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        },
        "tags": [
          "EmployeeCategory"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "EmployeeCategory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeCategory"
            }
          }
        ]
      }
    },
    "/employees/{id}?action=vacationpay-create": {
      "put": {
        "description": "vacationpay-create Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "sixth",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "payrollRunID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/employees/{id}?action=vacationpay-closure": {
      "put": {
        "description": "vacationpay-closure Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "sixth",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "payrollRunID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/employees/{id}?action=next": {
      "get": {
        "description": "next Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/employees/{id}?action=previous": {
      "get": {
        "description": "previous Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/employees?action=read-tax-cards": {
      "get": {
        "description": "read-tax-cards Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaxCardReadStatus"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "receiptID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/employees/{id}?action=setcategories": {
      "put": {
        "description": "setcategories Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "categories",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ]
      }
    },
    "/employees?action=emps-on-transes": {
      "get": {
        "description": "emps-on-transes Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Employee"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "status",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/employees/{id}?action=set-end-date": {
      "put": {
        "description": "set-end-date Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "employee",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          {
            "in": "path",
            "name": "endDateReason",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "endDate",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/employees/{id}": {
      "delete": {
        "description": "Delete Employee",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Employee",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Employee",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Employee",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ]
      }
    },
    "/employees": {
      "get": {
        "description": "Query Employee",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Employee"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Employee",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        },
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Employee",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          }
        ]
      }
    },
    "/EmployeeLeave/{id}": {
      "delete": {
        "description": "Delete EmployeeLeave",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeLeave"
            }
          }
        },
        "tags": [
          "EmployeeLeave"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get EmployeeLeave",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeLeave"
            }
          }
        },
        "tags": [
          "EmployeeLeave"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update EmployeeLeave",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeLeave"
            }
          }
        },
        "tags": [
          "EmployeeLeave"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EmployeeLeave",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeLeave"
            }
          }
        ]
      }
    },
    "/EmployeeLeave": {
      "get": {
        "description": "Query EmployeeLeave",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeLeave"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "EmployeeLeave"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create EmployeeLeave",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmployeeLeave"
            }
          }
        },
        "tags": [
          "EmployeeLeave"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "EmployeeLeave",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeLeave"
            }
          }
        ]
      }
    },
    "/taxcards/{id}": {
      "delete": {
        "description": "Delete EmployeeTaxCard",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeTaxCard"
            }
          }
        },
        "tags": [
          "EmployeeTaxCard"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get EmployeeTaxCard",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeTaxCard"
            }
          }
        },
        "tags": [
          "EmployeeTaxCard"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update EmployeeTaxCard",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmployeeTaxCard"
            }
          }
        },
        "tags": [
          "EmployeeTaxCard"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EmployeeTaxCard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeTaxCard"
            }
          }
        ]
      }
    },
    "/taxcards": {
      "get": {
        "description": "Query EmployeeTaxCard",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EmployeeTaxCard"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "EmployeeTaxCard"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create EmployeeTaxCard",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmployeeTaxCard"
            }
          }
        },
        "tags": [
          "EmployeeTaxCard"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "EmployeeTaxCard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeTaxCard"
            }
          }
        ]
      }
    },
    "/employments/{id}?action=history": {
      "get": {
        "description": "history Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EmploymentHistoryRecord"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Employment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/employments/{id}": {
      "delete": {
        "description": "Delete Employment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employment"
            }
          }
        },
        "tags": [
          "Employment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Employment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employment"
            }
          }
        },
        "tags": [
          "Employment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Employment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Employment"
            }
          }
        },
        "tags": [
          "Employment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Employment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employment"
            }
          }
        ]
      }
    },
    "/employments": {
      "get": {
        "description": "Query Employment",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Employment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Employment"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Employment",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Employment"
            }
          }
        },
        "tags": [
          "Employment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Employment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employment"
            }
          }
        ]
      }
    },
    "/grants/{id}": {
      "delete": {
        "description": "Delete Grant",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Grant"
            }
          }
        },
        "tags": [
          "Grant"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Grant",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Grant"
            }
          }
        },
        "tags": [
          "Grant"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Grant",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Grant"
            }
          }
        },
        "tags": [
          "Grant"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Grant",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Grant"
            }
          }
        ]
      }
    },
    "/grants": {
      "get": {
        "description": "Query Grant",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Grant"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Grant"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Grant",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Grant"
            }
          }
        },
        "tags": [
          "Grant"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Grant",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Grant"
            }
          }
        ]
      }
    },
    "/income-reports?action=create": {
      "post": {
        "description": "create Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncomeReportData"
            }
          }
        },
        "tags": [
          "IncomeReportData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "employmentID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/income-reports?action=code-list": {
      "get": {
        "description": "code-list Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CodeListRowsCodeListRow"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "IncomeReportData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/income-reports/{id}?action=send": {
      "put": {
        "description": "send Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncomeReportData"
            }
          }
        },
        "tags": [
          "IncomeReportData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/income-reports?action=monthly-pay": {
      "get": {
        "description": "monthly-pay Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/MonthlyPay"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "IncomeReportData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "employmentId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fromDate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "periods",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/income-reports/{id}": {
      "delete": {
        "description": "Delete IncomeReportData",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncomeReportData"
            }
          }
        },
        "tags": [
          "IncomeReportData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get IncomeReportData",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncomeReportData"
            }
          }
        },
        "tags": [
          "IncomeReportData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update IncomeReportData",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncomeReportData"
            }
          }
        },
        "tags": [
          "IncomeReportData"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "IncomeReportData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncomeReportData"
            }
          }
        ]
      }
    },
    "/income-reports": {
      "get": {
        "description": "Query IncomeReportData",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/IncomeReportData"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "IncomeReportData"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create IncomeReportData",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/IncomeReportData"
            }
          }
        },
        "tags": [
          "IncomeReportData"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "IncomeReportData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncomeReportData"
            }
          }
        ]
      }
    },
    "/mysalarytranses?action=getall": {
      "get": {
        "description": "getall Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Object"
        ],
        "parameters": []
      }
    },
    "/mysalarytranses/{id}": {},
    "/mysalarytranses": {},
    "/otpexportwagetypes/{id}": {
      "delete": {
        "description": "Delete OtpExportWagetype",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OtpExportWagetype"
            }
          }
        },
        "tags": [
          "OtpExportWagetype"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get OtpExportWagetype",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OtpExportWagetype"
            }
          }
        },
        "tags": [
          "OtpExportWagetype"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update OtpExportWagetype",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OtpExportWagetype"
            }
          }
        },
        "tags": [
          "OtpExportWagetype"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "OtpExportWagetype",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OtpExportWagetype"
            }
          }
        ]
      }
    },
    "/otpexportwagetypes": {
      "get": {
        "description": "Query OtpExportWagetype",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/OtpExportWagetype"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "OtpExportWagetype"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create OtpExportWagetype",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/OtpExportWagetype"
            }
          }
        },
        "tags": [
          "OtpExportWagetype"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "OtpExportWagetype",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OtpExportWagetype"
            }
          }
        ]
      }
    },
    "/paycheck?action=all": {
      "get": {
        "description": "all Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Paycheck"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payrollID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "grouped",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/paycheck?action=fromto": {
      "get": {
        "description": "fromto Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Paycheck"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payrollID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "empnoFrom",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "empnoTo",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "grouped",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/paycheck?action=inselection": {
      "get": {
        "description": "inselection Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Paycheck"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payrollID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "employees",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "grouped",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/paycheck?action=regeneratezip": {
      "put": {
        "description": "regeneratezip Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Paycheck"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payrollID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paycheck/{id}": {
      "delete": {
        "description": "Delete Paycheck",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Paycheck"
            }
          }
        },
        "tags": [
          "Paycheck"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Paycheck",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Paycheck"
            }
          }
        },
        "tags": [
          "Paycheck"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Paycheck",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Paycheck"
            }
          }
        },
        "tags": [
          "Paycheck"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Paycheck",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Paycheck"
            }
          }
        ]
      }
    },
    "/paycheck": {
      "get": {
        "description": "Query Paycheck",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Paycheck"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Paycheck"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Paycheck",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Paycheck"
            }
          }
        },
        "tags": [
          "Paycheck"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Paycheck",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Paycheck"
            }
          }
        ]
      }
    },
    "/payrollrun?action=PayrollJob": {
      "post": {
        "description": "PayrollJob Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "entity",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=calculatejob": {
      "put": {
        "description": "calculatejob Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=calculate": {
      "put": {
        "description": "calculate Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/payrollrun/{id}?action=postingsummarydraft": {
      "get": {
        "description": "postingsummarydraft Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostingSummaryDraft"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/payrollrun/{id}?action=rebuildpostings": {
      "put": {
        "description": "rebuildpostings Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostingSummaryDraft"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "bookingType",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "forceRegeneration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=calculateonemp": {
      "put": {
        "description": "calculateonemp Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "empID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payrollrun?action=calculateonemp": {
      "put": {
        "description": "calculateonemp Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "empID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=recalculatetax": {
      "put": {
        "description": "recalculatetax Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/payrollrun/{id}?action=control": {
      "put": {
        "description": "control Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/payrollrun/{id}?action=paymentlist": {
      "get": {
        "description": "paymentlist Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryTransactionPay"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/payrollrun/{id}?action=sendpaymentlist": {
      "post": {
        "description": "sendpaymentlist Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/payrollrun/{id}?action=postingsummary": {
      "get": {
        "description": "postingsummary Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostingSummary"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "bookingType",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=postingsummary-lines": {
      "get": {
        "description": "postingsummary-lines Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryLine"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "bookingType",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=book": {
      "put": {
        "description": "book Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryLine"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "accountingDate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "numberseriesID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "bookingType",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "refresh",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=rebuildBalances": {
      "put": {
        "description": "rebuildBalances Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/payrollrun/{id}?action=resetrun": {
      "put": {
        "description": "resetrun Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/payrollrun/{id}?action=next": {
      "get": {
        "description": "next Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "RunID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=previous": {
      "get": {
        "description": "previous Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "RunID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=latest": {
      "get": {
        "description": "latest Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/payrollrun/{id}?action=latestperiod": {
      "get": {
        "description": "latestperiod Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "currYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=vacationpay-list": {
      "get": {
        "description": "vacationpay-list Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "lastyear",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "showAll",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=vacationpay-from-emp-list": {
      "put": {
        "description": "vacationpay-from-emp-list Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "employeeIDs",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "SplitOnSixth",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=vacationpay-from-vacationpayinfo-list": {
      "put": {
        "description": "vacationpay-from-vacationpayinfo-list Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "payList",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=vacationpay-closure": {
      "put": {
        "description": "vacationpay-closure Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "employeeIDs",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "SplitOnSixth",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payrollrun?action=rebuild": {
      "put": {
        "description": "rebuild Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": []
      }
    },
    "/payrollrun/{id}?action=employeesonrun": {
      "get": {
        "description": "employeesonrun Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=setcategories": {
      "put": {
        "description": "setcategories Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "categories",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=email-paychecks": {
      "put": {
        "description": "email-paychecks Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "setup",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PaycheckReportSetup"
            }
          },
          {
            "in": "path",
            "name": "grouped",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=payments-on-runs": {
      "get": {
        "description": "payments-on-runs Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=time-to-salary-selection": {
      "get": {
        "description": "time-to-salary-selection Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WorkItemToSalary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}?action=work-items-to-transes": {
      "put": {
        "description": "work-items-to-transes Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryTransaction"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "workItemIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payrollrun?action=otp-export": {
      "get": {
        "description": "otp-export Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "runs",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "month",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "asXml",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payrollrun/{id}": {
      "delete": {
        "description": "Delete PayrollRun",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PayrollRun",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PayrollRun",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PayrollRun",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        ]
      }
    },
    "/payrollrun": {
      "get": {
        "description": "Query PayrollRun",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PayrollRun"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PayrollRun",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        },
        "tags": [
          "PayrollRun"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PayrollRun",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayrollRun"
            }
          }
        ]
      }
    },
    "/pensionschemes/{id}": {
      "delete": {
        "description": "Delete PensionScheme",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PensionScheme"
            }
          }
        },
        "tags": [
          "PensionScheme"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PensionScheme",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PensionScheme"
            }
          }
        },
        "tags": [
          "PensionScheme"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PensionScheme",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PensionScheme"
            }
          }
        },
        "tags": [
          "PensionScheme"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PensionScheme",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PensionScheme"
            }
          }
        ]
      }
    },
    "/pensionschemes": {
      "get": {
        "description": "Query PensionScheme",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PensionScheme"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PensionScheme"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PensionScheme",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PensionScheme"
            }
          }
        },
        "tags": [
          "PensionScheme"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PensionScheme",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PensionScheme"
            }
          }
        ]
      }
    },
    "/pensionschemesuppliers/{id}": {
      "delete": {
        "description": "Delete PensionSchemeSupplier",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PensionSchemeSupplier"
            }
          }
        },
        "tags": [
          "PensionSchemeSupplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PensionSchemeSupplier",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PensionSchemeSupplier"
            }
          }
        },
        "tags": [
          "PensionSchemeSupplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PensionSchemeSupplier",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PensionSchemeSupplier"
            }
          }
        },
        "tags": [
          "PensionSchemeSupplier"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PensionSchemeSupplier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PensionSchemeSupplier"
            }
          }
        ]
      }
    },
    "/pensionschemesuppliers": {
      "get": {
        "description": "Query PensionSchemeSupplier",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PensionSchemeSupplier"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PensionSchemeSupplier"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PensionSchemeSupplier",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PensionSchemeSupplier"
            }
          }
        },
        "tags": [
          "PensionSchemeSupplier"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PensionSchemeSupplier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PensionSchemeSupplier"
            }
          }
        ]
      }
    },
    "/reconciliation?action=from-to": {
      "get": {
        "description": "from-to Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Reconciliation"
            }
          }
        },
        "tags": [
          "Reconciliation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fromMonth",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toMonth",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "includeNotPayed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "onlyBooked",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/reconciliation/{id}": {},
    "/reconciliation": {},
    "/regulativegroups/{id}": {
      "delete": {
        "description": "Delete RegulativeGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegulativeGroup"
            }
          }
        },
        "tags": [
          "RegulativeGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get RegulativeGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegulativeGroup"
            }
          }
        },
        "tags": [
          "RegulativeGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update RegulativeGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegulativeGroup"
            }
          }
        },
        "tags": [
          "RegulativeGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "RegulativeGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegulativeGroup"
            }
          }
        ]
      }
    },
    "/regulativegroups": {
      "get": {
        "description": "Query RegulativeGroup",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/RegulativeGroup"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "RegulativeGroup"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create RegulativeGroup",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/RegulativeGroup"
            }
          }
        },
        "tags": [
          "RegulativeGroup"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "RegulativeGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegulativeGroup"
            }
          }
        ]
      }
    },
    "/salarybalances/{id}?action=balance": {
      "get": {
        "description": "balance Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/salarybalances?action=unionreport": {
      "get": {
        "description": "unionreport Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UnionReport"
            }
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fromPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fromSupplier",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toSupplier",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/salarybalances?action=update-from-employments": {
      "put": {
        "description": "update-from-employments Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryTransaction"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "employmentIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/salarybalances?action=fill": {
      "post": {
        "description": "fill Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalance"
            }
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salaryBalance",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SalaryBalance"
            }
          }
        ]
      }
    },
    "/salarybalances?action=sendAdvanceForPayment": {
      "post": {
        "description": "sendAdvanceForPayment Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "salBalance",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SalaryBalance"
            }
          }
        ]
      }
    },
    "/salarybalances/{id}": {
      "delete": {
        "description": "Delete SalaryBalance",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalance"
            }
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get SalaryBalance",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalance"
            }
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update SalaryBalance",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalance"
            }
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SalaryBalance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalaryBalance"
            }
          }
        ]
      }
    },
    "/salarybalances": {
      "get": {
        "description": "Query SalaryBalance",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryBalance"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create SalaryBalance",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SalaryBalance"
            }
          }
        },
        "tags": [
          "SalaryBalance"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "SalaryBalance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalaryBalance"
            }
          }
        ]
      }
    },
    "/salarybalancelines/{id}": {
      "delete": {
        "description": "Delete SalaryBalanceLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalanceLine"
            }
          }
        },
        "tags": [
          "SalaryBalanceLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get SalaryBalanceLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalanceLine"
            }
          }
        },
        "tags": [
          "SalaryBalanceLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update SalaryBalanceLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalanceLine"
            }
          }
        },
        "tags": [
          "SalaryBalanceLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SalaryBalanceLine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalaryBalanceLine"
            }
          }
        ]
      }
    },
    "/salarybalancelines": {
      "get": {
        "description": "Query SalaryBalanceLine",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryBalanceLine"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryBalanceLine"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create SalaryBalanceLine",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SalaryBalanceLine"
            }
          }
        },
        "tags": [
          "SalaryBalanceLine"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "SalaryBalanceLine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalaryBalanceLine"
            }
          }
        ]
      }
    },
    "/salarybalancetemplates/{id}": {
      "delete": {
        "description": "Delete SalaryBalanceTemplate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalanceTemplate"
            }
          }
        },
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get SalaryBalanceTemplate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalanceTemplate"
            }
          }
        },
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update SalaryBalanceTemplate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryBalanceTemplate"
            }
          }
        },
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SalaryBalanceTemplate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalaryBalanceTemplate"
            }
          }
        ]
      }
    },
    "/salarybalancetemplates": {
      "get": {
        "description": "Query SalaryBalanceTemplate",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryBalanceTemplate"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create SalaryBalanceTemplate",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SalaryBalanceTemplate"
            }
          }
        },
        "tags": [
          "SalaryBalanceTemplate"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "SalaryBalanceTemplate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalaryBalanceTemplate"
            }
          }
        ]
      }
    },
    "/salarysums?action=getall": {
      "get": {
        "description": "getall Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "SalaryTransactionSums"
        ],
        "parameters": []
      }
    },
    "/salarysums?action=get-sums": {
      "get": {
        "description": "get-sums Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryTransactionSums"
            }
          }
        },
        "tags": [
          "SalaryTransactionSums"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/salarysums/{id}?action=yearly-sums-on-payrollrun": {
      "get": {
        "description": "yearly-sums-on-payrollrun Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryTransactionSums"
            }
          }
        },
        "tags": [
          "SalaryTransactionSums"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "empNo",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "empID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/salarysums?action=sums-in-period": {
      "get": {
        "description": "sums-in-period Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "SalaryTransactionSums"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fromPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/salarysums?action=sum-aga-lines": {
      "get": {
        "description": "sum-aga-lines Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaxAndAgaSums"
            }
          }
        },
        "tags": [
          "SalaryTransactionSums"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fromPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/salarysums/{id}": {
      "get": {
        "description": "Get SalaryTransactionSums",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryTransactionSums"
            }
          }
        },
        "tags": [
          "SalaryTransactionSums"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/salarysums": {
      "get": {
        "description": "Query SalaryTransactionSums",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryTransactionSums"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryTransactionSums"
        ],
        "parameters": []
      }
    },
    "/supplements/{id}": {
      "get": {
        "description": "Get SalaryTransactionSupplement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryTransactionSupplement"
            }
          }
        },
        "tags": [
          "SalaryTransactionSupplement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update SalaryTransactionSupplement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryTransactionSupplement"
            }
          }
        },
        "tags": [
          "SalaryTransactionSupplement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SalaryTransactionSupplement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalaryTransactionSupplement"
            }
          }
        ]
      }
    },
    "/supplements": {
      "get": {
        "description": "Query SalaryTransactionSupplement",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryTransactionSupplement"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryTransactionSupplement"
        ],
        "parameters": []
      }
    },
    "/subentities?action=sub-entities-from-brreg": {
      "get": {
        "description": "sub-entities-from-brreg Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SubEntity"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SubEntity"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgno",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/subentities/{id}": {
      "delete": {
        "description": "Delete SubEntity",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubEntity"
            }
          }
        },
        "tags": [
          "SubEntity"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get SubEntity",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubEntity"
            }
          }
        },
        "tags": [
          "SubEntity"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update SubEntity",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubEntity"
            }
          }
        },
        "tags": [
          "SubEntity"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SubEntity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubEntity"
            }
          }
        ]
      }
    },
    "/subentities": {
      "get": {
        "description": "Query SubEntity",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SubEntity"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SubEntity"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create SubEntity",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SubEntity"
            }
          }
        },
        "tags": [
          "SubEntity"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "SubEntity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubEntity"
            }
          }
        ]
      }
    },
    "/travels?action=traveltext": {
      "post": {
        "description": "traveltext Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Travel"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Travel"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apikeyID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/travels?action=ttpdf": {
      "put": {
        "description": "ttpdf Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "Travel"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "apikeyID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/travels?action=tosalary": {
      "put": {
        "description": "tosalary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryTransaction"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Travel"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "travelIDs",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "runID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/travels?action=toinvoice": {
      "put": {
        "description": "toinvoice Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SupplierInvoice"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Travel"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "travelIDs",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ]
      }
    },
    "/travels/{id}": {
      "delete": {
        "description": "Delete Travel",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Travel"
            }
          }
        },
        "tags": [
          "Travel"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Travel",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Travel"
            }
          }
        },
        "tags": [
          "Travel"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Travel",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Travel"
            }
          }
        },
        "tags": [
          "Travel"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Travel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Travel"
            }
          }
        ]
      }
    },
    "/travels": {
      "get": {
        "description": "Query Travel",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Travel"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Travel"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Travel",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Travel"
            }
          }
        },
        "tags": [
          "Travel"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Travel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Travel"
            }
          }
        ]
      }
    },
    "/travellines/{id}?action=attachment": {
      "put": {
        "description": "attachment Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "TravelLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/travellines/{id}": {
      "delete": {
        "description": "Delete TravelLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TravelLine"
            }
          }
        },
        "tags": [
          "TravelLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get TravelLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TravelLine"
            }
          }
        },
        "tags": [
          "TravelLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update TravelLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TravelLine"
            }
          }
        },
        "tags": [
          "TravelLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "TravelLine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TravelLine"
            }
          }
        ]
      }
    },
    "/travellines": {
      "get": {
        "description": "Query TravelLine",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/TravelLine"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "TravelLine"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create TravelLine",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/TravelLine"
            }
          }
        },
        "tags": [
          "TravelLine"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "TravelLine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TravelLine"
            }
          }
        ]
      }
    },
    "/traveltype/{id}": {
      "delete": {
        "description": "Delete TravelType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TravelType"
            }
          }
        },
        "tags": [
          "TravelType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get TravelType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TravelType"
            }
          }
        },
        "tags": [
          "TravelType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update TravelType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TravelType"
            }
          }
        },
        "tags": [
          "TravelType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "TravelType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TravelType"
            }
          }
        ]
      }
    },
    "/traveltype": {
      "get": {
        "description": "Query TravelType",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/TravelType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "TravelType"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create TravelType",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/TravelType"
            }
          }
        },
        "tags": [
          "TravelType"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "TravelType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TravelType"
            }
          }
        ]
      }
    },
    "/VacationPayLines?action=lines": {
      "get": {
        "description": "lines Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payrunID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "expandEmps",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "showAll",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "maxPayPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "maxPayYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/VacationPayLines?action=pay-emps": {
      "put": {
        "description": "pay-emps Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payrollID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "employeeIDs",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "hasSixthWeek",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/VacationPayLines?action=pay-fromlines": {
      "put": {
        "description": "pay-fromlines Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payrollID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "payList",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "hasSixthWeek",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/VacationPayLines?action=to-salary": {
      "put": {
        "description": "to-salary Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "payrollID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "baseYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "payList",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ]
      }
    },
    "/VacationPayLines?action=close": {
      "put": {
        "description": "close Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "employeeIDs",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "payrollID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "hasSixthWeek",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/VacationPayLines/{id}": {
      "delete": {
        "description": "Delete VacationPayLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VacationPayLine"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VacationPayLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VacationPayLine"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VacationPayLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VacationPayLine"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VacationPayLine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VacationPayLine"
            }
          }
        ]
      }
    },
    "/VacationPayLines": {
      "get": {
        "description": "Query VacationPayLine",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VacationPayLine"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VacationPayLine",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VacationPayLine"
            }
          }
        },
        "tags": [
          "VacationPayLine"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VacationPayLine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VacationPayLine"
            }
          }
        ]
      }
    },
    "/employeevacationrates/{id}": {
      "delete": {
        "description": "Delete VacationRateEmployee",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VacationRateEmployee"
            }
          }
        },
        "tags": [
          "VacationRateEmployee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VacationRateEmployee",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VacationRateEmployee"
            }
          }
        },
        "tags": [
          "VacationRateEmployee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VacationRateEmployee",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VacationRateEmployee"
            }
          }
        },
        "tags": [
          "VacationRateEmployee"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VacationRateEmployee",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VacationRateEmployee"
            }
          }
        ]
      }
    },
    "/employeevacationrates": {
      "get": {
        "description": "Query VacationRateEmployee",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VacationRateEmployee"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VacationRateEmployee"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VacationRateEmployee",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VacationRateEmployee"
            }
          }
        },
        "tags": [
          "VacationRateEmployee"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VacationRateEmployee",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VacationRateEmployee"
            }
          }
        ]
      }
    },
    "/wagetypes?action=validamelding": {
      "get": {
        "description": "validamelding Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "fordel",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "beskrivelse",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/wagetypes?action=synchronize": {
      "put": {
        "description": "synchronize Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": []
      }
    },
    "/wagetypes?action=create-wagetypes-for-year": {
      "put": {
        "description": "create-wagetypes-for-year Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": []
      }
    },
    "/wagetypes?action=create-and-update-standard-wagetypes": {
      "put": {
        "description": "create-and-update-standard-wagetypes Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": []
      }
    },
    "/wagetypes/{id}?action=used-in-payrollrun": {
      "get": {
        "description": "used-in-payrollrun Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/wagetypes?action=get-rate": {
      "get": {
        "description": "get-rate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wagetypeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "employmentID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "employeeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/wagetypes/{id}?action=sync-supplements": {
      "put": {
        "description": "sync-supplements Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/wagetypes/{id}": {
      "delete": {
        "description": "Delete WageType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WageType"
            }
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get WageType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WageType"
            }
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update WageType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WageType"
            }
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "WageType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WageType"
            }
          }
        ]
      }
    },
    "/wagetypes": {
      "get": {
        "description": "Query WageType",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WageType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create WageType",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/WageType"
            }
          }
        },
        "tags": [
          "WageType"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "WageType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WageType"
            }
          }
        ]
      }
    },
    "/wagetypetranslations/{id}": {
      "delete": {
        "description": "Delete WageTypeTranslation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WageTypeTranslation"
            }
          }
        },
        "tags": [
          "WageTypeTranslation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get WageTypeTranslation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WageTypeTranslation"
            }
          }
        },
        "tags": [
          "WageTypeTranslation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update WageTypeTranslation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WageTypeTranslation"
            }
          }
        },
        "tags": [
          "WageTypeTranslation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "WageTypeTranslation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WageTypeTranslation"
            }
          }
        ]
      }
    },
    "/wagetypetranslations": {
      "get": {
        "description": "Query WageTypeTranslation",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/WageTypeTranslation"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "WageTypeTranslation"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create WageTypeTranslation",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/WageTypeTranslation"
            }
          }
        },
        "tags": [
          "WageTypeTranslation"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "WageTypeTranslation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WageTypeTranslation"
            }
          }
        ]
      }
    },
    "/salarytrans?action=complete-trans": {
      "post": {
        "description": "complete-trans Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryTransaction"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryTransaction"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "trans",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SalaryTransaction"
            }
          }
        ]
      }
    },
    "/salarytrans?action=update-from-employments": {
      "put": {
        "description": "update-from-employments Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryTransaction"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryTransaction"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "employmentIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/salarytrans?action=create-recurring-car-transactions": {
      "post": {
        "description": "create-recurring-car-transactions Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryTransaction"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryTransaction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/salarytrans/{id}": {
      "delete": {
        "description": "Delete SalaryTransaction",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryTransaction"
            }
          }
        },
        "tags": [
          "SalaryTransaction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get SalaryTransaction",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryTransaction"
            }
          }
        },
        "tags": [
          "SalaryTransaction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update SalaryTransaction",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SalaryTransaction"
            }
          }
        },
        "tags": [
          "SalaryTransaction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SalaryTransaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalaryTransaction"
            }
          }
        ]
      }
    },
    "/salarytrans": {
      "get": {
        "description": "Query SalaryTransaction",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SalaryTransaction"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SalaryTransaction"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create SalaryTransaction",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SalaryTransaction"
            }
          }
        },
        "tags": [
          "SalaryTransaction"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "SalaryTransaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SalaryTransaction"
            }
          }
        ]
      }
    },
    "/regulatives/{id}?action=import": {
      "post": {
        "description": "import Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Regulative"
            }
          }
        },
        "tags": [
          "Regulative"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/regulatives/{id}?action=export": {
      "get": {
        "description": "export Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IActionResult"
            }
          }
        },
        "tags": [
          "Regulative"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/regulatives?action=template": {
      "get": {
        "description": "template Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IActionResult"
            }
          }
        },
        "tags": [
          "Regulative"
        ],
        "parameters": []
      }
    },
    "/regulatives/{id}": {
      "delete": {
        "description": "Delete Regulative",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Regulative"
            }
          }
        },
        "tags": [
          "Regulative"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Regulative",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Regulative"
            }
          }
        },
        "tags": [
          "Regulative"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Regulative",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Regulative"
            }
          }
        },
        "tags": [
          "Regulative"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Regulative",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Regulative"
            }
          }
        ]
      }
    },
    "/regulatives": {
      "get": {
        "description": "Query Regulative",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Regulative"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Regulative"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Regulative",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Regulative"
            }
          }
        },
        "tags": [
          "Regulative"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Regulative",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Regulative"
            }
          }
        ]
      }
    },
    "/thresholds/{id}": {
      "delete": {
        "description": "Delete TransitionThreshold",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TransitionThreshold"
            }
          }
        },
        "tags": [
          "TransitionThreshold"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get TransitionThreshold",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TransitionThreshold"
            }
          }
        },
        "tags": [
          "TransitionThreshold"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update TransitionThreshold",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TransitionThreshold"
            }
          }
        },
        "tags": [
          "TransitionThreshold"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "TransitionThreshold",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransitionThreshold"
            }
          }
        ]
      }
    },
    "/thresholds": {
      "get": {
        "description": "Query TransitionThreshold",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/TransitionThreshold"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "TransitionThreshold"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create TransitionThreshold",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/TransitionThreshold"
            }
          }
        },
        "tags": [
          "TransitionThreshold"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "TransitionThreshold",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransitionThreshold"
            }
          }
        ]
      }
    },
    "/approvalrules/{id}": {
      "delete": {
        "description": "Delete ApprovalRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApprovalRule"
            }
          }
        },
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ApprovalRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApprovalRule"
            }
          }
        },
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ApprovalRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApprovalRule"
            }
          }
        },
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ApprovalRule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalRule"
            }
          }
        ]
      }
    },
    "/approvalrules": {
      "get": {
        "description": "Query ApprovalRule",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ApprovalRule"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ApprovalRule"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ApprovalRule",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ApprovalRule"
            }
          }
        },
        "tags": [
          "ApprovalRule"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ApprovalRule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalRule"
            }
          }
        ]
      }
    },
    "/approvalsubstitutes/{id}": {
      "delete": {
        "description": "Delete ApprovalSubstitute",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApprovalSubstitute"
            }
          }
        },
        "tags": [
          "ApprovalSubstitute"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ApprovalSubstitute",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApprovalSubstitute"
            }
          }
        },
        "tags": [
          "ApprovalSubstitute"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ApprovalSubstitute",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApprovalSubstitute"
            }
          }
        },
        "tags": [
          "ApprovalSubstitute"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ApprovalSubstitute",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalSubstitute"
            }
          }
        ]
      }
    },
    "/approvalsubstitutes": {
      "get": {
        "description": "Query ApprovalSubstitute",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ApprovalSubstitute"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ApprovalSubstitute"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ApprovalSubstitute",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ApprovalSubstitute"
            }
          }
        },
        "tags": [
          "ApprovalSubstitute"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ApprovalSubstitute",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApprovalSubstitute"
            }
          }
        ]
      }
    },
    "/approvals/{id}?action=approve": {
      "post": {
        "description": "approve Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Approval"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/approvals/{id}?action=reject": {
      "post": {
        "description": "reject Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Approval"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/approvals/{id}": {
      "get": {
        "description": "Get Approval",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Approval"
            }
          }
        },
        "tags": [
          "Approval"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/approvals": {
      "get": {
        "description": "Query Approval",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Approval"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Approval"
        ],
        "parameters": []
      }
    },
    "/auditlogs/{id}": {
      "get": {
        "description": "Get AuditLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AuditLog"
            }
          }
        },
        "tags": [
          "AuditLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/auditlogs": {
      "get": {
        "description": "Query AuditLog",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AuditLog"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AuditLog"
        ],
        "parameters": []
      }
    },
    "/companies-access/{id}": {
      "delete": {
        "description": "Delete CompanyAccess",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyAccess"
            }
          }
        },
        "tags": [
          "CompanyAccess"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CompanyAccess",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyAccess"
            }
          }
        },
        "tags": [
          "CompanyAccess"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CompanyAccess",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyAccess"
            }
          }
        },
        "tags": [
          "CompanyAccess"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CompanyAccess",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAccess"
            }
          }
        ]
      }
    },
    "/companies-access": {
      "get": {
        "description": "Query CompanyAccess",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CompanyAccess"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CompanyAccess"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CompanyAccess",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CompanyAccess"
            }
          }
        },
        "tags": [
          "CompanyAccess"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CompanyAccess",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAccess"
            }
          }
        ]
      }
    },
    "/companies?action=undelete-company": {
      "put": {
        "description": "undelete-company Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/companies/{id}?action=undelete-company": {
      "put": {
        "description": "undelete-company Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/companies?action=delete-company": {
      "delete": {
        "description": "delete-company Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/companies/{id}?action=delete-company": {
      "delete": {
        "description": "delete-company Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/companies?action=reset-company": {
      "put": {
        "description": "reset-company Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": []
      }
    },
    "/companies?action=create-company": {
      "put": {
        "description": "create-company Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ccp",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateCompanyDetails"
            }
          }
        ]
      }
    },
    "/companies/{id}?action=create-update-email": {
      "put": {
        "description": "create-update-email Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "customEmail",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/companies/{id}?action=disable-email": {
      "put": {
        "description": "disable-email Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/companies/{id}?action=create-orgnr-email": {
      "put": {
        "description": "create-orgnr-email Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/companies/{id}?action=disable-orgnr-email": {
      "put": {
        "description": "disable-orgnr-email Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/companies/{id}?action=check-email-changed": {
      "get": {
        "description": "check-email-changed Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/companies/{id}?action=check-email-valid-available": {
      "get": {
        "description": "check-email-valid-available Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/companies/{id}?action=check-email-changed-valid-available": {
      "get": {
        "description": "check-email-changed-valid-available Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/companies/{id}?action=email-domain": {
      "get": {
        "description": "email-domain Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/companies/{id}?action=clientnumber": {
      "put": {
        "description": "clientnumber Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "clientnumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/companies/{id}": {
      "delete": {
        "description": "Delete Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Company"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/companies": {
      "get": {
        "description": "Query Company",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Company"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Company"
        ],
        "parameters": []
      }
    },
    "/custom-fields/{id}?action=activate": {
      "post": {
        "description": "activate Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CustomField"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/custom-fields/{id}": {
      "delete": {
        "description": "Delete CustomField",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        },
        "tags": [
          "CustomField"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomField",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        },
        "tags": [
          "CustomField"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomField",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        },
        "tags": [
          "CustomField"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomField",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ]
      }
    },
    "/custom-fields": {
      "get": {
        "description": "Query CustomField",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomField"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomField"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomField",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        },
        "tags": [
          "CustomField"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomField",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomField"
            }
          }
        ]
      }
    },
    "/models/{id}": {
      "get": {
        "description": "Get Model",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        },
        "tags": [
          "Model"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Model",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        },
        "tags": [
          "Model"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        ]
      }
    },
    "/models": {
      "get": {
        "description": "Query Model",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Model"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Model"
        ],
        "parameters": []
      }
    },
    "/statuslogs/{id}": {
      "get": {
        "description": "Get StatusLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/StatusLog"
            }
          }
        },
        "tags": [
          "StatusLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/statuslogs": {
      "get": {
        "description": "Query StatusLog",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/StatusLog"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "StatusLog"
        ],
        "parameters": []
      }
    },
    "/tasks/{id}?action=complete": {
      "post": {
        "description": "complete Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/tasks/{id}?action=pending": {
      "post": {
        "description": "pending Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/tasks/{id}?action=activate": {
      "post": {
        "description": "activate Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/tasks/{id}": {
      "delete": {
        "description": "Delete Task",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Task",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Task",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ]
      }
    },
    "/tasks": {
      "get": {
        "description": "Query Task",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Task"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Task",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ]
      }
    },
    "/users?action=subjectandemail": {
      "get": {
        "description": "subjectandemail Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      }
    },
    "/users?action=current-session": {
      "get": {
        "description": "current-session Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      }
    },
    "/users?action=current-roles": {
      "get": {
        "description": "current-roles Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      }
    },
    "/users?action=accept-CustomerAgreement": {
      "post": {
        "description": "accept-CustomerAgreement Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      }
    },
    "/users?action=accept-UserLicenseAgreement": {
      "post": {
        "description": "accept-UserLicenseAgreement Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      }
    },
    "/users/{id}?action=inactivate": {
      "post": {
        "description": "inactivate Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/users/{id}?action=activate": {
      "post": {
        "description": "activate Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/users/{id}?action=make-autobank-user": {
      "put": {
        "description": "make-autobank-user Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "autobankUser",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateBankUserDTO"
            }
          }
        ]
      }
    },
    "/users/{id}?action=reset-autobank-password": {
      "post": {
        "description": "reset-autobank-password Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/users?action=self-reset-autobank-password": {
      "put": {
        "description": "self-reset-autobank-password Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      }
    },
    "/users?action=change-autobank-password": {
      "put": {
        "description": "change-autobank-password Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "changPassword",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ChangeAutobankPasswordDTO"
            }
          }
        ]
      }
    },
    "/users?action=add-user": {
      "post": {
        "description": "add-user Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "globalIdentity",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "supportuser",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/users?action=user-code-challenge": {
      "get": {
        "description": "user-code-challenge Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reference",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users?action=verify-code-challenge": {
      "put": {
        "description": "verify-code-challenge Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "reference",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/users?action=bankid-verified": {
      "get": {
        "description": "bankid-verified Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      }
    },
    "/users?action=bankid-verification": {
      "get": {
        "description": "bankid-verification Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankVerificationDto"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      }
    },
    "/users?action=adminusers": {
      "get": {
        "description": "adminusers Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      }
    },
    "/users/{id}": {
      "delete": {
        "description": "Delete User",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get User",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update User",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/users": {
      "get": {
        "description": "Query User",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create User",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ]
      }
    },
    "/user-verifications?action=create": {
      "post": {
        "description": "create Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserVerification"
            }
          }
        },
        "tags": [
          "UserVerification"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userVerfication",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserVerification"
            }
          }
        ]
      }
    },
    "/user-verifications?action=cancel-invitation": {
      "post": {
        "description": "cancel-invitation Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserVerification"
            }
          }
        },
        "tags": [
          "UserVerification"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userVerfication",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserVerification"
            }
          }
        ]
      }
    },
    "/user-verifications/{id}": {
      "delete": {
        "description": "Delete UserVerification",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserVerification"
            }
          }
        },
        "tags": [
          "UserVerification"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get UserVerification",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserVerification"
            }
          }
        },
        "tags": [
          "UserVerification"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/user-verifications": {
      "get": {
        "description": "Query UserVerification",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/UserVerification"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "UserVerification"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create UserVerification",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/UserVerification"
            }
          }
        },
        "tags": [
          "UserVerification"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "UserVerification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserVerification"
            }
          }
        ]
      }
    },
    "/valuelists/{id}": {
      "delete": {
        "description": "Delete ValueList",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ValueList"
            }
          }
        },
        "tags": [
          "ValueList"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ValueList",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ValueList"
            }
          }
        },
        "tags": [
          "ValueList"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ValueList",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ValueList"
            }
          }
        },
        "tags": [
          "ValueList"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ValueList",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValueList"
            }
          }
        ]
      }
    },
    "/valuelists": {
      "get": {
        "description": "Query ValueList",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ValueList"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ValueList"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ValueList",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ValueList"
            }
          }
        },
        "tags": [
          "ValueList"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ValueList",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValueList"
            }
          }
        ]
      }
    },
    "/valueitems/{id}": {
      "delete": {
        "description": "Delete ValueItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ValueItem"
            }
          }
        },
        "tags": [
          "ValueItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ValueItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ValueItem"
            }
          }
        },
        "tags": [
          "ValueItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ValueItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ValueItem"
            }
          }
        },
        "tags": [
          "ValueItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ValueItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValueItem"
            }
          }
        ]
      }
    },
    "/valueitems": {
      "get": {
        "description": "Query ValueItem",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ValueItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ValueItem"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ValueItem",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ValueItem"
            }
          }
        },
        "tags": [
          "ValueItem"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ValueItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValueItem"
            }
          }
        ]
      }
    },
    "/translations/{id}": {
      "delete": {
        "description": "Delete Translation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          }
        },
        "tags": [
          "Translation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Translation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          }
        },
        "tags": [
          "Translation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Translation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          }
        },
        "tags": [
          "Translation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Translation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          }
        ]
      }
    },
    "/translations": {
      "get": {
        "description": "Query Translation",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Translation"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Translation"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Translation",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          }
        },
        "tags": [
          "Translation"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Translation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Translation"
            }
          }
        ]
      }
    },
    "/translatables/{id}": {
      "delete": {
        "description": "Delete Translatable",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Translatable"
            }
          }
        },
        "tags": [
          "Translatable"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Translatable",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Translatable"
            }
          }
        },
        "tags": [
          "Translatable"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Translatable",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Translatable"
            }
          }
        },
        "tags": [
          "Translatable"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Translatable",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Translatable"
            }
          }
        ]
      }
    },
    "/translatables": {
      "get": {
        "description": "Query Translatable",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Translatable"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Translatable"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Translatable",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Translatable"
            }
          }
        },
        "tags": [
          "Translatable"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Translatable",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Translatable"
            }
          }
        ]
      }
    },
    "/languages/{id}": {
      "delete": {
        "description": "Delete Language",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Language"
            }
          }
        },
        "tags": [
          "Language"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Language",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Language"
            }
          }
        },
        "tags": [
          "Language"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Language",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Language"
            }
          }
        },
        "tags": [
          "Language"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Language",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Language"
            }
          }
        ]
      }
    },
    "/languages": {
      "get": {
        "description": "Query Language",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Language"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Language"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Language",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Language"
            }
          }
        },
        "tags": [
          "Language"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Language",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Language"
            }
          }
        ]
      }
    },
    "/number-series?action=get-active-numberseries": {
      "get": {
        "description": "get-active-numberseries Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/NumberSeries"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/number-series?action=get-numberseries-asinvoice": {
      "get": {
        "description": "get-numberseries-asinvoice Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeries"
            }
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": []
      }
    },
    "/number-series?action=reset-numberseries-next-number": {
      "put": {
        "description": "reset-numberseries-next-number Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "numberSeriesID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/number-series?action=get-max-used-number": {
      "get": {
        "description": "get-max-used-number Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "numberSeriesID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/number-series?action=get-available-numbers-in-numberseries": {
      "get": {
        "description": "get-available-numbers-in-numberseries Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "numberSeriesID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/number-series/{id}": {
      "delete": {
        "description": "Delete NumberSeries",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeries"
            }
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get NumberSeries",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeries"
            }
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update NumberSeries",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeries"
            }
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NumberSeries",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberSeries"
            }
          }
        ]
      }
    },
    "/number-series": {
      "get": {
        "description": "Query NumberSeries",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/NumberSeries"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create NumberSeries",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NumberSeries"
            }
          }
        },
        "tags": [
          "NumberSeries"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "NumberSeries",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberSeries"
            }
          }
        ]
      }
    },
    "/number-series-invalid-overlaps/{id}": {
      "delete": {
        "description": "Delete NumberSeriesInvalidOverlap",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesInvalidOverlap"
            }
          }
        },
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get NumberSeriesInvalidOverlap",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesInvalidOverlap"
            }
          }
        },
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update NumberSeriesInvalidOverlap",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesInvalidOverlap"
            }
          }
        },
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NumberSeriesInvalidOverlap",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberSeriesInvalidOverlap"
            }
          }
        ]
      }
    },
    "/number-series-invalid-overlaps": {
      "get": {
        "description": "Query NumberSeriesInvalidOverlap",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/NumberSeriesInvalidOverlap"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create NumberSeriesInvalidOverlap",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesInvalidOverlap"
            }
          }
        },
        "tags": [
          "NumberSeriesInvalidOverlap"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "NumberSeriesInvalidOverlap",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberSeriesInvalidOverlap"
            }
          }
        ]
      }
    },
    "/number-series-tasks?action=get-active-numberseriestasks": {
      "get": {
        "description": "get-active-numberseriestasks Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ActiveNumberSeriesTask"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "NumberSeriesTask"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/number-series-tasks/{id}": {
      "delete": {
        "description": "Delete NumberSeriesTask",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesTask"
            }
          }
        },
        "tags": [
          "NumberSeriesTask"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get NumberSeriesTask",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesTask"
            }
          }
        },
        "tags": [
          "NumberSeriesTask"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update NumberSeriesTask",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesTask"
            }
          }
        },
        "tags": [
          "NumberSeriesTask"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NumberSeriesTask",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberSeriesTask"
            }
          }
        ]
      }
    },
    "/number-series-tasks": {
      "get": {
        "description": "Query NumberSeriesTask",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/NumberSeriesTask"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "NumberSeriesTask"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create NumberSeriesTask",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesTask"
            }
          }
        },
        "tags": [
          "NumberSeriesTask"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "NumberSeriesTask",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberSeriesTask"
            }
          }
        ]
      }
    },
    "/number-series-types/{id}": {
      "delete": {
        "description": "Delete NumberSeriesType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesType"
            }
          }
        },
        "tags": [
          "NumberSeriesType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get NumberSeriesType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesType"
            }
          }
        },
        "tags": [
          "NumberSeriesType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update NumberSeriesType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesType"
            }
          }
        },
        "tags": [
          "NumberSeriesType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "NumberSeriesType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberSeriesType"
            }
          }
        ]
      }
    },
    "/number-series-types": {
      "get": {
        "description": "Query NumberSeriesType",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/NumberSeriesType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "NumberSeriesType"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create NumberSeriesType",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/NumberSeriesType"
            }
          }
        },
        "tags": [
          "NumberSeriesType"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "NumberSeriesType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberSeriesType"
            }
          }
        ]
      }
    },
    "/files/{id}?action=set-is-attachment": {
      "put": {
        "description": "set-is-attachment Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "entitytype",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entityid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "isAttachment",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/files/{id}?action=link": {
      "post": {
        "description": "link Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "entitytype",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entityid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/files/{id}?action=unlink": {
      "post": {
        "description": "unlink Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "entitytype",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entityid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/files/{id}?action=download": {
      "get": {
        "description": "download Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/files/{id}?action=ocranalyse": {
      "get": {
        "description": "ocranalyse Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/files/{id}?action=finalize": {
      "post": {
        "description": "finalize Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/files?action=split-file": {
      "post": {
        "description": "split-file Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SplitFileResult"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "oldFileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "newFileID1",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "newFileID2",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/files?action=split-file-multiple": {
      "post": {
        "description": "split-file-multiple Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SplitFileMultipeResult"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "oldFileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "newFileIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/files/{id}": {
      "delete": {
        "description": "Delete File",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get File",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update File",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "File",
            "required": true,
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        ]
      }
    },
    "/files": {
      "get": {
        "description": "Query File",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/File"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create File",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "File",
            "required": true,
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        ]
      }
    },
    "/files/{entitytype}/{entityid}?action=delete-by-filetag": {
      "delete": {
        "description": "delete-by-filetag Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileTagName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/files/{entitytype}/{entityid}/{id}?action=download": {
      "get": {
        "description": "download Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/files/{entitytype}/{entityid}/{id}?action=ocranalyse": {
      "get": {
        "description": "ocranalyse Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/files/{entitytype}/{entityid}/{id}?action=finalize": {
      "post": {
        "description": "finalize Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/files/{entitytype}/{entityid}/{id}": {
      "delete": {
        "description": "Delete File",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get File",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/files/{entitytype}/{entityid}": {
      "get": {
        "description": "Query File",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/File"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create File",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "File",
            "required": true,
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        ]
      }
    },
    "/filetags/{id}": {
      "delete": {
        "description": "Delete FileTag",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FileTag"
            }
          }
        },
        "tags": [
          "FileTag"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get FileTag",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FileTag"
            }
          }
        },
        "tags": [
          "FileTag"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/filetags": {
      "get": {
        "description": "Query FileTag",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/FileTag"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "FileTag"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create FileTag",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/FileTag"
            }
          }
        },
        "tags": [
          "FileTag"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "FileTag",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileTag"
            }
          }
        ]
      }
    },
    "/filetags/{tagnames}/{status}?action=get-supplierInvoice-inbox-count": {
      "get": {
        "description": "get-supplierInvoice-inbox-count Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": []
      }
    },
    "/filetags/{tagnames}/{status}?action=get-supplierInvoice-inbox": {
      "get": {
        "description": "get-supplierInvoice-inbox Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "top",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "skip",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/filetags/{tagnames}/{status}/{id}": {},
    "/filetags/{tagnames}/{status}": {
      "get": {
        "description": "Query File",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/File"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "File"
        ],
        "parameters": []
      }
    },
    "/permissions/{id}": {
      "delete": {
        "description": "Delete Permission",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        },
        "tags": [
          "Permission"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Permission",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Permission"
            }
          }
        },
        "tags": [
          "Permission"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/permissions": {
      "get": {
        "description": "Query Permission",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Permission"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Permission"
        ],
        "parameters": []
      }
    },
    "/roles/{id}": {
      "delete": {
        "description": "Delete Role",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Role",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Role",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "description": "Query Role",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Role"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Role"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Role",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ]
      }
    },
    "/userroles?action=bulk-insert-roles": {
      "post": {
        "description": "bulk-insert-roles Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "UserRole"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userRoles",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/UserRole"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/userroles/{id}": {
      "delete": {
        "description": "Delete UserRole",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        },
        "tags": [
          "UserRole"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get UserRole",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        },
        "tags": [
          "UserRole"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update UserRole",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        },
        "tags": [
          "UserRole"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "UserRole",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        ]
      }
    },
    "/userroles": {
      "get": {
        "description": "Query UserRole",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/UserRole"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "UserRole"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create UserRole",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        },
        "tags": [
          "UserRole"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "UserRole",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRole"
            }
          }
        ]
      }
    },
    "/accountvisibilitygroups/{id}": {
      "delete": {
        "description": "Delete AccountVisibilityGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountVisibilityGroup"
            }
          }
        },
        "tags": [
          "AccountVisibilityGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AccountVisibilityGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountVisibilityGroup"
            }
          }
        },
        "tags": [
          "AccountVisibilityGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AccountVisibilityGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountVisibilityGroup"
            }
          }
        },
        "tags": [
          "AccountVisibilityGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AccountVisibilityGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountVisibilityGroup"
            }
          }
        ]
      }
    },
    "/accountvisibilitygroups": {
      "get": {
        "description": "Query AccountVisibilityGroup",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountVisibilityGroup"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AccountVisibilityGroup"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AccountVisibilityGroup",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AccountVisibilityGroup"
            }
          }
        },
        "tags": [
          "AccountVisibilityGroup"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AccountVisibilityGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountVisibilityGroup"
            }
          }
        ]
      }
    },
    "/AGAZones?action=get-agasectors": {
      "get": {
        "description": "get-agasectors Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AGASector"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AGAZone"
        ],
        "parameters": []
      }
    },
    "/AGAZones/{id}": {
      "get": {
        "description": "Get AGAZone",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AGAZone"
            }
          }
        },
        "tags": [
          "AGAZone"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AGAZone",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AGAZone"
            }
          }
        },
        "tags": [
          "AGAZone"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AGAZone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AGAZone"
            }
          }
        ]
      }
    },
    "/AGAZones": {
      "get": {
        "description": "Query AGAZone",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AGAZone"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AGAZone"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AGAZone",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AGAZone"
            }
          }
        },
        "tags": [
          "AGAZone"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AGAZone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AGAZone"
            }
          }
        ]
      }
    },
    "/agasums?action=free-amount-summary": {
      "get": {
        "description": "free-amount-summary Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FreeAmountSummary"
            }
          }
        },
        "tags": [
          "AGASums"
        ],
        "parameters": []
      }
    },
    "/agasums/{id}": {
      "delete": {
        "description": "Delete AGASums",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AGASums"
            }
          }
        },
        "tags": [
          "AGASums"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AGASums",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AGASums"
            }
          }
        },
        "tags": [
          "AGASums"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AGASums",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AGASums"
            }
          }
        },
        "tags": [
          "AGASums"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AGASums",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AGASums"
            }
          }
        ]
      }
    },
    "/agasums": {
      "get": {
        "description": "Query AGASums",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AGASums"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AGASums"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AGASums",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AGASums"
            }
          }
        },
        "tags": [
          "AGASums"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AGASums",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AGASums"
            }
          }
        ]
      }
    },
    "/agreements?action=current": {
      "get": {
        "description": "current Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Agreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "appliesto",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/agreements/{id}": {
      "delete": {
        "description": "Delete Agreement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Agreement"
            }
          }
        },
        "tags": [
          "Agreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Agreement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Agreement"
            }
          }
        },
        "tags": [
          "Agreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Agreement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Agreement"
            }
          }
        },
        "tags": [
          "Agreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Agreement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agreement"
            }
          }
        ]
      }
    },
    "/agreements": {
      "get": {
        "description": "Query Agreement",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Agreement"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Agreement"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Agreement",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Agreement"
            }
          }
        },
        "tags": [
          "Agreement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Agreement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agreement"
            }
          }
        ]
      }
    },
    "/altinn?action=get-pin-message": {
      "post": {
        "description": "get-pin-message Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AuthenticationChallengeBE"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pinCodeRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AltinnAuthRequest"
            }
          }
        ]
      }
    },
    "/altinn?action=test-user-authentication": {
      "get": {
        "description": "test-user-authentication Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": []
      }
    },
    "/altinn/{id}?action=sendtaxrequest": {
      "post": {
        "description": "sendtaxrequest Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "option",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "empId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "requestAllChanges",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "categoryID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/altinn?action=request-tax": {
      "post": {
        "description": "request-tax Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "employeeIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "requestAllChanges",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/altinn?action=request-tax-changes": {
      "post": {
        "description": "request-tax-changes Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": []
      }
    },
    "/altinn?action=send-a06-request": {
      "post": {
        "description": "send-a06-request Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "options",
            "required": false,
            "schema": {
              "$ref": "#/definitions/A06Options"
            }
          }
        ]
      }
    },
    "/altinn?action=get-a07-response": {
      "get": {
        "description": "get-a07-response Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/A07Response"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "receiptID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/altinn?action=setpassword": {
      "put": {
        "description": "setpassword Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/altinn?action=ping-altinn": {
      "put": {
        "description": "ping-altinn Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/altinn?action=getpassword": {
      "get": {
        "description": "getpassword Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": []
      }
    },
    "/altinn?action=checklogin": {
      "get": {
        "description": "checklogin Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": []
      }
    },
    "/altinn?action=send-barnepass": {
      "post": {
        "description": "send-barnepass Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Barnepass"
            }
          }
        ]
      }
    },
    "/altinn?action=is-barnepass-sendt": {
      "get": {
        "description": "is-barnepass-sendt Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/altinn?action=get-barnepass": {
      "get": {
        "description": "get-barnepass Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Barnepass"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/altinn/{id}?action=email-barnepass-to-customers": {
      "put": {
        "description": "email-barnepass-to-customers Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "ssns",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ]
      }
    },
    "/altinn?action=send-selfemployed": {
      "post": {
        "description": "send-selfemployed Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SelfEmployed"
            }
          }
        ]
      }
    },
    "/altinn/{id}": {
      "delete": {
        "description": "Delete Altinn",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Altinn"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Altinn",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Altinn"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Altinn",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Altinn"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Altinn",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Altinn"
            }
          }
        ]
      }
    },
    "/altinn": {
      "get": {
        "description": "Query Altinn",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Altinn"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Altinn",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Altinn"
            }
          }
        },
        "tags": [
          "Altinn"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Altinn",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Altinn"
            }
          }
        ]
      }
    },
    "/altinnreceipts/{id}?action=update": {
      "put": {
        "description": "update Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "AltinnReceipt"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/altinnreceipts/{id}": {
      "get": {
        "description": "Get AltinnReceipt",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "AltinnReceipt"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AltinnReceipt",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "AltinnReceipt"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AltinnReceipt",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        ]
      }
    },
    "/altinnreceipts": {
      "get": {
        "description": "Query AltinnReceipt",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AltinnReceipt"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AltinnReceipt"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AltinnReceipt",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "AltinnReceipt"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AltinnReceipt",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        ]
      }
    },
    "/altinnsigning/{id}?action=sign": {
      "post": {
        "description": "sign Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AltinnSigning"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/altinnsigning/{id}": {
      "delete": {
        "description": "Delete AltinnSigning",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnSigning"
            }
          }
        },
        "tags": [
          "AltinnSigning"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AltinnSigning",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnSigning"
            }
          }
        },
        "tags": [
          "AltinnSigning"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AltinnSigning",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnSigning"
            }
          }
        },
        "tags": [
          "AltinnSigning"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AltinnSigning",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AltinnSigning"
            }
          }
        ]
      }
    },
    "/altinnsigning": {
      "get": {
        "description": "Query AltinnSigning",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AltinnSigning"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AltinnSigning"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AltinnSigning",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AltinnSigning"
            }
          }
        },
        "tags": [
          "AltinnSigning"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AltinnSigning",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AltinnSigning"
            }
          }
        ]
      }
    },
    "/apikeys?action=setintegrationkey": {
      "put": {
        "description": "setintegrationkey Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "ApiKey"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integrationID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "integrationkey",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/apikeys?action=set-integration-data": {
      "put": {
        "description": "set-integration-data Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "ApiKey"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integrationID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SetIntegrationDataDto"
            }
          }
        ]
      }
    },
    "/apikeys?action=get-integration-key": {
      "get": {
        "description": "get-integration-key Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "ApiKey"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integrationID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/apikeys?action=set-integration-status": {
      "put": {
        "description": "set-integration-status Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "ApiKey"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "integrationID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "statusCode",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/apikeys/{id}": {
      "delete": {
        "description": "Delete ApiKey",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        },
        "tags": [
          "ApiKey"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ApiKey",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        },
        "tags": [
          "ApiKey"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ApiKey",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        },
        "tags": [
          "ApiKey"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ApiKey",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        ]
      }
    },
    "/apikeys": {
      "get": {
        "description": "Query ApiKey",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ApiKey"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ApiKey"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ApiKey",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        },
        "tags": [
          "ApiKey"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ApiKey",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        ]
      }
    },
    "/companysettings/{id}?action=update-logo": {
      "post": {
        "description": "update-logo Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "logoFileId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/companysettings/{id}?action=accept-ocr-agreement": {
      "post": {
        "description": "accept-ocr-agreement Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/companysettings/{id}?action=reject-ocr-agreement": {
      "post": {
        "description": "reject-ocr-agreement Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/companysettings?action=change-period-series": {
      "post": {
        "description": "change-period-series Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "periodSeriesID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "accountYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/companysettings?action=exists": {
      "get": {
        "description": "exists Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": []
      }
    },
    "/companysettings?action=fill-in-from-brreg": {
      "get": {
        "description": "fill-in-from-brreg Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanySettings"
            }
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orgNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/companysettings/{id}?action=activate-einvoice": {
      "put": {
        "description": "activate-einvoice Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/companysettings/{id}": {
      "delete": {
        "description": "Delete CompanySettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanySettings"
            }
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CompanySettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanySettings"
            }
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CompanySettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanySettings"
            }
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CompanySettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanySettings"
            }
          }
        ]
      }
    },
    "/companysettings": {
      "get": {
        "description": "Query CompanySettings",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CompanySettings"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CompanySettings",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CompanySettings"
            }
          }
        },
        "tags": [
          "CompanySettings"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CompanySettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanySettings"
            }
          }
        ]
      }
    },
    "/companytypes/{id}": {
      "delete": {
        "description": "Delete CompanyType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyType"
            }
          }
        },
        "tags": [
          "CompanyType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CompanyType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyType"
            }
          }
        },
        "tags": [
          "CompanyType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CompanyType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyType"
            }
          }
        },
        "tags": [
          "CompanyType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CompanyType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyType"
            }
          }
        ]
      }
    },
    "/companytypes": {
      "get": {
        "description": "Query CompanyType",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CompanyType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CompanyType"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CompanyType",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CompanyType"
            }
          }
        },
        "tags": [
          "CompanyType"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CompanyType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyType"
            }
          }
        ]
      }
    },
    "/countries?action=get-by-countrycode": {
      "get": {
        "description": "get-by-countrycode Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Country"
            }
          }
        },
        "tags": [
          "Country"
        ],
        "parameters": []
      }
    },
    "/countries/{id}": {
      "delete": {
        "description": "Delete Country",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Country"
            }
          }
        },
        "tags": [
          "Country"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Country",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Country"
            }
          }
        },
        "tags": [
          "Country"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Country",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Country"
            }
          }
        },
        "tags": [
          "Country"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Country",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Country"
            }
          }
        ]
      }
    },
    "/countries": {
      "get": {
        "description": "Query Country",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Country"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Country"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Country",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Country"
            }
          }
        },
        "tags": [
          "Country"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Country",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Country"
            }
          }
        ]
      }
    },
    "/currencycodes/{id}": {
      "delete": {
        "description": "Delete CurrencyCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CurrencyCode"
            }
          }
        },
        "tags": [
          "CurrencyCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CurrencyCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CurrencyCode"
            }
          }
        },
        "tags": [
          "CurrencyCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CurrencyCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CurrencyCode"
            }
          }
        },
        "tags": [
          "CurrencyCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CurrencyCode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyCode"
            }
          }
        ]
      }
    },
    "/currencycodes": {
      "get": {
        "description": "Query CurrencyCode",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CurrencyCode"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CurrencyCode"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CurrencyCode",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CurrencyCode"
            }
          }
        },
        "tags": [
          "CurrencyCode"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CurrencyCode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyCode"
            }
          }
        ]
      }
    },
    "/currencies?action=get-all-exchange-rates": {
      "get": {
        "description": "get-all-exchange-rates Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CurrencyRateData"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "toCurrencyCodeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "currencyDate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/currencies?action=get-currency-exchange-rate": {
      "get": {
        "description": "get-currency-exchange-rate Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CurrencyRateData"
            }
          }
        },
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fromCurrencyCodeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toCurrencyCodeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "currencyDate",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/currencies?action=download-from-norgesbank": {
      "get": {
        "description": "download-from-norgesbank Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "downloadFromDate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/currencies?action=get-latest-currency-downloaded-date": {
      "get": {
        "description": "get-latest-currency-downloaded-date Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "downloadSource",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/currencies/{id}": {
      "delete": {
        "description": "Delete Currency",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          }
        },
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Currency",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          }
        },
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Currency",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          }
        },
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Currency",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          }
        ]
      }
    },
    "/currencies": {
      "get": {
        "description": "Query Currency",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Currency"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Currency"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Currency",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          }
        },
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Currency",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Currency"
            }
          }
        ]
      }
    },
    "/currencyoverrides/{id}": {
      "delete": {
        "description": "Delete CurrencyOverride",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CurrencyOverride"
            }
          }
        },
        "tags": [
          "CurrencyOverride"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CurrencyOverride",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CurrencyOverride"
            }
          }
        },
        "tags": [
          "CurrencyOverride"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CurrencyOverride",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CurrencyOverride"
            }
          }
        },
        "tags": [
          "CurrencyOverride"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CurrencyOverride",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyOverride"
            }
          }
        ]
      }
    },
    "/currencyoverrides": {
      "get": {
        "description": "Query CurrencyOverride",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CurrencyOverride"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CurrencyOverride"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CurrencyOverride",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CurrencyOverride"
            }
          }
        },
        "tags": [
          "CurrencyOverride"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CurrencyOverride",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CurrencyOverride"
            }
          }
        ]
      }
    },
    "/dimensionsettings/{id}": {
      "delete": {
        "description": "Delete DimensionSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DimensionSettings"
            }
          }
        },
        "tags": [
          "DimensionSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get DimensionSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DimensionSettings"
            }
          }
        },
        "tags": [
          "DimensionSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update DimensionSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DimensionSettings"
            }
          }
        },
        "tags": [
          "DimensionSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "DimensionSettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DimensionSettings"
            }
          }
        ]
      }
    },
    "/dimensionsettings": {
      "get": {
        "description": "Query DimensionSettings",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/DimensionSettings"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "DimensionSettings"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create DimensionSettings",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/DimensionSettings"
            }
          }
        },
        "tags": [
          "DimensionSettings"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "DimensionSettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DimensionSettings"
            }
          }
        ]
      }
    },
    "/distributions?action=distribute": {
      "put": {
        "description": "distribute Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/distributions?action=distribute-list": {
      "put": {
        "description": "distribute-list Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/distributions?action=distribute-with-date-and-type": {
      "put": {
        "description": "distribute-with-date-and-type Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributeDate",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/distributions?action=distribute-with-date": {
      "put": {
        "description": "distribute-with-date Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributeDate",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/distributions?action=distribute-with-type": {
      "put": {
        "description": "distribute-with-type Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "distributionType",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "emailDTO",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EmailDTO"
            }
          }
        ]
      }
    },
    "/distributions?action=entities-with-distribution": {
      "get": {
        "description": "entities-with-distribution Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entityIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/distributions?action=get-entitytype-list": {
      "get": {
        "description": "get-entitytype-list Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": []
      }
    },
    "/distributions?action=get-entitytype-distributionplans": {
      "get": {
        "description": "get-entitytype-distributionplans Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/DistributionPlan"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/distributions?action=get-legal-elementtypes": {
      "get": {
        "description": "get-legal-elementtypes Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/DistributionPlanElementType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entityType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/distributions?action=get-valid-distributions": {
      "get": {
        "description": "get-valid-distributions Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/DistributionPlanElementValidation"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "invoiceId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/distributions?action=get-valid-distributions-for-customer": {
      "get": {
        "description": "get-valid-distributions-for-customer Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/DistributionPlanElementValidation"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/distributions?action=get-valid-distributions-for-customers": {
      "get": {
        "description": "get-valid-distributions-for-customers Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/distributions?action=is-valid-distribution": {
      "get": {
        "description": "is-valid-distribution Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DistributionPlanElementValidation"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "invoiceId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "planElementType",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/distributions?action=get-first-valid-distribution": {
      "get": {
        "description": "get-first-valid-distribution Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DistributionPlanElementValidation"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "planId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "invoiceId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/distributions?action=get-distributionplanelement-errormap": {
      "get": {
        "description": "get-distributionplanelement-errormap Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": []
      }
    },
    "/distributions/{id}": {
      "delete": {
        "description": "Delete DistributionPlan",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DistributionPlan"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get DistributionPlan",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DistributionPlan"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update DistributionPlan",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DistributionPlan"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "DistributionPlan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DistributionPlan"
            }
          }
        ]
      }
    },
    "/distributions": {
      "get": {
        "description": "Query DistributionPlan",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/DistributionPlan"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create DistributionPlan",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/DistributionPlan"
            }
          }
        },
        "tags": [
          "DistributionPlan"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "DistributionPlan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DistributionPlan"
            }
          }
        ]
      }
    },
    "/emails?action=send": {
      "post": {
        "description": "send Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "EmailLog"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "email",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SendEmail"
            }
          }
        ]
      }
    },
    "/emails/{id}": {
      "delete": {
        "description": "Delete EmailLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmailLog"
            }
          }
        },
        "tags": [
          "EmailLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get EmailLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmailLog"
            }
          }
        },
        "tags": [
          "EmailLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update EmailLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmailLog"
            }
          }
        },
        "tags": [
          "EmailLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EmailLog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailLog"
            }
          }
        ]
      }
    },
    "/emails": {
      "get": {
        "description": "Query EmailLog",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EmailLog"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "EmailLog"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create EmailLog",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmailLog"
            }
          }
        },
        "tags": [
          "EmailLog"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "EmailLog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailLog"
            }
          }
        ]
      }
    },
    "/employmentvalidvalues/{id}": {
      "delete": {
        "description": "Delete EmploymentValidValues",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmploymentValidValues"
            }
          }
        },
        "tags": [
          "EmploymentValidValues"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get EmploymentValidValues",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmploymentValidValues"
            }
          }
        },
        "tags": [
          "EmploymentValidValues"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update EmploymentValidValues",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EmploymentValidValues"
            }
          }
        },
        "tags": [
          "EmploymentValidValues"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EmploymentValidValues",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmploymentValidValues"
            }
          }
        ]
      }
    },
    "/employmentvalidvalues": {
      "get": {
        "description": "Query EmploymentValidValues",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EmploymentValidValues"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "EmploymentValidValues"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create EmploymentValidValues",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EmploymentValidValues"
            }
          }
        },
        "tags": [
          "EmploymentValidValues"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "EmploymentValidValues",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmploymentValidValues"
            }
          }
        ]
      }
    },
    "/eventplans/{id}": {
      "delete": {
        "description": "Delete Eventplan",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Eventplan"
            }
          }
        },
        "tags": [
          "Eventplan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Eventplan",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Eventplan"
            }
          }
        },
        "tags": [
          "Eventplan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Eventplan",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Eventplan"
            }
          }
        },
        "tags": [
          "Eventplan"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Eventplan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Eventplan"
            }
          }
        ]
      }
    },
    "/eventplans": {
      "get": {
        "description": "Query Eventplan",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Eventplan"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Eventplan"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Eventplan",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Eventplan"
            }
          }
        },
        "tags": [
          "Eventplan"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Eventplan",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Eventplan"
            }
          }
        ]
      }
    },
    "/eventsubscribers/{id}": {
      "delete": {
        "description": "Delete EventSubscriber",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EventSubscriber"
            }
          }
        },
        "tags": [
          "EventSubscriber"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get EventSubscriber",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EventSubscriber"
            }
          }
        },
        "tags": [
          "EventSubscriber"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update EventSubscriber",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EventSubscriber"
            }
          }
        },
        "tags": [
          "EventSubscriber"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EventSubscriber",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriber"
            }
          }
        ]
      }
    },
    "/eventsubscribers": {
      "get": {
        "description": "Query EventSubscriber",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EventSubscriber"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "EventSubscriber"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create EventSubscriber",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EventSubscriber"
            }
          }
        },
        "tags": [
          "EventSubscriber"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "EventSubscriber",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriber"
            }
          }
        ]
      }
    },
    "/expressionfilters/{id}": {
      "delete": {
        "description": "Delete ExpressionFilter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ExpressionFilter"
            }
          }
        },
        "tags": [
          "ExpressionFilter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ExpressionFilter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ExpressionFilter"
            }
          }
        },
        "tags": [
          "ExpressionFilter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ExpressionFilter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ExpressionFilter"
            }
          }
        },
        "tags": [
          "ExpressionFilter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ExpressionFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressionFilter"
            }
          }
        ]
      }
    },
    "/expressionfilters": {
      "get": {
        "description": "Query ExpressionFilter",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ExpressionFilter"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ExpressionFilter"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ExpressionFilter",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ExpressionFilter"
            }
          }
        },
        "tags": [
          "ExpressionFilter"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ExpressionFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressionFilter"
            }
          }
        ]
      }
    },
    "/MunicipalAGAZones/{id}": {
      "delete": {
        "description": "Delete MunicipalAGAZone",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MunicipalAGAZone"
            }
          }
        },
        "tags": [
          "MunicipalAGAZone"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get MunicipalAGAZone",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MunicipalAGAZone"
            }
          }
        },
        "tags": [
          "MunicipalAGAZone"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update MunicipalAGAZone",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MunicipalAGAZone"
            }
          }
        },
        "tags": [
          "MunicipalAGAZone"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "MunicipalAGAZone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MunicipalAGAZone"
            }
          }
        ]
      }
    },
    "/MunicipalAGAZones": {
      "get": {
        "description": "Query MunicipalAGAZone",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/MunicipalAGAZone"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "MunicipalAGAZone"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create MunicipalAGAZone",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/MunicipalAGAZone"
            }
          }
        },
        "tags": [
          "MunicipalAGAZone"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "MunicipalAGAZone",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MunicipalAGAZone"
            }
          }
        ]
      }
    },
    "/Municipals/{id}": {
      "delete": {
        "description": "Delete Municipal",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Municipal"
            }
          }
        },
        "tags": [
          "Municipal"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Municipal",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Municipal"
            }
          }
        },
        "tags": [
          "Municipal"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Municipal",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Municipal"
            }
          }
        },
        "tags": [
          "Municipal"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Municipal",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Municipal"
            }
          }
        ]
      }
    },
    "/Municipals": {
      "get": {
        "description": "Query Municipal",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Municipal"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Municipal"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Municipal",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Municipal"
            }
          }
        },
        "tags": [
          "Municipal"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Municipal",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Municipal"
            }
          }
        ]
      }
    },
    "/paymentCodes/{id}": {
      "delete": {
        "description": "Delete PaymentCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentCode"
            }
          }
        },
        "tags": [
          "PaymentCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PaymentCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentCode"
            }
          }
        },
        "tags": [
          "PaymentCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PaymentCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentCode"
            }
          }
        },
        "tags": [
          "PaymentCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PaymentCode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentCode"
            }
          }
        ]
      }
    },
    "/paymentCodes": {
      "get": {
        "description": "Query PaymentCode",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentCode"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PaymentCode"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PaymentCode",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PaymentCode"
            }
          }
        },
        "tags": [
          "PaymentCode"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PaymentCode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentCode"
            }
          }
        ]
      }
    },
    "/periodes/{id}": {
      "delete": {
        "description": "Delete Period",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Period"
            }
          }
        },
        "tags": [
          "Period"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Period",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Period"
            }
          }
        },
        "tags": [
          "Period"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Period",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Period"
            }
          }
        },
        "tags": [
          "Period"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Period",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Period"
            }
          }
        ]
      }
    },
    "/periodes": {
      "get": {
        "description": "Query Period",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Period"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Period"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Period",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Period"
            }
          }
        },
        "tags": [
          "Period"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Period",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Period"
            }
          }
        ]
      }
    },
    "/period-series/{id}": {
      "delete": {
        "description": "Delete PeriodSeries",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PeriodSeries"
            }
          }
        },
        "tags": [
          "PeriodSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PeriodSeries",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PeriodSeries"
            }
          }
        },
        "tags": [
          "PeriodSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PeriodSeries",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PeriodSeries"
            }
          }
        },
        "tags": [
          "PeriodSeries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PeriodSeries",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeriodSeries"
            }
          }
        ]
      }
    },
    "/period-series": {
      "get": {
        "description": "Query PeriodSeries",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PeriodSeries"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PeriodSeries"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PeriodSeries",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PeriodSeries"
            }
          }
        },
        "tags": [
          "PeriodSeries"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PeriodSeries",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeriodSeries"
            }
          }
        ]
      }
    },
    "/period-templates/{id}": {
      "delete": {
        "description": "Delete PeriodTemplate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PeriodTemplate"
            }
          }
        },
        "tags": [
          "PeriodTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PeriodTemplate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PeriodTemplate"
            }
          }
        },
        "tags": [
          "PeriodTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PeriodTemplate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PeriodTemplate"
            }
          }
        },
        "tags": [
          "PeriodTemplate"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PeriodTemplate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeriodTemplate"
            }
          }
        ]
      }
    },
    "/period-templates": {
      "get": {
        "description": "Query PeriodTemplate",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PeriodTemplate"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PeriodTemplate"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PeriodTemplate",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PeriodTemplate"
            }
          }
        },
        "tags": [
          "PeriodTemplate"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PeriodTemplate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeriodTemplate"
            }
          }
        ]
      }
    },
    "/postalcodes/{id}": {
      "delete": {
        "description": "Delete PostalCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          }
        },
        "tags": [
          "PostalCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PostalCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          }
        },
        "tags": [
          "PostalCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PostalCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          }
        },
        "tags": [
          "PostalCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PostalCode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          }
        ]
      }
    },
    "/postalcodes": {
      "get": {
        "description": "Query PostalCode",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PostalCode"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PostalCode"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PostalCode",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          }
        },
        "tags": [
          "PostalCode"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PostalCode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostalCode"
            }
          }
        ]
      }
    },
    "/predefineddescriptions?action=get-predefined-description": {
      "get": {
        "description": "get-predefined-description Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PredefinedDescription"
            }
          }
        },
        "tags": [
          "PredefinedDescription"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "type",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/predefineddescriptions?action=get-predefined-descriptions": {
      "get": {
        "description": "get-predefined-descriptions Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PredefinedDescription"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/predefineddescriptions/{id}": {
      "delete": {
        "description": "Delete PredefinedDescription",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PredefinedDescription"
            }
          }
        },
        "tags": [
          "PredefinedDescription"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PredefinedDescription",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PredefinedDescription"
            }
          }
        },
        "tags": [
          "PredefinedDescription"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PredefinedDescription",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PredefinedDescription"
            }
          }
        },
        "tags": [
          "PredefinedDescription"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PredefinedDescription",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PredefinedDescription"
            }
          }
        ]
      }
    },
    "/predefineddescriptions": {
      "get": {
        "description": "Query PredefinedDescription",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PredefinedDescription"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PredefinedDescription"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PredefinedDescription",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PredefinedDescription"
            }
          }
        },
        "tags": [
          "PredefinedDescription"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PredefinedDescription",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PredefinedDescription"
            }
          }
        ]
      }
    },
    "/rss?action=rss": {
      "get": {
        "description": "rss Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RssList"
            }
          }
        },
        "tags": [
          "RssList"
        ],
        "parameters": []
      }
    },
    "/rss/{id}": {
      "get": {
        "description": "Get RssList",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RssList"
            }
          }
        },
        "tags": [
          "RssList"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/rss": {},
    "/salaryvalidvalues?action=getall": {
      "get": {
        "description": "getall Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "code"
        ],
        "parameters": []
      }
    },
    "/salaryvalidvalues/{id}": {},
    "/salaryvalidvalues": {},
    "/salaryvalidvalue/types?action=getall": {
      "get": {
        "description": "getall Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "String"
        ],
        "parameters": []
      }
    },
    "/salaryvalidvalue/types/{id}": {},
    "/salaryvalidvalue/types": {},
    "/sharings/{id}?action=Cancel": {
      "post": {
        "description": "Cancel Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Sharing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/sharings?action=bulkupdate": {
      "put": {
        "description": "bulkupdate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Sharing"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "sharings",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SharingUpdates"
            }
          }
        ]
      }
    },
    "/sharings/{id}": {
      "get": {
        "description": "Get Sharing",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Sharing"
            }
          }
        },
        "tags": [
          "Sharing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Sharing",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Sharing"
            }
          }
        },
        "tags": [
          "Sharing"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Sharing",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sharing"
            }
          }
        ]
      }
    },
    "/sharings": {
      "get": {
        "description": "Query Sharing",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Sharing"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Sharing"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Sharing",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Sharing"
            }
          }
        },
        "tags": [
          "Sharing"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Sharing",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sharing"
            }
          }
        ]
      }
    },
    "/StaticRegister/{id}": {
      "delete": {
        "description": "Delete StaticRegister",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/StaticRegister"
            }
          }
        },
        "tags": [
          "StaticRegister"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get StaticRegister",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/StaticRegister"
            }
          }
        },
        "tags": [
          "StaticRegister"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update StaticRegister",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/StaticRegister"
            }
          }
        },
        "tags": [
          "StaticRegister"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "StaticRegister",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticRegister"
            }
          }
        ]
      }
    },
    "/StaticRegister": {
      "get": {
        "description": "Query StaticRegister",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/StaticRegister"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "StaticRegister"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create StaticRegister",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/StaticRegister"
            }
          }
        },
        "tags": [
          "StaticRegister"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "StaticRegister",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StaticRegister"
            }
          }
        ]
      }
    },
    "/STYRK?action=refresh": {
      "put": {
        "description": "refresh Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "STYRKCode"
        ],
        "parameters": []
      }
    },
    "/STYRK/{id}": {
      "get": {
        "description": "Get STYRKCode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/STYRKCode"
            }
          }
        },
        "tags": [
          "STYRKCode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/STYRK": {
      "get": {
        "description": "Query STYRKCode",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/STYRKCode"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "STYRKCode"
        ],
        "parameters": []
      }
    },
    "/invoiceitems/{itemid}/tracelinks/{id}": {
      "delete": {
        "description": "Delete Tracelink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Tracelink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Tracelink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Tracelink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        ]
      }
    },
    "/invoiceitems/{itemid}/tracelinks": {
      "get": {
        "description": "Query Tracelink",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Tracelink"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Tracelink",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Tracelink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        ]
      }
    },
    "/orderitems/{itemid}/tracelinks/{id}": {
      "delete": {
        "description": "Delete Tracelink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Tracelink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Tracelink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Tracelink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        ]
      }
    },
    "/orderitems/{itemid}/tracelinks": {
      "get": {
        "description": "Query Tracelink",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Tracelink"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Tracelink",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Tracelink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        ]
      }
    },
    "/quoteitems/{itemid}/tracelinks/{id}": {
      "delete": {
        "description": "Delete Tracelink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Tracelink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Tracelink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Tracelink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        ]
      }
    },
    "/quoteitems/{itemid}/tracelinks": {
      "get": {
        "description": "Query Tracelink",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Tracelink"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Tracelink",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        },
        "tags": [
          "Tracelink"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Tracelink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tracelink"
            }
          }
        ]
      }
    },
    "/vatreportforms/{id}": {
      "delete": {
        "description": "Delete VatReportForm",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReportForm"
            }
          }
        },
        "tags": [
          "VatReportForm"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VatReportForm",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReportForm"
            }
          }
        },
        "tags": [
          "VatReportForm"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VatReportForm",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReportForm"
            }
          }
        },
        "tags": [
          "VatReportForm"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VatReportForm",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatReportForm"
            }
          }
        ]
      }
    },
    "/vatreportforms": {
      "get": {
        "description": "Query VatReportForm",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatReportForm"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReportForm"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VatReportForm",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VatReportForm"
            }
          }
        },
        "tags": [
          "VatReportForm"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VatReportForm",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatReportForm"
            }
          }
        ]
      }
    },
    "/uniquerydefinitions?action=get-distinct-querydefinition-categories": {
      "get": {
        "description": "get-distinct-querydefinition-categories Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "UniQueryDefinition"
        ],
        "parameters": []
      }
    },
    "/uniquerydefinitions/{id}": {
      "delete": {
        "description": "Delete UniQueryDefinition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UniQueryDefinition"
            }
          }
        },
        "tags": [
          "UniQueryDefinition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get UniQueryDefinition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UniQueryDefinition"
            }
          }
        },
        "tags": [
          "UniQueryDefinition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update UniQueryDefinition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UniQueryDefinition"
            }
          }
        },
        "tags": [
          "UniQueryDefinition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "UniQueryDefinition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UniQueryDefinition"
            }
          }
        ]
      }
    },
    "/uniquerydefinitions": {
      "get": {
        "description": "Query UniQueryDefinition",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/UniQueryDefinition"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "UniQueryDefinition"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create UniQueryDefinition",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/UniQueryDefinition"
            }
          }
        },
        "tags": [
          "UniQueryDefinition"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "UniQueryDefinition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UniQueryDefinition"
            }
          }
        ]
      }
    },
    "/uniqueryfields/{id}": {
      "delete": {
        "description": "Delete UniQueryField",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UniQueryField"
            }
          }
        },
        "tags": [
          "UniQueryField"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get UniQueryField",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UniQueryField"
            }
          }
        },
        "tags": [
          "UniQueryField"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update UniQueryField",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UniQueryField"
            }
          }
        },
        "tags": [
          "UniQueryField"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "UniQueryField",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UniQueryField"
            }
          }
        ]
      }
    },
    "/uniqueryfields": {
      "get": {
        "description": "Query UniQueryField",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/UniQueryField"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "UniQueryField"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create UniQueryField",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/UniQueryField"
            }
          }
        },
        "tags": [
          "UniQueryField"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "UniQueryField",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UniQueryField"
            }
          }
        ]
      }
    },
    "/uniqueryfilters/{id}": {
      "delete": {
        "description": "Delete UniQueryFilter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UniQueryFilter"
            }
          }
        },
        "tags": [
          "UniQueryFilter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get UniQueryFilter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UniQueryFilter"
            }
          }
        },
        "tags": [
          "UniQueryFilter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update UniQueryFilter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UniQueryFilter"
            }
          }
        },
        "tags": [
          "UniQueryFilter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "UniQueryFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UniQueryFilter"
            }
          }
        ]
      }
    },
    "/uniqueryfilters": {
      "get": {
        "description": "Query UniQueryFilter",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/UniQueryFilter"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "UniQueryFilter"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create UniQueryFilter",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/UniQueryFilter"
            }
          }
        },
        "tags": [
          "UniQueryFilter"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "UniQueryFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UniQueryFilter"
            }
          }
        ]
      }
    },
    "/teams/{id}?action=work-report": {
      "get": {
        "description": "work-report Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TeamReport"
            }
          }
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/teams/{id}?action=my-teamposition": {
      "get": {
        "description": "my-teamposition Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TeamPositionDto"
            }
          }
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/teams?action=my-teams": {
      "get": {
        "description": "my-teams Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Team"
        ],
        "parameters": []
      }
    },
    "/teams?action=teampositions": {
      "get": {
        "description": "teampositions Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Team"
        ],
        "parameters": []
      }
    },
    "/teams/{id}": {
      "delete": {
        "description": "Delete Team",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Team",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Team",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Team",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        ]
      }
    },
    "/teams": {
      "get": {
        "description": "Query Team",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Team"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Team"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Team",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        },
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Team",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        ]
      }
    },
    "/teampositions/{id}": {
      "delete": {
        "description": "Delete TeamPosition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TeamPosition"
            }
          }
        },
        "tags": [
          "TeamPosition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get TeamPosition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TeamPosition"
            }
          }
        },
        "tags": [
          "TeamPosition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update TeamPosition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TeamPosition"
            }
          }
        },
        "tags": [
          "TeamPosition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "TeamPosition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamPosition"
            }
          }
        ]
      }
    },
    "/teampositions": {
      "get": {
        "description": "Query TeamPosition",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/TeamPosition"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "TeamPosition"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create TeamPosition",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/TeamPosition"
            }
          }
        },
        "tags": [
          "TeamPosition"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "TeamPosition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamPosition"
            }
          }
        ]
      }
    },
    "/transitions/{id}": {
      "get": {
        "description": "Get Transition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Transition"
            }
          }
        },
        "tags": [
          "Transition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/transitions": {
      "get": {
        "description": "Query Transition",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Transition"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Transition"
        ],
        "parameters": []
      }
    },
    "/company-report/{id}": {
      "delete": {
        "description": "Delete CompanyReport",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyReport"
            }
          }
        },
        "tags": [
          "CompanyReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CompanyReport",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyReport"
            }
          }
        },
        "tags": [
          "CompanyReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CompanyReport",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyReport"
            }
          }
        },
        "tags": [
          "CompanyReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CompanyReport",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyReport"
            }
          }
        ]
      }
    },
    "/company-report": {
      "get": {
        "description": "Query CompanyReport",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CompanyReport"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CompanyReport"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CompanyReport",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CompanyReport"
            }
          }
        },
        "tags": [
          "CompanyReport"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CompanyReport",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyReport"
            }
          }
        ]
      }
    },
    "/report-definitions?action=get-all-reports": {
      "get": {
        "description": "get-all-reports Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "ReportDefinition"
        ],
        "parameters": []
      }
    },
    "/report-definitions?action=get-custom-reports": {
      "get": {
        "description": "get-custom-reports Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "ReportDefinition"
        ],
        "parameters": []
      }
    },
    "/report-definitions?action=load-reports": {
      "get": {
        "description": "load-reports Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "ReportDefinition"
        ],
        "parameters": []
      }
    },
    "/report-definitions/{id}?action=clear-report-cache": {
      "delete": {
        "description": "clear-report-cache Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "ReportDefinition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/report-definitions/{id}": {
      "delete": {
        "description": "Delete ReportDefinition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReportDefinition"
            }
          }
        },
        "tags": [
          "ReportDefinition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ReportDefinition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReportDefinition"
            }
          }
        },
        "tags": [
          "ReportDefinition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ReportDefinition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReportDefinition"
            }
          }
        },
        "tags": [
          "ReportDefinition"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ReportDefinition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportDefinition"
            }
          }
        ]
      }
    },
    "/report-definitions": {
      "get": {
        "description": "Query ReportDefinition",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportDefinition"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ReportDefinition"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ReportDefinition",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ReportDefinition"
            }
          }
        },
        "tags": [
          "ReportDefinition"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ReportDefinition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportDefinition"
            }
          }
        ]
      }
    },
    "/report-definition-data-sources/{id}": {
      "delete": {
        "description": "Delete ReportDefinitionDataSource",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReportDefinitionDataSource"
            }
          }
        },
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ReportDefinitionDataSource",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReportDefinitionDataSource"
            }
          }
        },
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ReportDefinitionDataSource",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReportDefinitionDataSource"
            }
          }
        },
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ReportDefinitionDataSource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportDefinitionDataSource"
            }
          }
        ]
      }
    },
    "/report-definition-data-sources": {
      "get": {
        "description": "Query ReportDefinitionDataSource",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportDefinitionDataSource"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ReportDefinitionDataSource",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ReportDefinitionDataSource"
            }
          }
        },
        "tags": [
          "ReportDefinitionDataSource"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ReportDefinitionDataSource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportDefinitionDataSource"
            }
          }
        ]
      }
    },
    "/report-definition-parameters/{id}": {
      "delete": {
        "description": "Delete ReportDefinitionParameter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReportDefinitionParameter"
            }
          }
        },
        "tags": [
          "ReportDefinitionParameter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ReportDefinitionParameter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReportDefinitionParameter"
            }
          }
        },
        "tags": [
          "ReportDefinitionParameter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ReportDefinitionParameter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReportDefinitionParameter"
            }
          }
        },
        "tags": [
          "ReportDefinitionParameter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ReportDefinitionParameter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportDefinitionParameter"
            }
          }
        ]
      }
    },
    "/report-definition-parameters": {
      "get": {
        "description": "Query ReportDefinitionParameter",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportDefinitionParameter"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ReportDefinitionParameter"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ReportDefinitionParameter",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ReportDefinitionParameter"
            }
          }
        },
        "tags": [
          "ReportDefinitionParameter"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ReportDefinitionParameter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportDefinitionParameter"
            }
          }
        ]
      }
    },
    "/projects?action=all-with-isUsed-prop": {
      "get": {
        "description": "all-with-isUsed-prop Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": []
      }
    },
    "/projects/{id}?action=is-used": {
      "get": {
        "description": "is-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/projects/{id}?action=StartProject": {
      "post": {
        "description": "StartProject Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "projectID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/projects/{id}?action=InitiateProject": {
      "post": {
        "description": "InitiateProject Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "projectID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/projects/{id}?action=CompleteProject": {
      "post": {
        "description": "CompleteProject Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "projectID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/projects/{id}?action=DiscardProject": {
      "post": {
        "description": "DiscardProject Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "projectID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/projects/{id}": {
      "delete": {
        "description": "Delete Project",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Project",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Project",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ]
      }
    },
    "/projects": {
      "get": {
        "description": "Query Project",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Project"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Project",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        },
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Project",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ]
      }
    },
    "/projects-resources/{id}": {
      "delete": {
        "description": "Delete ProjectResource",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectResource"
            }
          }
        },
        "tags": [
          "ProjectResource"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ProjectResource",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectResource"
            }
          }
        },
        "tags": [
          "ProjectResource"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ProjectResource",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectResource"
            }
          }
        },
        "tags": [
          "ProjectResource"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ProjectResource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectResource"
            }
          }
        ]
      }
    },
    "/projects-resources": {
      "get": {
        "description": "Query ProjectResource",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ProjectResource"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ProjectResource"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ProjectResource",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ProjectResource"
            }
          }
        },
        "tags": [
          "ProjectResource"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ProjectResource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectResource"
            }
          }
        ]
      }
    },
    "/projects-schedules-resources/{id}": {
      "delete": {
        "description": "Delete ProjectResourceSchedule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectResourceSchedule"
            }
          }
        },
        "tags": [
          "ProjectResourceSchedule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ProjectResourceSchedule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectResourceSchedule"
            }
          }
        },
        "tags": [
          "ProjectResourceSchedule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ProjectResourceSchedule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectResourceSchedule"
            }
          }
        },
        "tags": [
          "ProjectResourceSchedule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ProjectResourceSchedule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectResourceSchedule"
            }
          }
        ]
      }
    },
    "/projects-schedules-resources": {
      "get": {
        "description": "Query ProjectResourceSchedule",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ProjectResourceSchedule"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ProjectResourceSchedule"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ProjectResourceSchedule",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ProjectResourceSchedule"
            }
          }
        },
        "tags": [
          "ProjectResourceSchedule"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ProjectResourceSchedule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectResourceSchedule"
            }
          }
        ]
      }
    },
    "/projects-tasks/{id}?action=ActivateProjectTask": {
      "post": {
        "description": "ActivateProjectTask Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "ProjectTask"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "projectTaskID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/projects-tasks/{id}?action=CompleteProjectTask": {
      "post": {
        "description": "CompleteProjectTask Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "ProjectTask"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "projectTaskID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/projects-tasks/{id}": {
      "delete": {
        "description": "Delete ProjectTask",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          }
        },
        "tags": [
          "ProjectTask"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ProjectTask",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          }
        },
        "tags": [
          "ProjectTask"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ProjectTask",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          }
        },
        "tags": [
          "ProjectTask"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ProjectTask",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          }
        ]
      }
    },
    "/projects-tasks": {
      "get": {
        "description": "Query ProjectTask",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ProjectTask"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ProjectTask"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ProjectTask",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          }
        },
        "tags": [
          "ProjectTask"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ProjectTask",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTask"
            }
          }
        ]
      }
    },
    "/projects-tasks-schedules/{id}": {
      "delete": {
        "description": "Delete ProjectTaskSchedule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectTaskSchedule"
            }
          }
        },
        "tags": [
          "ProjectTaskSchedule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ProjectTaskSchedule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectTaskSchedule"
            }
          }
        },
        "tags": [
          "ProjectTaskSchedule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ProjectTaskSchedule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ProjectTaskSchedule"
            }
          }
        },
        "tags": [
          "ProjectTaskSchedule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ProjectTaskSchedule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTaskSchedule"
            }
          }
        ]
      }
    },
    "/projects-tasks-schedules": {
      "get": {
        "description": "Query ProjectTaskSchedule",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ProjectTaskSchedule"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ProjectTaskSchedule"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ProjectTaskSchedule",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ProjectTaskSchedule"
            }
          }
        },
        "tags": [
          "ProjectTaskSchedule"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ProjectTaskSchedule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTaskSchedule"
            }
          }
        ]
      }
    },
    "/ehf?action=activate": {
      "post": {
        "description": "activate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customer",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EHFCustomer"
            }
          },
          {
            "in": "path",
            "name": "service",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "direction",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/ehf?action=deactivate": {
      "post": {
        "description": "deactivate Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "service",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/ehf?action=is-ehf-receiver": {
      "get": {
        "description": "is-ehf-receiver Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "peppoladdress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entitytype",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/ehf?action=servicemetadata": {
      "get": {
        "description": "servicemetadata Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServiceMetadataDto"
            }
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "peppoladdress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "entitytype",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/ehf?action=import": {
      "get": {
        "description": "import Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/ehf?action=parse": {
      "get": {
        "description": "parse Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/ehf/{id}": {
      "delete": {
        "description": "Delete EHFLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EHFLog"
            }
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get EHFLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EHFLog"
            }
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update EHFLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EHFLog"
            }
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "EHFLog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHFLog"
            }
          }
        ]
      }
    },
    "/ehf": {
      "get": {
        "description": "Query EHFLog",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/EHFLog"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create EHFLog",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/EHFLog"
            }
          }
        },
        "tags": [
          "EHFLog"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "EHFLog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EHFLog"
            }
          }
        ]
      }
    },
    "/departments/{id}?action=is-used": {
      "get": {
        "description": "is-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Department"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/departments/{id}": {
      "delete": {
        "description": "Delete Department",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        },
        "tags": [
          "Department"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Department",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        },
        "tags": [
          "Department"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Department",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        },
        "tags": [
          "Department"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Department",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        ]
      }
    },
    "/departments": {
      "get": {
        "description": "Query Department",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Department"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Department"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Department",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        },
        "tags": [
          "Department"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Department",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        ]
      }
    },
    "/Dimension10/{id}?action=is-used": {
      "get": {
        "description": "is-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Dimension10"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/Dimension10/{id}": {
      "delete": {
        "description": "Delete Dimension10",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension10"
            }
          }
        },
        "tags": [
          "Dimension10"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Dimension10",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension10"
            }
          }
        },
        "tags": [
          "Dimension10"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Dimension10",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension10"
            }
          }
        },
        "tags": [
          "Dimension10"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Dimension10",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension10"
            }
          }
        ]
      }
    },
    "/Dimension10": {
      "get": {
        "description": "Query Dimension10",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Dimension10"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Dimension10"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Dimension10",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Dimension10"
            }
          }
        },
        "tags": [
          "Dimension10"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Dimension10",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension10"
            }
          }
        ]
      }
    },
    "/Dimension5/{id}?action=is-used": {
      "get": {
        "description": "is-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Dimension5"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/Dimension5/{id}": {
      "delete": {
        "description": "Delete Dimension5",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension5"
            }
          }
        },
        "tags": [
          "Dimension5"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Dimension5",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension5"
            }
          }
        },
        "tags": [
          "Dimension5"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Dimension5",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension5"
            }
          }
        },
        "tags": [
          "Dimension5"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Dimension5",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension5"
            }
          }
        ]
      }
    },
    "/Dimension5": {
      "get": {
        "description": "Query Dimension5",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Dimension5"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Dimension5"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Dimension5",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Dimension5"
            }
          }
        },
        "tags": [
          "Dimension5"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Dimension5",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension5"
            }
          }
        ]
      }
    },
    "/Dimension6/{id}?action=is-used": {
      "get": {
        "description": "is-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Dimension6"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/Dimension6/{id}": {
      "delete": {
        "description": "Delete Dimension6",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension6"
            }
          }
        },
        "tags": [
          "Dimension6"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Dimension6",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension6"
            }
          }
        },
        "tags": [
          "Dimension6"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Dimension6",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension6"
            }
          }
        },
        "tags": [
          "Dimension6"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Dimension6",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension6"
            }
          }
        ]
      }
    },
    "/Dimension6": {
      "get": {
        "description": "Query Dimension6",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Dimension6"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Dimension6"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Dimension6",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Dimension6"
            }
          }
        },
        "tags": [
          "Dimension6"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Dimension6",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension6"
            }
          }
        ]
      }
    },
    "/Dimension7/{id}?action=is-used": {
      "get": {
        "description": "is-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Dimension7"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/Dimension7/{id}": {
      "delete": {
        "description": "Delete Dimension7",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension7"
            }
          }
        },
        "tags": [
          "Dimension7"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Dimension7",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension7"
            }
          }
        },
        "tags": [
          "Dimension7"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Dimension7",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension7"
            }
          }
        },
        "tags": [
          "Dimension7"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Dimension7",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension7"
            }
          }
        ]
      }
    },
    "/Dimension7": {
      "get": {
        "description": "Query Dimension7",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Dimension7"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Dimension7"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Dimension7",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Dimension7"
            }
          }
        },
        "tags": [
          "Dimension7"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Dimension7",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension7"
            }
          }
        ]
      }
    },
    "/Dimension8/{id}?action=is-used": {
      "get": {
        "description": "is-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Dimension8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/Dimension8/{id}": {
      "delete": {
        "description": "Delete Dimension8",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension8"
            }
          }
        },
        "tags": [
          "Dimension8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Dimension8",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension8"
            }
          }
        },
        "tags": [
          "Dimension8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Dimension8",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension8"
            }
          }
        },
        "tags": [
          "Dimension8"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Dimension8",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension8"
            }
          }
        ]
      }
    },
    "/Dimension8": {
      "get": {
        "description": "Query Dimension8",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Dimension8"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Dimension8"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Dimension8",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Dimension8"
            }
          }
        },
        "tags": [
          "Dimension8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Dimension8",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension8"
            }
          }
        ]
      }
    },
    "/Dimension9/{id}?action=is-used": {
      "get": {
        "description": "is-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Dimension9"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/Dimension9/{id}": {
      "delete": {
        "description": "Delete Dimension9",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension9"
            }
          }
        },
        "tags": [
          "Dimension9"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Dimension9",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension9"
            }
          }
        },
        "tags": [
          "Dimension9"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Dimension9",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimension9"
            }
          }
        },
        "tags": [
          "Dimension9"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Dimension9",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension9"
            }
          }
        ]
      }
    },
    "/Dimension9": {
      "get": {
        "description": "Query Dimension9",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Dimension9"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Dimension9"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Dimension9",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Dimension9"
            }
          }
        },
        "tags": [
          "Dimension9"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Dimension9",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dimension9"
            }
          }
        ]
      }
    },
    "/dimensions/{id}": {
      "get": {
        "description": "Get Dimensions",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Dimensions"
            }
          }
        },
        "tags": [
          "Dimensions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/dimensions": {
      "get": {
        "description": "Query Dimensions",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Dimensions"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Dimensions"
        ],
        "parameters": []
      }
    },
    "/regions/{id}": {
      "delete": {
        "description": "Delete Region",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        },
        "tags": [
          "Region"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Region",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        },
        "tags": [
          "Region"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Region",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        },
        "tags": [
          "Region"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Region",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        ]
      }
    },
    "/regions": {
      "get": {
        "description": "Query Region",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Region"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Region"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Region",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        },
        "tags": [
          "Region"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Region",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        ]
      }
    },
    "/responsibles/{id}": {
      "delete": {
        "description": "Delete Responsible",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Responsible"
            }
          }
        },
        "tags": [
          "Responsible"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Responsible",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Responsible"
            }
          }
        },
        "tags": [
          "Responsible"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Responsible",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Responsible"
            }
          }
        },
        "tags": [
          "Responsible"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Responsible",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Responsible"
            }
          }
        ]
      }
    },
    "/responsibles": {
      "get": {
        "description": "Query Responsible",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Responsible"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Responsible"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Responsible",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Responsible"
            }
          }
        },
        "tags": [
          "Responsible"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Responsible",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Responsible"
            }
          }
        ]
      }
    },
    "/contractaddresses/{id}": {
      "delete": {
        "description": "Delete ContractAddress",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractAddress"
            }
          }
        },
        "tags": [
          "ContractAddress"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ContractAddress",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractAddress"
            }
          }
        },
        "tags": [
          "ContractAddress"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ContractAddress",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractAddress"
            }
          }
        },
        "tags": [
          "ContractAddress"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ContractAddress",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractAddress"
            }
          }
        ]
      }
    },
    "/contractaddresses": {
      "get": {
        "description": "Query ContractAddress",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ContractAddress"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ContractAddress"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ContractAddress",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ContractAddress"
            }
          }
        },
        "tags": [
          "ContractAddress"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ContractAddress",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractAddress"
            }
          }
        ]
      }
    },
    "/contractassets/{id}": {
      "delete": {
        "description": "Delete ContractAsset",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractAsset"
            }
          }
        },
        "tags": [
          "ContractAsset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ContractAsset",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractAsset"
            }
          }
        },
        "tags": [
          "ContractAsset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ContractAsset",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractAsset"
            }
          }
        },
        "tags": [
          "ContractAsset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ContractAsset",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractAsset"
            }
          }
        ]
      }
    },
    "/contractassets": {
      "get": {
        "description": "Query ContractAsset",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ContractAsset"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ContractAsset"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ContractAsset",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ContractAsset"
            }
          }
        },
        "tags": [
          "ContractAsset"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ContractAsset",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractAsset"
            }
          }
        ]
      }
    },
    "/contracts/{id}?action=deploy": {
      "post": {
        "description": "deploy Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/contracts/{id}?action=kill": {
      "post": {
        "description": "kill Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/contracts/{id}?action=reset": {
      "post": {
        "description": "reset Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/contracts/{id}?action=copy-based-on": {
      "put": {
        "description": "copy-based-on Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/contracts/{id}?action=compile": {
      "put": {
        "description": "compile Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/contracts/{id}": {
      "delete": {
        "description": "Delete Contract",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Contract",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Contract",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Contract",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        ]
      }
    },
    "/contracts": {
      "get": {
        "description": "Query Contract",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Contract"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Contract",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        },
        "tags": [
          "Contract"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Contract",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contract"
            }
          }
        ]
      }
    },
    "/contractdebuglogs/{id}": {
      "delete": {
        "description": "Delete ContractDebugLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractDebugLog"
            }
          }
        },
        "tags": [
          "ContractDebugLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ContractDebugLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractDebugLog"
            }
          }
        },
        "tags": [
          "ContractDebugLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ContractDebugLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractDebugLog"
            }
          }
        },
        "tags": [
          "ContractDebugLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ContractDebugLog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractDebugLog"
            }
          }
        ]
      }
    },
    "/contractdebuglogs": {
      "get": {
        "description": "Query ContractDebugLog",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ContractDebugLog"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ContractDebugLog"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ContractDebugLog",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ContractDebugLog"
            }
          }
        },
        "tags": [
          "ContractDebugLog"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ContractDebugLog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractDebugLog"
            }
          }
        ]
      }
    },
    "/contractparameters/{id}": {
      "delete": {
        "description": "Delete ContractParameter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractParameter"
            }
          }
        },
        "tags": [
          "ContractParameter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ContractParameter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractParameter"
            }
          }
        },
        "tags": [
          "ContractParameter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ContractParameter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractParameter"
            }
          }
        },
        "tags": [
          "ContractParameter"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ContractParameter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractParameter"
            }
          }
        ]
      }
    },
    "/contractparameters": {
      "get": {
        "description": "Query ContractParameter",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ContractParameter"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ContractParameter"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ContractParameter",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ContractParameter"
            }
          }
        },
        "tags": [
          "ContractParameter"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ContractParameter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractParameter"
            }
          }
        ]
      }
    },
    "/contractrunlogs/{id}": {
      "delete": {
        "description": "Delete ContractRunLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractRunLog"
            }
          }
        },
        "tags": [
          "ContractRunLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ContractRunLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractRunLog"
            }
          }
        },
        "tags": [
          "ContractRunLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ContractRunLog",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractRunLog"
            }
          }
        },
        "tags": [
          "ContractRunLog"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ContractRunLog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractRunLog"
            }
          }
        ]
      }
    },
    "/contractrunlogs": {
      "get": {
        "description": "Query ContractRunLog",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ContractRunLog"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ContractRunLog"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ContractRunLog",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ContractRunLog"
            }
          }
        },
        "tags": [
          "ContractRunLog"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ContractRunLog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractRunLog"
            }
          }
        ]
      }
    },
    "/contracttransactions/{id}": {
      "delete": {
        "description": "Delete ContractTransaction",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractTransaction"
            }
          }
        },
        "tags": [
          "ContractTransaction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ContractTransaction",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractTransaction"
            }
          }
        },
        "tags": [
          "ContractTransaction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ContractTransaction",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractTransaction"
            }
          }
        },
        "tags": [
          "ContractTransaction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ContractTransaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractTransaction"
            }
          }
        ]
      }
    },
    "/contracttransactions": {
      "get": {
        "description": "Query ContractTransaction",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ContractTransaction"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ContractTransaction"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ContractTransaction",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ContractTransaction"
            }
          }
        },
        "tags": [
          "ContractTransaction"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ContractTransaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractTransaction"
            }
          }
        ]
      }
    },
    "/contracttriggers/{id}": {
      "delete": {
        "description": "Delete ContractTrigger",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractTrigger"
            }
          }
        },
        "tags": [
          "ContractTrigger"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ContractTrigger",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractTrigger"
            }
          }
        },
        "tags": [
          "ContractTrigger"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ContractTrigger",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ContractTrigger"
            }
          }
        },
        "tags": [
          "ContractTrigger"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ContractTrigger",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractTrigger"
            }
          }
        ]
      }
    },
    "/contracttriggers": {
      "get": {
        "description": "Query ContractTrigger",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ContractTrigger"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ContractTrigger"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ContractTrigger",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ContractTrigger"
            }
          }
        },
        "tags": [
          "ContractTrigger"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ContractTrigger",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractTrigger"
            }
          }
        ]
      }
    },
    "/comments/{id}": {
      "delete": {
        "description": "Delete Comment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Comment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Comment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Comment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ]
      }
    },
    "/comments": {
      "get": {
        "description": "Query Comment",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Comment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "parameters": []
      }
    },
    "/comments/{entitytype}/{entityid}/{id}": {
      "delete": {
        "description": "Delete Comment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/comments/{entitytype}/{entityid}": {
      "get": {
        "description": "Query Comment",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Comment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Comment",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "tags": [
          "Comment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Comment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ]
      }
    },
    "/notifications?action=count": {
      "get": {
        "description": "count Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "parameters": []
      }
    },
    "/notifications/{id}?action=mark-as-read": {
      "put": {
        "description": "mark-as-read Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/notifications/{id}?action=mark-as-marked": {
      "put": {
        "description": "mark-as-marked Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/notifications/{id}?action=mark-as-unread": {
      "put": {
        "description": "mark-as-unread Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/notifications/{id}": {
      "delete": {
        "description": "Delete Notification",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Notification",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/notifications": {
      "get": {
        "description": "Query Notification",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Notification"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Notification",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        },
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Notification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ]
      }
    },
    "/altinnaccountlinks?action=get-by-accountnumber": {
      "get": {
        "description": "get-by-accountnumber Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnAccountLink"
            }
          }
        },
        "tags": [
          "AltinnAccountLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/altinnaccountlinks?action=type-altinnaccounts": {
      "get": {
        "description": "type-altinnaccounts Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "AltinnAccountLink"
        ],
        "parameters": []
      }
    },
    "/altinnaccountlinks/{id}": {
      "delete": {
        "description": "Delete AltinnAccountLink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnAccountLink"
            }
          }
        },
        "tags": [
          "AltinnAccountLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AltinnAccountLink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnAccountLink"
            }
          }
        },
        "tags": [
          "AltinnAccountLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AltinnAccountLink",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnAccountLink"
            }
          }
        },
        "tags": [
          "AltinnAccountLink"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AltinnAccountLink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AltinnAccountLink"
            }
          }
        ]
      }
    },
    "/altinnaccountlinks": {
      "get": {
        "description": "Query AltinnAccountLink",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AltinnAccountLink"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AltinnAccountLink"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AltinnAccountLink",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AltinnAccountLink"
            }
          }
        },
        "tags": [
          "AltinnAccountLink"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AltinnAccountLink",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AltinnAccountLink"
            }
          }
        ]
      }
    },
    "/taxreport/{id}": {
      "delete": {
        "description": "Delete TaxReport",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaxReport"
            }
          }
        },
        "tags": [
          "TaxReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get TaxReport",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaxReport"
            }
          }
        },
        "tags": [
          "TaxReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update TaxReport",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaxReport"
            }
          }
        },
        "tags": [
          "TaxReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "TaxReport",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxReport"
            }
          }
        ]
      }
    },
    "/taxreport": {
      "get": {
        "description": "Query TaxReport",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/TaxReport"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "TaxReport"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create TaxReport",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/TaxReport"
            }
          }
        },
        "tags": [
          "TaxReport"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "TaxReport",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaxReport"
            }
          }
        ]
      }
    },
    "/accounts?action=valid": {
      "get": {
        "description": "valid Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": []
      }
    },
    "/accounts?action=valid-with-hidden": {
      "get": {
        "description": "valid-with-hidden Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": []
      }
    },
    "/accounts?action=synchronize-standard-account-setup": {
      "put": {
        "description": "synchronize-standard-account-setup Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": []
      }
    },
    "/accounts?action=profit-and-loss-periodical": {
      "get": {
        "description": "profit-and-loss-periodical Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "FinancialYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts?action=profit-and-loss-grouped": {
      "get": {
        "description": "profit-and-loss-grouped Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "FinancialYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts?action=balance-grouped": {
      "get": {
        "description": "balance-grouped Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "FinancialYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts?action=balance": {
      "get": {
        "description": "balance Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "FinancialYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts?action=payables-by-age": {
      "get": {
        "description": "payables-by-age Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "accountFrom",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "accountTo",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "useDueDate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "accountType",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts?action=payables-by-age-detailed": {
      "get": {
        "description": "payables-by-age-detailed Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "accountFrom",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "accountTo",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "useDueDate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "accountType",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts?action=get-account-usage": {
      "get": {
        "description": "get-account-usage Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts?action=get-account-usage-detailed": {
      "get": {
        "description": "get-account-usage-detailed Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountUsageReference"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "maxHitPerEntity",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts/{id}?action=is-account-used": {
      "get": {
        "description": "is-account-used Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts?action=bulk-save": {
      "put": {
        "description": "bulk-save Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "accounts",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/accounts?action=saftmapping-accounts": {
      "get": {
        "description": "saftmapping-accounts Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SaftMappingAccount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": []
      }
    },
    "/accounts?action=set-saftmappings": {
      "put": {
        "description": "set-saftmappings Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "accountNumbers",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accounts/{id}": {
      "delete": {
        "description": "Delete Account",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Account",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Account",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "description": "Query Account",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Account",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ]
      }
    },
    "/accountgroups/{id}": {
      "delete": {
        "description": "Delete AccountGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          }
        },
        "tags": [
          "AccountGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AccountGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          }
        },
        "tags": [
          "AccountGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AccountGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          }
        },
        "tags": [
          "AccountGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AccountGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          }
        ]
      }
    },
    "/accountgroups": {
      "get": {
        "description": "Query AccountGroup",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountGroup"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AccountGroup"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AccountGroup",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          }
        },
        "tags": [
          "AccountGroup"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AccountGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountGroup"
            }
          }
        ]
      }
    },
    "/accountgroupsets/{id}": {
      "delete": {
        "description": "Delete AccountGroupSet",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountGroupSet"
            }
          }
        },
        "tags": [
          "AccountGroupSet"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AccountGroupSet",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountGroupSet"
            }
          }
        },
        "tags": [
          "AccountGroupSet"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AccountGroupSet",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountGroupSet"
            }
          }
        },
        "tags": [
          "AccountGroupSet"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AccountGroupSet",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountGroupSet"
            }
          }
        ]
      }
    },
    "/accountgroupsets": {
      "get": {
        "description": "Query AccountGroupSet",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountGroupSet"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AccountGroupSet"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AccountGroupSet",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AccountGroupSet"
            }
          }
        },
        "tags": [
          "AccountGroupSet"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AccountGroupSet",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountGroupSet"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension?action=check-recurringinvoices": {
      "get": {
        "description": "check-recurringinvoices Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension?action=add-accounts-mandatory-dimensions": {
      "put": {
        "description": "add-accounts-mandatory-dimensions Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "FromAccountNo",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "ToAccountNo",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "DimensionNo",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "MandatoryType",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension?action=get-mandatory-dimensions-report": {
      "get": {
        "description": "get-mandatory-dimensions-report Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MandatoryDimensionAccountReport"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "dimensionsID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension?action=get-mandatory-dimensions-report-by-dimensions": {
      "put": {
        "description": "get-mandatory-dimensions-report-by-dimensions Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MandatoryDimensionAccountReport"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "dimensions",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Dimensions"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension?action=get-mandatory-dimensions-reports": {
      "put": {
        "description": "get-mandatory-dimensions-reports Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/MandatoryDimensionAccountReport"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "items",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountDimension"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension?action=get-customer-mandatory-dimensions-report-dimensionsID": {
      "get": {
        "description": "get-customer-mandatory-dimensions-report-dimensionsID Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MandatoryDimensionAccountReport"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "dimensionsID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension?action=get-customer-mandatory-dimensions-report-dimensions": {
      "put": {
        "description": "get-customer-mandatory-dimensions-report-dimensions Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MandatoryDimensionAccountReport"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "dimensions",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Dimensions"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension?action=get-supplier-mandatory-dimensions-report-dimensionsID": {
      "get": {
        "description": "get-supplier-mandatory-dimensions-report-dimensionsID Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MandatoryDimensionAccountReport"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplierID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "dimensionsID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension?action=get-supplier-mandatory-dimensions-report-dimensions": {
      "put": {
        "description": "get-supplier-mandatory-dimensions-report-dimensions Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MandatoryDimensionAccountReport"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplierID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "dimensions",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Dimensions"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension/{id}": {
      "delete": {
        "description": "Delete AccountMandatoryDimension",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountMandatoryDimension"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AccountMandatoryDimension",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountMandatoryDimension"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AccountMandatoryDimension",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AccountMandatoryDimension"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AccountMandatoryDimension",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountMandatoryDimension"
            }
          }
        ]
      }
    },
    "/accountmandatorydimension": {
      "get": {
        "description": "Query AccountMandatoryDimension",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AccountMandatoryDimension"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AccountMandatoryDimension",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AccountMandatoryDimension"
            }
          }
        },
        "tags": [
          "AccountMandatoryDimension"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AccountMandatoryDimension",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountMandatoryDimension"
            }
          }
        ]
      }
    },
    "/accruals/{id}": {
      "delete": {
        "description": "Delete Accrual",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Accrual"
            }
          }
        },
        "tags": [
          "Accrual"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Accrual",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Accrual"
            }
          }
        },
        "tags": [
          "Accrual"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Accrual",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Accrual"
            }
          }
        },
        "tags": [
          "Accrual"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Accrual",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Accrual"
            }
          }
        ]
      }
    },
    "/accruals": {
      "get": {
        "description": "Query Accrual",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Accrual"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Accrual"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Accrual",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Accrual"
            }
          }
        },
        "tags": [
          "Accrual"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Accrual",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Accrual"
            }
          }
        ]
      }
    },
    "/annualaccountnoteinfo/{id}?action=recreate": {
      "post": {
        "description": "recreate Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccountNoteInfo"
            }
          }
        },
        "tags": [
          "AnnualAccountNoteInfo"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualaccountnoteinfo/{id}": {
      "delete": {
        "description": "Delete AnnualAccountNoteInfo",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccountNoteInfo"
            }
          }
        },
        "tags": [
          "AnnualAccountNoteInfo"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AnnualAccountNoteInfo",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccountNoteInfo"
            }
          }
        },
        "tags": [
          "AnnualAccountNoteInfo"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AnnualAccountNoteInfo",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccountNoteInfo"
            }
          }
        },
        "tags": [
          "AnnualAccountNoteInfo"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AnnualAccountNoteInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnualAccountNoteInfo"
            }
          }
        ]
      }
    },
    "/annualaccountnoteinfo": {
      "get": {
        "description": "Query AnnualAccountNoteInfo",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AnnualAccountNoteInfo"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualAccountNoteInfo"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AnnualAccountNoteInfo",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AnnualAccountNoteInfo"
            }
          }
        },
        "tags": [
          "AnnualAccountNoteInfo"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AnnualAccountNoteInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnualAccountNoteInfo"
            }
          }
        ]
      }
    },
    "/assets?action=check-altinn-account-link-for-assetgroups": {
      "put": {
        "description": "check-altinn-account-link-for-assetgroups Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AssetResponseMessage"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "autoCorrectLinks",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/assets?action=activate": {
      "put": {
        "description": "activate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/assets?action=sell-asset": {
      "put": {
        "description": "sell-asset Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "assetID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "customerID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "vatTypeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "invoiceDate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "amount",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "createInvoice",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/assets?action=get-real-estate-assets": {
      "get": {
        "description": "get-real-estate-assets Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Asset"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "onlyRealEstatesPurchasedBefore1984",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/assets?action=update-real-estate-assets": {
      "put": {
        "description": "update-real-estate-assets Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Asset"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "realEstateAssets",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/Asset"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/assets?action=set-asset-aslost": {
      "put": {
        "description": "set-asset-aslost Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/assets?action=write-off-asset": {
      "put": {
        "description": "write-off-asset Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "amount",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "description",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/assets?action=any-depreciations": {
      "get": {
        "description": "any-depreciations Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/assets?action=depreciate-month": {
      "put": {
        "description": "depreciate-month Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/assets?action=depreciate-year": {
      "put": {
        "description": "depreciate-year Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/assets?action=depreciate-missing": {
      "put": {
        "description": "depreciate-missing Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": []
      }
    },
    "/assets?action=depreciate": {
      "put": {
        "description": "depreciate Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "amount",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/assets?action=get-use-asset": {
      "get": {
        "description": "get-use-asset Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": []
      }
    },
    "/assets?action=set-use-asset": {
      "put": {
        "description": "set-use-asset Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "use",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/assets?action=create": {
      "post": {
        "description": "create Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "invoiceID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "accountNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/assets?action=calculate-depreciation-amount": {
      "put": {
        "description": "calculate-depreciation-amount Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "asset",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ]
      }
    },
    "/assets?action=calculate-lifetime": {
      "put": {
        "description": "calculate-lifetime Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "asset",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ]
      }
    },
    "/assets?action=is-balance-ok": {
      "get": {
        "description": "is-balance-ok Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "amount",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/assets?action=get-assets-report": {
      "get": {
        "description": "get-assets-report Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AssetReportDTO"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "assetID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/assets?action=get-asset-groups": {
      "get": {
        "description": "get-asset-groups Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AssetGroup"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": []
      }
    },
    "/assets?action=get-assets-incoming-financial-value": {
      "get": {
        "description": "get-assets-incoming-financial-value Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/assets?action=get-assets-net-financial-value": {
      "get": {
        "description": "get-assets-net-financial-value Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/assets?action=get-assets-for-accountingbasedIB-update": {
      "get": {
        "description": "get-assets-for-accountingbasedIB-update Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AssetDto"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/assets?action=update_accountingbasedIB": {
      "put": {
        "description": "update_accountingbasedIB Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "assetDtos",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/AssetDto"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/assets/{id}": {
      "delete": {
        "description": "Delete Asset",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Asset",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Asset",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Asset",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ]
      }
    },
    "/assets": {
      "get": {
        "description": "Query Asset",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Asset"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Asset",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        },
        "tags": [
          "Asset"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Asset",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ]
      }
    },
    "/bankaccounts/{id}?action=lock": {
      "put": {
        "description": "lock Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/bankaccounts/{id}?action=unlock": {
      "put": {
        "description": "unlock Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/bankaccounts/{id}?action=bank-balance": {
      "get": {
        "description": "bank-balance Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/bankaccounts?action=get-all-bank-balances": {
      "get": {
        "description": "get-all-bank-balances Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankBalanceDto"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": []
      }
    },
    "/bankaccounts?action=get-connected-bankaccounts-to-account": {
      "get": {
        "description": "get-connected-bankaccounts-to-account Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankAccount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "skipBankAccountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/bankaccounts?action=get-bankservice-bankaccounts": {
      "get": {
        "description": "get-bankservice-bankaccounts Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": []
      }
    },
    "/bankaccounts?action=create-bankaccounts-from-bankservice-bankaccounts": {
      "post": {
        "description": "create-bankaccounts-from-bankservice-bankaccounts Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "accountPairs",
            "required": false,
            "schema": {
              "items": {}
            }
          }
        ]
      }
    },
    "/bankaccounts/{id}": {
      "delete": {
        "description": "Delete BankAccount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankAccount"
            }
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BankAccount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankAccount"
            }
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update BankAccount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankAccount"
            }
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BankAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankAccount"
            }
          }
        ]
      }
    },
    "/bankaccounts": {
      "get": {
        "description": "Query BankAccount",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankAccount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create BankAccount",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BankAccount"
            }
          }
        },
        "tags": [
          "BankAccount"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BankAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankAccount"
            }
          }
        ]
      }
    },
    "/banks?action=get-bank-from-accountnumber-lookup": {
      "get": {
        "description": "get-bank-from-accountnumber-lookup Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Bank"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bankAccountNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/banks?action=get-iban-from-accountnumber-lookup": {
      "get": {
        "description": "get-iban-from-accountnumber-lookup Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bankAccountNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/banks?action=get-iban-upsert-bank": {
      "get": {
        "description": "get-iban-upsert-bank Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankData"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bankAccountNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/banks?action=verify-iban": {
      "get": {
        "description": "verify-iban Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "iban",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/banks?action=verify-iban-upsert-bank": {
      "get": {
        "description": "verify-iban-upsert-bank Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankData"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "iban",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/banks/{id}": {
      "delete": {
        "description": "Delete Bank",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Bank"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Bank",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Bank"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Bank",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Bank"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Bank",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bank"
            }
          }
        ]
      }
    },
    "/banks": {
      "get": {
        "description": "Query Bank",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Bank"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Bank",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Bank"
            }
          }
        },
        "tags": [
          "Bank"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Bank",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bank"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=auth-code": {
      "post": {
        "description": "auth-code Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/bank-agreements/{id}?action=set-default": {
      "put": {
        "description": "set-default Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankIntegrationAgreement"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=get-agreement-templates": {
      "get": {
        "description": "get-agreement-templates Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=create-integration": {
      "post": {
        "description": "create-integration Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankIntegrationAgreement"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "integrationDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateBankIntegrationDTO"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=delete-bankagreements": {
      "put": {
        "description": "delete-bankagreements Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankAccount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bankAccountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "integrationSettings",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "emailAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=delete-all-bankagreements": {
      "put": {
        "description": "delete-all-bankagreements Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankAccount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "emailAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=create-initial-company-and-bank-accounts-agreement": {
      "post": {
        "description": "create-initial-company-and-bank-accounts-agreement Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankIntegrationAgreement"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "integrationDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateBankIntegrationDTO"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=get-direct-bank-agreement": {
      "get": {
        "description": "get-direct-bank-agreement Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "serviceProvider",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/bank-agreements/{id}?action=update-bank-properties": {
      "put": {
        "description": "update-bank-properties Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankIntegrationAgreement"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "bankProperties",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ZdataUpdateBankProperties"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=add-autobank-user": {
      "post": {
        "description": "add-autobank-user Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "autobankUserDto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AutobankUserDTO"
            }
          },
          {
            "in": "path",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/bank-agreements/{id}?action=update-status": {
      "put": {
        "description": "update-status Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankIntegrationAgreement"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=update-service": {
      "put": {
        "description": "update-service Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateServiceStatusDTO"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=update-serviceid": {
      "put": {
        "description": "update-serviceid Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateServiceIDDTO"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=validate-password": {
      "post": {
        "description": "validate-password Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "password",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=order-bank-integration-change": {
      "post": {
        "description": "order-bank-integration-change Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": []
      }
    },
    "/bank-agreements?action=order-preapprovedbankpayments": {
      "post": {
        "description": "order-preapprovedbankpayments Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bankID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "cancel",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/bank-agreements?action=get-default-service-provider": {
      "get": {
        "description": "get-default-service-provider Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": []
      }
    },
    "/bank-agreements/{id}": {
      "delete": {
        "description": "Delete BankIntegrationAgreement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankIntegrationAgreement"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BankIntegrationAgreement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankIntegrationAgreement"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update BankIntegrationAgreement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankIntegrationAgreement"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BankIntegrationAgreement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankIntegrationAgreement"
            }
          }
        ]
      }
    },
    "/bank-agreements": {
      "get": {
        "description": "Query BankIntegrationAgreement",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankIntegrationAgreement"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankIntegrationAgreement"
        ],
        "parameters": []
      }
    },
    "/bankrules/{id}": {
      "delete": {
        "description": "Delete BankRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankRule"
            }
          }
        },
        "tags": [
          "BankRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BankRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankRule"
            }
          }
        },
        "tags": [
          "BankRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update BankRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankRule"
            }
          }
        },
        "tags": [
          "BankRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BankRule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankRule"
            }
          }
        ]
      }
    },
    "/bankrules": {
      "get": {
        "description": "Query BankRule",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankRule"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankRule"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create BankRule",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BankRule"
            }
          }
        },
        "tags": [
          "BankRule"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BankRule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankRule"
            }
          }
        ]
      }
    },
    "/bankstatements/{id}?action=complete": {
      "post": {
        "description": "complete Transition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/bankstatements/{id}?action=reopen": {
      "post": {
        "description": "reopen Transition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/bankstatements?action=match-items": {
      "post": {
        "description": "match-items Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "items",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BankStatementMatch"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/bankstatements?action=suggest-match": {
      "post": {
        "description": "suggest-match Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankMatchSuggestion"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "matchRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MatchRequest"
            }
          }
        ]
      }
    },
    "/bankstatements?action=account-status": {
      "get": {
        "description": "account-status Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReconciliationStatus"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fromdate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "todate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/bankstatements?action=account-status-monthly": {
      "get": {
        "description": "account-status-monthly Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReconciliationStatus"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fromdate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "todate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/bankstatements?action=account-balance": {
      "get": {
        "description": "account-balance Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BalanceDto"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/bankstatements?action=import": {
      "post": {
        "description": "import Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "maxLines",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "fmt",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BankfileFormat"
            }
          }
        ]
      }
    },
    "/bankstatements?action=preview": {
      "post": {
        "description": "preview Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "maxLines",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "fmt",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BankfileFormat"
            }
          }
        ]
      }
    },
    "/bankstatements?action=templates": {
      "get": {
        "description": "templates Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankfileFormat"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": []
      }
    },
    "/bankstatements?action=import-batch": {
      "post": {
        "description": "import-batch Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "batch",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ZdataEntryTransactionsDto"
            }
          },
          {
            "in": "path",
            "name": "triggerAutomation",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/bankstatements/{id}": {
      "delete": {
        "description": "Delete BankStatement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BankStatement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update BankStatement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BankStatement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        ]
      }
    },
    "/bankstatements": {
      "get": {
        "description": "Query BankStatement",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankStatement"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create BankStatement",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        },
        "tags": [
          "BankStatement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BankStatement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankStatement"
            }
          }
        ]
      }
    },
    "/bankstatemententries?action=entries-for-account": {
      "get": {
        "description": "entries-for-account Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankStatementEntry"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatementEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fromdate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "todate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/bankstatemententries?action=open-entries-report": {
      "get": {
        "description": "open-entries-report Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BankStatementEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fromdate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "todate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/bankstatemententries?action=open-journalentries-report": {
      "get": {
        "description": "open-journalentries-report Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "BankStatementEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fromdate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "todate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "top",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/bankstatemententries/{id}": {
      "delete": {
        "description": "Delete BankStatementEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatementEntry"
            }
          }
        },
        "tags": [
          "BankStatementEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BankStatementEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatementEntry"
            }
          }
        },
        "tags": [
          "BankStatementEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update BankStatementEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatementEntry"
            }
          }
        },
        "tags": [
          "BankStatementEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BankStatementEntry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankStatementEntry"
            }
          }
        ]
      }
    },
    "/bankstatemententries": {
      "get": {
        "description": "Query BankStatementEntry",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankStatementEntry"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatementEntry"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create BankStatementEntry",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BankStatementEntry"
            }
          }
        },
        "tags": [
          "BankStatementEntry"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BankStatementEntry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankStatementEntry"
            }
          }
        ]
      }
    },
    "/bankstatementmatch?action=delete-group": {
      "post": {
        "description": "delete-group Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "BankStatementMatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/bankstatementmatch/{id}": {
      "delete": {
        "description": "Delete BankStatementMatch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatementMatch"
            }
          }
        },
        "tags": [
          "BankStatementMatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BankStatementMatch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatementMatch"
            }
          }
        },
        "tags": [
          "BankStatementMatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/bankstatementmatch": {
      "get": {
        "description": "Query BankStatementMatch",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankStatementMatch"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatementMatch"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create BankStatementMatch",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BankStatementMatch"
            }
          }
        },
        "tags": [
          "BankStatementMatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BankStatementMatch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankStatementMatch"
            }
          }
        ]
      }
    },
    "/bankstatementrules?action=apply-rule": {
      "post": {
        "description": "apply-rule Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalSuggestion"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatementRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "entries",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BankStatementEntry"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/bankstatementrules?action=apply-rules": {
      "post": {
        "description": "apply-rules Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalSuggestion"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatementRule"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "entries",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BankStatementEntry"
              },
              "type": "array"
            }
          },
          {
            "in": "path",
            "name": "active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/bankstatementrules/{id}": {
      "delete": {
        "description": "Delete BankStatementRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatementRule"
            }
          }
        },
        "tags": [
          "BankStatementRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BankStatementRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatementRule"
            }
          }
        },
        "tags": [
          "BankStatementRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update BankStatementRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BankStatementRule"
            }
          }
        },
        "tags": [
          "BankStatementRule"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BankStatementRule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankStatementRule"
            }
          }
        ]
      }
    },
    "/bankstatementrules": {
      "get": {
        "description": "Query BankStatementRule",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BankStatementRule"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BankStatementRule"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create BankStatementRule",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BankStatementRule"
            }
          }
        },
        "tags": [
          "BankStatementRule"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BankStatementRule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankStatementRule"
            }
          }
        ]
      }
    },
    "/budgets/{id}?action=activate": {
      "post": {
        "description": "activate Transition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/budgets/{id}?action=deactivate": {
      "post": {
        "description": "deactivate Transition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/budgets?action=details": {
      "get": {
        "description": "details Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportRow"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "FinancialYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/budgets?action=summary": {
      "get": {
        "description": "summary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportRow"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "FinancialYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/budgets/{id}?action=details": {
      "get": {
        "description": "details Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportRow"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/budgets/{id}?action=summary": {
      "get": {
        "description": "summary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportRow"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/budgets/{id}?action=excelbudget": {
      "post": {
        "description": "excelbudget Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BudgetImport"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fileid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "departmentid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "projectID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/budgets/{id}?action=getexcelbudget": {
      "get": {
        "description": "getexcelbudget Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IActionResult"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/budgets/{id}": {
      "delete": {
        "description": "Delete Budget",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Budget",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Budget",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Budget",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        ]
      }
    },
    "/budgets": {
      "get": {
        "description": "Query Budget",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Budget"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Budget",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        },
        "tags": [
          "Budget"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Budget",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        ]
      }
    },
    "/budgetentries/{id}": {
      "delete": {
        "description": "Delete BudgetEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BudgetEntry"
            }
          }
        },
        "tags": [
          "BudgetEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get BudgetEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BudgetEntry"
            }
          }
        },
        "tags": [
          "BudgetEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update BudgetEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BudgetEntry"
            }
          }
        },
        "tags": [
          "BudgetEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "BudgetEntry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetEntry"
            }
          }
        ]
      }
    },
    "/budgetentries": {
      "get": {
        "description": "Query BudgetEntry",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/BudgetEntry"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "BudgetEntry"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create BudgetEntry",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/BudgetEntry"
            }
          }
        },
        "tags": [
          "BudgetEntry"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BudgetEntry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetEntry"
            }
          }
        ]
      }
    },
    "/companyaccountingsettings?action=get-or-create": {
      "get": {
        "description": "get-or-create Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyAccountingSettings"
            }
          }
        },
        "tags": [
          "CompanyAccountingSettings"
        ],
        "parameters": []
      }
    },
    "/companyaccountingsettings/{id}": {
      "delete": {
        "description": "Delete CompanyAccountingSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyAccountingSettings"
            }
          }
        },
        "tags": [
          "CompanyAccountingSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CompanyAccountingSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyAccountingSettings"
            }
          }
        },
        "tags": [
          "CompanyAccountingSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CompanyAccountingSettings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyAccountingSettings"
            }
          }
        },
        "tags": [
          "CompanyAccountingSettings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CompanyAccountingSettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAccountingSettings"
            }
          }
        ]
      }
    },
    "/companyaccountingsettings": {
      "get": {
        "description": "Query CompanyAccountingSettings",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CompanyAccountingSettings"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CompanyAccountingSettings"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CompanyAccountingSettings",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CompanyAccountingSettings"
            }
          }
        },
        "tags": [
          "CompanyAccountingSettings"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CompanyAccountingSettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyAccountingSettings"
            }
          }
        ]
      }
    },
    "/companybankaccounts/{id}": {
      "delete": {
        "description": "Delete CompanyBankAccount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyBankAccount"
            }
          }
        },
        "tags": [
          "CompanyBankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CompanyBankAccount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyBankAccount"
            }
          }
        },
        "tags": [
          "CompanyBankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CompanyBankAccount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyBankAccount"
            }
          }
        },
        "tags": [
          "CompanyBankAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CompanyBankAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyBankAccount"
            }
          }
        ]
      }
    },
    "/companybankaccounts": {
      "get": {
        "description": "Query CompanyBankAccount",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CompanyBankAccount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CompanyBankAccount"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CompanyBankAccount",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CompanyBankAccount"
            }
          }
        },
        "tags": [
          "CompanyBankAccount"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CompanyBankAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompanyBankAccount"
            }
          }
        ]
      }
    },
    "/costallocations?action=create-journalentrylinesdrafts-from-supplier-costallocation": {
      "get": {
        "description": "create-journalentrylinesdrafts-from-supplier-costallocation Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryLineDraft"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CostAllocation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplierId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "useAccountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "currencyAmount",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "currencyCodeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "exchangeRate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "financialDate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "vatDate",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/costallocations?action=create-journalentrylinedrafts-from-account-costallocation": {
      "get": {
        "description": "create-journalentrylinedrafts-from-account-costallocation Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryLineDraft"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CostAllocation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "useAccountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "currencyAmount",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "currencyCodeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "exchangeRate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "financialDate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "vatDate",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/costallocations?action=create-journalentrylinedrafts-from-costallocation": {
      "get": {
        "description": "create-journalentrylinedrafts-from-costallocation Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryLineDraft"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CostAllocation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "costAllocationID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "useAccountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "currencyAmount",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "currencyCodeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "exchangeRate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "financialDate",
            "required": false,
            "schema": {}
          },
          {
            "in": "path",
            "name": "vatDate",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/costallocations/{id}": {
      "delete": {
        "description": "Delete CostAllocation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CostAllocation"
            }
          }
        },
        "tags": [
          "CostAllocation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CostAllocation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CostAllocation"
            }
          }
        },
        "tags": [
          "CostAllocation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CostAllocation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CostAllocation"
            }
          }
        },
        "tags": [
          "CostAllocation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CostAllocation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostAllocation"
            }
          }
        ]
      }
    },
    "/costallocations": {
      "get": {
        "description": "Query CostAllocation",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CostAllocation"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CostAllocation"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CostAllocation",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CostAllocation"
            }
          }
        },
        "tags": [
          "CostAllocation"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CostAllocation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostAllocation"
            }
          }
        ]
      }
    },
    "/costallocationitems/{id}": {
      "delete": {
        "description": "Delete CostAllocationItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CostAllocationItem"
            }
          }
        },
        "tags": [
          "CostAllocationItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CostAllocationItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CostAllocationItem"
            }
          }
        },
        "tags": [
          "CostAllocationItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CostAllocationItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CostAllocationItem"
            }
          }
        },
        "tags": [
          "CostAllocationItem"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CostAllocationItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostAllocationItem"
            }
          }
        ]
      }
    },
    "/costallocationitems": {
      "get": {
        "description": "Query CostAllocationItem",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CostAllocationItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CostAllocationItem"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CostAllocationItem",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CostAllocationItem"
            }
          }
        },
        "tags": [
          "CostAllocationItem"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CostAllocationItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostAllocationItem"
            }
          }
        ]
      }
    },
    "/liquiditypayment?action=getLiquidityTableData": {
      "get": {
        "description": "getLiquidityTableData Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/LiquidityTableDTO"
            }
          }
        },
        "tags": [
          "CustomLiquidityPayment"
        ],
        "parameters": []
      }
    },
    "/liquiditypayment/{id}": {
      "delete": {
        "description": "Delete CustomLiquidityPayment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomLiquidityPayment"
            }
          }
        },
        "tags": [
          "CustomLiquidityPayment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get CustomLiquidityPayment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomLiquidityPayment"
            }
          }
        },
        "tags": [
          "CustomLiquidityPayment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update CustomLiquidityPayment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CustomLiquidityPayment"
            }
          }
        },
        "tags": [
          "CustomLiquidityPayment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "CustomLiquidityPayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomLiquidityPayment"
            }
          }
        ]
      }
    },
    "/liquiditypayment": {
      "get": {
        "description": "Query CustomLiquidityPayment",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/CustomLiquidityPayment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "CustomLiquidityPayment"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create CustomLiquidityPayment",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/CustomLiquidityPayment"
            }
          }
        },
        "tags": [
          "CustomLiquidityPayment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "CustomLiquidityPayment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomLiquidityPayment"
            }
          }
        ]
      }
    },
    "/deadlines?action=get-all-filtered": {
      "get": {
        "description": "get-all-filtered Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "FinancialDeadline"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/deadlines?action=number-of-days-filtered": {
      "get": {
        "description": "number-of-days-filtered Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "FinancialDeadline"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "nrOfDays",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/deadlines/{id}": {
      "delete": {
        "description": "Delete FinancialDeadline",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FinancialDeadline"
            }
          }
        },
        "tags": [
          "FinancialDeadline"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get FinancialDeadline",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FinancialDeadline"
            }
          }
        },
        "tags": [
          "FinancialDeadline"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update FinancialDeadline",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FinancialDeadline"
            }
          }
        },
        "tags": [
          "FinancialDeadline"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "FinancialDeadline",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialDeadline"
            }
          }
        ]
      }
    },
    "/deadlines": {
      "get": {
        "description": "Query FinancialDeadline",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/FinancialDeadline"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "FinancialDeadline"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create FinancialDeadline",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/FinancialDeadline"
            }
          }
        },
        "tags": [
          "FinancialDeadline"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "FinancialDeadline",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialDeadline"
            }
          }
        ]
      }
    },
    "/financialyears?action=get-or-create-financial-year": {
      "get": {
        "description": "get-or-create-financial-year Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          }
        },
        "tags": [
          "FinancialYear"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/financialyears?action=create-financial-year": {
      "get": {
        "description": "create-financial-year Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          }
        },
        "tags": [
          "FinancialYear"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/financialyears/{id}": {
      "delete": {
        "description": "Delete FinancialYear",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          }
        },
        "tags": [
          "FinancialYear"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get FinancialYear",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          }
        },
        "tags": [
          "FinancialYear"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update FinancialYear",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          }
        },
        "tags": [
          "FinancialYear"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "FinancialYear",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          }
        ]
      }
    },
    "/financialyears": {
      "get": {
        "description": "Query FinancialYear",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/FinancialYear"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "FinancialYear"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create FinancialYear",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          }
        },
        "tags": [
          "FinancialYear"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "FinancialYear",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          }
        ]
      }
    },
    "/journalentries?action=get-or-create-financial-year": {
      "get": {
        "description": "get-or-create-financial-year Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FinancialYear"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "current",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/journalentries?action=get-journal-entry-data": {
      "get": {
        "description": "get-journal-entry-data Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryData"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "batchNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "journalEntryID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "supplierInvoiceID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "journalEntryDraftGroup",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/journalentries?action=delete-journal-entry-draft-group": {
      "delete": {
        "description": "delete-journal-entry-draft-group Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "journalEntryDraftGroup",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/journalentries?action=save-journal-entries-as-draft": {
      "post": {
        "description": "save-journal-entries-as-draft Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "journalEntries",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntry"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/journalentries?action=credit-journalentry": {
      "post": {
        "description": "credit-journalentry Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "journalEntryNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/journalentries?action=credit-journal-entry": {
      "post": {
        "description": "credit-journal-entry Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "journalEntryNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "creditDate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/journalentries?action=book-journal-entries": {
      "post": {
        "description": "book-journal-entries Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntry"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/journalentries?action=credit-and-book-journalentry": {
      "post": {
        "description": "credit-and-book-journalentry Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntry"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntry"
              },
              "type": "array"
            }
          },
          {
            "in": "path",
            "name": "journalEntryID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/journalentries?action=credit-and-book-journal-entry": {
      "post": {
        "description": "credit-and-book-journal-entry Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntry"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntry"
              },
              "type": "array"
            }
          },
          {
            "in": "path",
            "name": "journalEntryID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "creditDate",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/journalentries?action=nextjournalentrynumber": {
      "post": {
        "description": "nextjournalentrynumber Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/JournalEntryData"
            }
          }
        ]
      }
    },
    "/journalentries?action=get-journal-entry-period-data": {
      "get": {
        "description": "get-journal-entry-period-data Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryPeriodData"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/journalentries?action=book-journal-entry-against-payment": {
      "post": {
        "description": "book-journal-entry-against-payment Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "journalEntryID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "paymentID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/journalentries?action=book-payment-against-customer": {
      "put": {
        "description": "book-payment-against-customer Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "paymentID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "isBalanceKID",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/journalentries?action=book-payment-against-supplier": {
      "put": {
        "description": "book-payment-against-supplier Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplierID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "paymentID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/journalentries?action=book-payment-against-main-account": {
      "put": {
        "description": "book-payment-against-main-account Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "paymentID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/journalentries/{id}": {
      "delete": {
        "description": "Delete JournalEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get JournalEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update JournalEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "JournalEntry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        ]
      }
    },
    "/journalentries": {
      "get": {
        "description": "Query JournalEntry",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntry"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create JournalEntry",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "JournalEntry"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "JournalEntry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        ]
      }
    },
    "/journalentrylines?action=get-journal-entry-period-data": {
      "get": {
        "description": "get-journal-entry-period-data Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryLineRequestSummary"
            }
          }
        },
        "tags": [
          "JournalEntryLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "odataFilter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/journalentrylines?action=get-journal-entry-postpost-data": {
      "get": {
        "description": "get-journal-entry-postpost-data Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryLinePostPostData"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntryLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "includeOpenPosts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "includeMarkedPosts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "customerID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "supplierID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "pointInTime",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/journalentrylines/{id}?action=mark": {
      "post": {
        "description": "mark Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "JournalEntryLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/journalentrylines/{id}": {
      "get": {
        "description": "Get JournalEntryLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryLine"
            }
          }
        },
        "tags": [
          "JournalEntryLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update JournalEntryLine",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryLine"
            }
          }
        },
        "tags": [
          "JournalEntryLine"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "JournalEntryLine",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalEntryLine"
            }
          }
        ]
      }
    },
    "/journalentrylines": {
      "get": {
        "description": "Query JournalEntryLine",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryLine"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntryLine"
        ],
        "parameters": []
      }
    },
    "/journalentrylinedrafts/{id}": {
      "delete": {
        "description": "Delete JournalEntryLineDraft",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryLineDraft"
            }
          }
        },
        "tags": [
          "JournalEntryLineDraft"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get JournalEntryLineDraft",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryLineDraft"
            }
          }
        },
        "tags": [
          "JournalEntryLineDraft"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update JournalEntryLineDraft",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryLineDraft"
            }
          }
        },
        "tags": [
          "JournalEntryLineDraft"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "JournalEntryLineDraft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalEntryLineDraft"
            }
          }
        ]
      }
    },
    "/journalentrylinedrafts": {
      "get": {
        "description": "Query JournalEntryLineDraft",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryLineDraft"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntryLineDraft"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create JournalEntryLineDraft",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/JournalEntryLineDraft"
            }
          }
        },
        "tags": [
          "JournalEntryLineDraft"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "JournalEntryLineDraft",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalEntryLineDraft"
            }
          }
        ]
      }
    },
    "/journalEntryModes/{id}": {
      "delete": {
        "description": "Delete JournalEntryMode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryMode"
            }
          }
        },
        "tags": [
          "JournalEntryMode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get JournalEntryMode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryMode"
            }
          }
        },
        "tags": [
          "JournalEntryMode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update JournalEntryMode",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryMode"
            }
          }
        },
        "tags": [
          "JournalEntryMode"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "JournalEntryMode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalEntryMode"
            }
          }
        ]
      }
    },
    "/journalEntryModes": {
      "get": {
        "description": "Query JournalEntryMode",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryMode"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntryMode"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create JournalEntryMode",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/JournalEntryMode"
            }
          }
        },
        "tags": [
          "JournalEntryMode"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "JournalEntryMode",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JournalEntryMode"
            }
          }
        ]
      }
    },
    "/journalentrytypes/{id}": {
      "get": {
        "description": "Get JournalEntryType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntryType"
            }
          }
        },
        "tags": [
          "JournalEntryType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/journalentrytypes": {
      "get": {
        "description": "Query JournalEntryType",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "JournalEntryType"
        ],
        "parameters": []
      }
    },
    "/paymentbatches?action=generate-payment-file": {
      "put": {
        "description": "generate-payment-file Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=generate-receipt-file": {
      "put": {
        "description": "generate-receipt-file Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "xmlcontent",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=generate-pain002-file": {
      "put": {
        "description": "generate-pain002-file Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "xmlcontent",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "status",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/paymentbatches?action=register-receipt-file-pain002": {
      "put": {
        "description": "register-receipt-file-pain002 Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=register-receipt-file-camt054": {
      "put": {
        "description": "register-receipt-file-camt054 Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=register-receipt-file": {
      "put": {
        "description": "register-receipt-file Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=complete-registered-payments": {
      "put": {
        "description": "complete-registered-payments Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=revert-payment-batch": {
      "put": {
        "description": "revert-payment-batch Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "recreatePayments",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=send-batch-to-payment": {
      "put": {
        "description": "send-batch-to-payment Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentBatchApproveStatus"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "batchID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreatePaymentBatchDTO"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=create-and-send-to-payment": {
      "put": {
        "description": "create-and-send-to-payment Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentBatchApproveStatus"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreatePaymentBatchDTO"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=create-and-send-all-to-payment": {
      "put": {
        "description": "create-and-send-all-to-payment Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentBatchApproveStatus"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreatePaymentBatchDTO"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=update-payments-to-paid-and-journal-payments": {
      "put": {
        "description": "update-payments-to-paid-and-journal-payments Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Payment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paymentIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=update-all-payments-to-paid-and-journal-payments": {
      "put": {
        "description": "update-all-payments-to-paid-and-journal-payments Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "hash",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=update-payments-to-completed": {
      "put": {
        "description": "update-payments-to-completed Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Payment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paymentIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=approve": {
      "put": {
        "description": "approve Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentBatchApproveStatus"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=dismiss": {
      "put": {
        "description": "dismiss Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=update-all-payments-to-completed": {
      "put": {
        "description": "update-all-payments-to-completed Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "hash",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=generate-camt054C-string": {
      "put": {
        "description": "generate-camt054C-string Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerInvoiceNumbers",
            "required": false,
            "schema": {
              "items": {},
              "type": "string"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=generate-ocr-giro-string": {
      "put": {
        "description": "generate-ocr-giro-string Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerInvoiceNumbers",
            "required": false,
            "schema": {
              "items": {},
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "fromBankAccountNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "customEOLChar",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/paymentbatches?action=register-customer-payment-file": {
      "put": {
        "description": "register-customer-payment-file Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentBatch"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=complete-customer-payment-registration": {
      "put": {
        "description": "complete-customer-payment-registration Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentBatch"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=register-and-complete-customer-payment": {
      "put": {
        "description": "register-and-complete-customer-payment Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=register-payment-string": {
      "post": {
        "description": "register-payment-string Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentBatch"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paymentString",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/paymentbatches/{id}?action=complete-customer-paymentbatch": {
      "post": {
        "description": "complete-customer-paymentbatch Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=generate-avtalegiro-batch-for-invoice-numbers": {
      "put": {
        "description": "generate-avtalegiro-batch-for-invoice-numbers Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerInvoiceNumbers",
            "required": false,
            "schema": {
              "items": {},
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "isManual",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=generate-avtalegiro-batch-for-invoiceIDs": {
      "put": {
        "description": "generate-avtalegiro-batch-for-invoiceIDs Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerInvoiceIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "isManual",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "isMergeable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=generate-avtalegiro-batch-for-payments": {
      "put": {
        "description": "generate-avtalegiro-batch-for-payments Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paymentIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "isManual",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "isMergeable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=generate-avtalegiro-batch-for-invoiceIDs-and-paymentIDs": {
      "put": {
        "description": "generate-avtalegiro-batch-for-invoiceIDs-and-paymentIDs Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "avtaleGiroPaymentBatch",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateAvtaleGiroPaymentBatchDTO"
            }
          },
          {
            "in": "path",
            "name": "isManual",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "isMergeable",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=process-avtalegiro-receipt-file": {
      "put": {
        "description": "process-avtalegiro-receipt-file Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=process-avtalegiro-receipt-file-content": {
      "put": {
        "description": "process-avtalegiro-receipt-file-content Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "content",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "filename",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=get-statuses-from-file-ids": {
      "put": {
        "description": "get-statuses-from-file-ids Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches?action=get-file-statuses-from-file-ids": {
      "put": {
        "description": "get-file-statuses-from-file-ids Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/paymentbatches/{id}": {
      "delete": {
        "description": "Delete PaymentBatch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PaymentBatch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PaymentBatch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PaymentBatch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        ]
      }
    },
    "/paymentbatches": {
      "get": {
        "description": "Query PaymentBatch",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PaymentBatch"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PaymentBatch",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        },
        "tags": [
          "PaymentBatch"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PaymentBatch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        ]
      }
    },
    "/payments?action=create-payment-batch": {
      "post": {
        "description": "create-payment-batch Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PaymentBatch"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paymentIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "isManual",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "hash",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "createPaymentFile",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payments?action=create-payment-batch-for-all-payments": {
      "post": {
        "description": "create-payment-batch-for-all-payments Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "isManual",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "hash",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "createFile",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/payments?action=create-hash-for-payments": {
      "get": {
        "description": "create-hash-for-payments Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/payments?action=create-payment-with-tracelink": {
      "post": {
        "description": "create-payment-with-tracelink Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payment",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          {
            "in": "path",
            "name": "journalEntryID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payments?action=reset-payment": {
      "post": {
        "description": "reset-payment Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payment",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          {
            "in": "path",
            "name": "oldPaymentID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payments/{id}?action=force-delete": {
      "delete": {
        "description": "force-delete Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payments/{id}?action=delete-and-credit": {
      "delete": {
        "description": "delete-and-credit Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payments/{id}?action=force-delete-and-credit": {
      "delete": {
        "description": "force-delete-and-credit Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payments?action=batch-delete-and-credit-all": {
      "put": {
        "description": "batch-delete-and-credit-all Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "hash",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "credit",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payments?action=batch-delete-and-credit": {
      "put": {
        "description": "batch-delete-and-credit Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paymentIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "credit",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/payments?action=batch-cancel-payment-claims": {
      "put": {
        "description": "batch-cancel-payment-claims Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paymentIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payments?action=update-payments-to-ignored": {
      "put": {
        "description": "update-payments-to-ignored Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Payment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "paymentIDs",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/payments/{id}": {
      "delete": {
        "description": "Delete Payment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Payment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Payment",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Payment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ]
      }
    },
    "/payments": {
      "get": {
        "description": "Query Payment",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Payment"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Payment",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        },
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Payment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ]
      }
    },
    "/postposts?action=markposts": {
      "post": {
        "description": "markposts Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "journalEntryLineCouples",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/JournalEntryLineCouple"
              },
              "type": "array"
            }
          }
        ]
      }
    },
    "/postposts?action=revert-postpost": {
      "post": {
        "description": "revert-postpost Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "journalEntryLinesID",
            "required": false,
            "schema": {
              "items": {},
              "type": "integer"
            }
          }
        ]
      }
    },
    "/postposts?action=get-suggestions": {
      "get": {
        "description": "get-suggestions Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MarkingResult"
            }
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "methods",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "customerID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "supplierID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "accountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/postposts?action=reset-journalentryline-postpost-status-to-open": {
      "put": {
        "description": "reset-journalentryline-postpost-status-to-open Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "line",
            "required": false,
            "schema": {
              "$ref": "#/definitions/JournalEntryLine"
            }
          }
        ]
      }
    },
    "/postposts?action=reset-journalentrylines-postpost-status-to-open": {
      "put": {
        "description": "reset-journalentrylines-postpost-status-to-open Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subAccountID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "subAccountType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/postposts/{id}": {
      "delete": {
        "description": "Delete PostPost",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostPost"
            }
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get PostPost",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostPost"
            }
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update PostPost",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PostPost"
            }
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "PostPost",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostPost"
            }
          }
        ]
      }
    },
    "/postposts": {
      "get": {
        "description": "Query PostPost",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/PostPost"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create PostPost",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/PostPost"
            }
          }
        },
        "tags": [
          "PostPost"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "PostPost",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostPost"
            }
          }
        ]
      }
    },
    "/reinvoicing?action=mark-create": {
      "post": {
        "description": "mark-create Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplierInvoiceID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "reInvoice",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          },
          {
            "in": "path",
            "name": "reInvoiceType",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/reinvoicing/{id}?action=create-orders": {
      "put": {
        "description": "create-orders Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "reInvoice",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        ]
      }
    },
    "/reinvoicing/{id}?action=create-invoices-draft": {
      "put": {
        "description": "create-invoices-draft Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "reInvoice",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        ]
      }
    },
    "/reinvoicing/{id}?action=create-invoices": {
      "put": {
        "description": "create-invoices Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "reInvoice",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        ]
      }
    },
    "/reinvoicing?action=valid": {
      "put": {
        "description": "valid Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reInvoice",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        ]
      }
    },
    "/reinvoicing?action=valid-message": {
      "put": {
        "description": "valid-message Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reInvoice",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        ]
      }
    },
    "/reinvoicing?action=delete": {
      "put": {
        "description": "delete Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reInvoice",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        ]
      }
    },
    "/reinvoicing/{id}?action=delete": {
      "put": {
        "description": "delete Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/reinvoicing/{id}?action=allow-change": {
      "get": {
        "description": "allow-change Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/reinvoicing/{id}": {
      "delete": {
        "description": "Delete ReInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get ReInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update ReInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "ReInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        ]
      }
    },
    "/reinvoicing": {
      "get": {
        "description": "Query ReInvoice",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReInvoice"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create ReInvoice",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        },
        "tags": [
          "ReInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ReInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReInvoice"
            }
          }
        ]
      }
    },
    "/accounts/{accountid}/subaccounts/{id}": {
      "delete": {
        "description": "Delete Account",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Account",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Account",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ]
      }
    },
    "/accounts/{accountid}/subaccounts": {
      "get": {
        "description": "Query Account",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Account"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Account",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ]
      }
    },
    "/ledgersuggestions/{id}": {
      "get": {
        "description": "Get LedgerSuggestion",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/LedgerSuggestion"
            }
          }
        },
        "tags": [
          "LedgerSuggestion"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/ledgersuggestions": {
      "get": {
        "description": "Query LedgerSuggestion",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/LedgerSuggestion"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "LedgerSuggestion"
        ],
        "parameters": []
      }
    },
    "/supplierinvoices/{id}?action=smartbooking": {
      "put": {
        "description": "smartbooking Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=payInvoice": {
      "put": {
        "description": "payInvoice Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentData"
            }
          }
        ]
      }
    },
    "/supplierinvoices?action=credit-supplierinvoice-journalentry": {
      "post": {
        "description": "credit-supplierinvoice-journalentry Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplierInvoiceId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=assign": {
      "post": {
        "description": "assign Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=assign-to": {
      "post": {
        "description": "assign-to Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "details",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssignmentDetails"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=notify-approval-tasks": {
      "post": {
        "description": "notify-approval-tasks Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "daysToDueDate",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "redirectUrl",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=reAssign-to": {
      "post": {
        "description": "reAssign-to Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "details",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssignmentDetails"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=reject": {
      "put": {
        "description": "reject Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=reAssign": {
      "post": {
        "description": "reAssign Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=approve": {
      "post": {
        "description": "approve Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=rejectInvoice": {
      "post": {
        "description": "rejectInvoice Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=journal": {
      "post": {
        "description": "journal Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=finish": {
      "post": {
        "description": "finish Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=revertFinish": {
      "post": {
        "description": "revertFinish Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=sendForPayment": {
      "post": {
        "description": "sendForPayment Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=pay": {
      "post": {
        "description": "pay Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices?action=sendForPayment": {
      "put": {
        "description": "sendForPayment Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=sendForPaymentWithPaymentData": {
      "post": {
        "description": "sendForPaymentWithPaymentData Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "body",
            "name": "invoicePaymentData",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InvoicePaymentData"
            }
          }
        ]
      }
    },
    "/supplierinvoices?action=pay": {
      "put": {
        "description": "pay Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=rejectAssignment": {
      "post": {
        "description": "rejectAssignment Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=restore": {
      "post": {
        "description": "restore Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}?action=cancelApprovement": {
      "post": {
        "description": "cancelApprovement Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices?action=get-supplier-invoice-summary": {
      "get": {
        "description": "get-supplier-invoice-summary Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InvoiceSummary"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "odataFilter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/supplierinvoices?action=get-selfemployed-payments": {
      "get": {
        "description": "get-selfemployed-payments Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SelfEmployedItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/supplierinvoices?action=get-supplierinvoices-details": {
      "get": {
        "description": "get-supplierinvoices-details Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SupplierInvoiceDetail"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "supplierID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fromDate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          },
          {
            "in": "path",
            "name": "toDate",
            "required": false,
            "schema": {
              "type": "dateTime"
            }
          }
        ]
      }
    },
    "/supplierinvoices/{id}": {
      "delete": {
        "description": "Delete SupplierInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SupplierInvoice"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get SupplierInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SupplierInvoice"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update SupplierInvoice",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SupplierInvoice"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "SupplierInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierInvoice"
            }
          }
        ]
      }
    },
    "/supplierinvoices": {
      "get": {
        "description": "Query SupplierInvoice",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SupplierInvoice"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create SupplierInvoice",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/SupplierInvoice"
            }
          }
        },
        "tags": [
          "SupplierInvoice"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "SupplierInvoice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SupplierInvoice"
            }
          }
        ]
      }
    },
    "/vatcodegroups/{id}": {
      "delete": {
        "description": "Delete VatCodeGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatCodeGroup"
            }
          }
        },
        "tags": [
          "VatCodeGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VatCodeGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatCodeGroup"
            }
          }
        },
        "tags": [
          "VatCodeGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VatCodeGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatCodeGroup"
            }
          }
        },
        "tags": [
          "VatCodeGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VatCodeGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatCodeGroup"
            }
          }
        ]
      }
    },
    "/vatcodegroups": {
      "get": {
        "description": "Query VatCodeGroup",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatCodeGroup"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatCodeGroup"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VatCodeGroup",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VatCodeGroup"
            }
          }
        },
        "tags": [
          "VatCodeGroup"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VatCodeGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatCodeGroup"
            }
          }
        ]
      }
    },
    "/vatdeductions/{id}": {
      "delete": {
        "description": "Delete VatDeduction",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatDeduction"
            }
          }
        },
        "tags": [
          "VatDeduction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VatDeduction",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatDeduction"
            }
          }
        },
        "tags": [
          "VatDeduction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VatDeduction",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatDeduction"
            }
          }
        },
        "tags": [
          "VatDeduction"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VatDeduction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatDeduction"
            }
          }
        ]
      }
    },
    "/vatdeductions": {
      "get": {
        "description": "Query VatDeduction",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatDeduction"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatDeduction"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VatDeduction",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VatDeduction"
            }
          }
        },
        "tags": [
          "VatDeduction"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VatDeduction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatDeduction"
            }
          }
        ]
      }
    },
    "/vatdeductiongroups/{id}": {
      "delete": {
        "description": "Delete VatDeductionGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatDeductionGroup"
            }
          }
        },
        "tags": [
          "VatDeductionGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VatDeductionGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatDeductionGroup"
            }
          }
        },
        "tags": [
          "VatDeductionGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VatDeductionGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatDeductionGroup"
            }
          }
        },
        "tags": [
          "VatDeductionGroup"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VatDeductionGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatDeductionGroup"
            }
          }
        ]
      }
    },
    "/vatdeductiongroups": {
      "get": {
        "description": "Query VatDeductionGroup",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatDeductionGroup"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatDeductionGroup"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VatDeductionGroup",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VatDeductionGroup"
            }
          }
        },
        "tags": [
          "VatDeductionGroup"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VatDeductionGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatDeductionGroup"
            }
          }
        ]
      }
    },
    "/vatposts?action=get-vatposts-with-percentage": {
      "get": {
        "description": "get-vatposts-with-percentage Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatPost"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": false,
            "schema": {}
          }
        ]
      }
    },
    "/vatposts/{id}": {
      "delete": {
        "description": "Delete VatPost",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatPost"
            }
          }
        },
        "tags": [
          "VatPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VatPost",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatPost"
            }
          }
        },
        "tags": [
          "VatPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VatPost",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatPost"
            }
          }
        },
        "tags": [
          "VatPost"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VatPost",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatPost"
            }
          }
        ]
      }
    },
    "/vatposts": {
      "get": {
        "description": "Query VatPost",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatPost"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatPost"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VatPost",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VatPost"
            }
          }
        },
        "tags": [
          "VatPost"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VatPost",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatPost"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=control-vatreport": {
      "get": {
        "description": "control-vatreport Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatReportMessage"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports?action=validate-vatreports-for-financialyear": {
      "get": {
        "description": "validate-vatreports-for-financialyear Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ValidationMessage"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "financialYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary": {
      "get": {
        "description": "get-vat-report-summary Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatReportSummary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary-from-previous-periods": {
      "get": {
        "description": "get-vat-report-summary-from-previous-periods Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatReportSummary"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary-per-post": {
      "get": {
        "description": "get-vat-report-summary-per-post Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatReportSummaryPerPost"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary-per-post-per-account": {
      "get": {
        "description": "get-vat-report-summary-per-post-per-account Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatReportSummaryPerPostPerAccount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=get-vat-report-summary-per-post-per-account-details": {
      "get": {
        "description": "get-vat-report-summary-per-post-per-account-details Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatReportSummaryPerPostPerAccount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports?action=get-not-reported-journalentry-data": {
      "get": {
        "description": "get-not-reported-journalentry-data Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReportNotReportedJournalEntryData"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=execute": {
      "post": {
        "description": "execute Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=undo-execute": {
      "post": {
        "description": "undo-execute Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "vatReportId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=undo-execute-period": {
      "post": {
        "description": "undo-execute-period Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports?action=create-additional-vatreport": {
      "post": {
        "description": "create-additional-vatreport Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports?action=create-adjusted-vatreport": {
      "post": {
        "description": "create-adjusted-vatreport Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "periodID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports?action=get-signing-text-altinn": {
      "post": {
        "description": "get-signing-text-altinn Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnSigningTextResponse"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vatReportID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports?action=sign-vatreport-altinn": {
      "post": {
        "description": "sign-vatreport-altinn Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnSigning"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vatReportID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports?action=read-and-update-altinn-vatreport-data": {
      "post": {
        "description": "read-and-update-altinn-vatreport-data Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnGetVatReportDataFromAltinnResult"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vatReportID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=pay-vat": {
      "post": {
        "description": "pay-vat Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "vatReportID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports?action=current": {
      "get": {
        "description": "current Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": []
      }
    },
    "/vatreports/{id}?action=next": {
      "get": {
        "description": "next Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "periodid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=previous": {
      "get": {
        "description": "previous Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "periodid",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=reexecute": {
      "post": {
        "description": "reexecute Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=submit": {
      "post": {
        "description": "submit Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=approveManually": {
      "post": {
        "description": "approveManually Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=setToApproved": {
      "post": {
        "description": "setToApproved Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=reject": {
      "post": {
        "description": "reject Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=approve": {
      "post": {
        "description": "approve Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}?action=adjust": {
      "post": {
        "description": "adjust Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/vatreports/{id}": {
      "delete": {
        "description": "Delete VatReport",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VatReport",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VatReport",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VatReport",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        ]
      }
    },
    "/vatreports": {
      "get": {
        "description": "Query VatReport",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatReport"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VatReport",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        },
        "tags": [
          "VatReport"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VatReport",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatReport"
            }
          }
        ]
      }
    },
    "/vatreportreferences/{id}": {
      "delete": {
        "description": "Delete VatReportReference",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReportReference"
            }
          }
        },
        "tags": [
          "VatReportReference"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VatReportReference",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReportReference"
            }
          }
        },
        "tags": [
          "VatReportReference"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VatReportReference",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatReportReference"
            }
          }
        },
        "tags": [
          "VatReportReference"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VatReportReference",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatReportReference"
            }
          }
        ]
      }
    },
    "/vatreportreferences": {
      "get": {
        "description": "Query VatReportReference",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatReportReference"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatReportReference"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VatReportReference",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VatReportReference"
            }
          }
        },
        "tags": [
          "VatReportReference"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VatReportReference",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatReportReference"
            }
          }
        ]
      }
    },
    "/vattypes/{id}?action=vatcode": {
      "get": {
        "description": "vatcode Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatType"
            }
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/vattypes?action=valid": {
      "get": {
        "description": "valid Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": []
      }
    },
    "/vattypes?action=valid-with-hidden": {
      "get": {
        "description": "valid-with-hidden Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": []
      }
    },
    "/vattypes/{id}?action=lock": {
      "put": {
        "description": "lock Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/vattypes/{id}?action=unlock": {
      "put": {
        "description": "unlock Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/vattypes/{id}?action=visible": {
      "put": {
        "description": "visible Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/vattypes/{id}?action=hidden": {
      "put": {
        "description": "hidden Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/vattypes?action=synchronize": {
      "put": {
        "description": "synchronize Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": []
      }
    },
    "/vattypes/{id}": {
      "delete": {
        "description": "Delete VatType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatType"
            }
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get VatType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatType"
            }
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update VatType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VatType"
            }
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "VatType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatType"
            }
          }
        ]
      }
    },
    "/vattypes": {
      "get": {
        "description": "Query VatType",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/VatType"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create VatType",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/VatType"
            }
          }
        },
        "tags": [
          "VatType"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VatType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VatType"
            }
          }
        ]
      }
    },
    "/reconcile?action=create-reconcile": {
      "post": {
        "description": "create-reconcile Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Reconcile"
            }
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reconcileTypeID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "accountYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "intervalNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/reconcile?action=AddAccountsToReconcile": {
      "put": {
        "description": "AddAccountsToReconcile Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Reconcile"
            }
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reconcileID",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/reconcile/{id}?action=BeginReconcile": {
      "post": {
        "description": "BeginReconcile Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/reconcile/{id}?action=CompleteReconcile": {
      "post": {
        "description": "CompleteReconcile Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/reconcile/{id}?action=ReopenReconcile": {
      "post": {
        "description": "ReopenReconcile Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/reconcile?action=ApproveReconcileAccount": {
      "put": {
        "description": "ApproveReconcileAccount Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ReconcileAccount"
            }
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "reconcileAccount",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "comment",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/reconcile/{id}": {
      "delete": {
        "description": "Delete Reconcile",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Reconcile"
            }
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get Reconcile",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Reconcile"
            }
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update Reconcile",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Reconcile"
            }
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "Reconcile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reconcile"
            }
          }
        ]
      }
    },
    "/reconcile": {
      "get": {
        "description": "Query Reconcile",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Reconcile"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create Reconcile",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Reconcile"
            }
          }
        },
        "tags": [
          "Reconcile"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Reconcile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reconcile"
            }
          }
        ]
      }
    },
    "/annualaccounts?action=create": {
      "post": {
        "description": "create Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccount"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "annualSettlementId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualaccounts/{id}?action=send": {
      "put": {
        "description": "send Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AltinnReceipt"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/annualaccounts?action=report": {
      "get": {
        "description": "report Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccountReport"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualaccounts/{id}?action=generate-report": {
      "post": {
        "description": "generate-report Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "force",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/annualaccounts/{id}?action=reopen": {
      "post": {
        "description": "reopen Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccount"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      }
    },
    "/annualaccounts?action=get-sentstatus": {
      "get": {
        "description": "get-sentstatus Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "annualSettlementId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualaccounts/{id}": {
      "delete": {
        "description": "Delete AnnualAccount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccount"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AnnualAccount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccount"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AnnualAccount",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualAccount"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AnnualAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnualAccount"
            }
          }
        ]
      }
    },
    "/annualaccounts": {
      "get": {
        "description": "Query AnnualAccount",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AnnualAccount"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AnnualAccount",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AnnualAccount"
            }
          }
        },
        "tags": [
          "AnnualAccount"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AnnualAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnualAccount"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=OneToStepTwo": {
      "post": {
        "description": "OneToStepTwo Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=TwoToStepThree": {
      "post": {
        "description": "TwoToStepThree Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=ThreeToStepFour": {
      "post": {
        "description": "ThreeToStepFour Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=FourToStepFive": {
      "post": {
        "description": "FourToStepFive Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=FourToStepSix": {
      "post": {
        "description": "FourToStepSix Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=FiveToStepSix": {
      "post": {
        "description": "FiveToStepSix Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=SixToStepFive": {
      "post": {
        "description": "SixToStepFive Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=FiveToComplete": {
      "post": {
        "description": "FiveToComplete Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=SixToComplete": {
      "post": {
        "description": "SixToComplete Transition",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement?action=journal-electronic-communication-enk": {
      "post": {
        "description": "journal-electronic-communication-enk Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/JournalEComDTO"
            }
          }
        ]
      }
    },
    "/annualsettlement?action=get-account-balance": {
      "get": {
        "description": "get-account-balance Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fromAccountNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toAccountNumber",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "toFinancialyear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-account-sum-calculative-depreciation": {
      "get": {
        "description": "get-account-sum-calculative-depreciation Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement?action=get-account-missing-saft-or-altinn-link": {
      "get": {
        "description": "get-account-missing-saft-or-altinn-link Action",
        "responses": {
          "200": {
            "schema": {
              "type": "integer"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "toFinancialYear",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-accounts-not-linked": {
      "get": {
        "description": "get-accounts-not-linked Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=reset-annualsettlement": {
      "put": {
        "description": "reset-annualsettlement Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=calculate-result": {
      "get": {
        "description": "calculate-result Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=preview-annualsettlement-journalentry": {
      "get": {
        "description": "preview-annualsettlement-journalentry Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=generate-annualsettlement-journalentry": {
      "get": {
        "description": "generate-annualsettlement-journalentry Action",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-tax-calculation-and-disposal": {
      "get": {
        "description": "get-tax-calculation-and-disposal Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AnnualSettlementDisposalDisplayItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-asset-taxbased-IB-details": {
      "get": {
        "description": "get-asset-taxbased-IB-details Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AssetTaxbasedIB"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-asset-and-groups": {
      "get": {
        "description": "get-asset-and-groups Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AssetTaxbasedIB"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement?action=update-taxbased-IB": {
      "put": {
        "description": "update-taxbased-IB Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AssetTaxbasedIB"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "atb",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/AssetTaxbasedIB"
              },
              "type": "array"
            }
          },
          {
            "in": "path",
            "name": "calculate",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/annualsettlement?action=get-empty-transport-field-record": {
      "get": {
        "description": "get-empty-transport-field-record Action",
        "responses": {
          "200": {
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": []
      }
    },
    "/annualsettlement?action=get-stock-accounts-IB-and-UB": {
      "get": {
        "description": "get-stock-accounts-IB-and-UB Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AnnualSettlementAccountIBAndUBDisplayItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=calculate-max-dividend-amount": {
      "get": {
        "description": "calculate-max-dividend-amount Action",
        "responses": {
          "200": {
            "schema": {}
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-sentstatus": {
      "get": {
        "description": "get-sentstatus Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=valider-skattemelding": {
      "get": {
        "description": "valider-skattemelding Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-beregnet-skatt": {
      "get": {
        "description": "get-beregnet-skatt Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ReportElement"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-avvik-etterberegning": {
      "get": {
        "description": "get-avvik-etterberegning Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Avviksforekomst"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-veiledning": {
      "get": {
        "description": "get-veiledning Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Veiledningsforekomst"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-veiledning-feil": {
      "get": {
        "description": "get-veiledning-feil Action",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Veiledningsforekomst"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}?action=get-tilbakemelding": {
      "get": {
        "description": "get-tilbakemelding Action",
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/annualsettlement?action=check-if-company-is-on-allowlist": {
      "get": {
        "description": "check-if-company-is-on-allowlist Action",
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fnr",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/annualsettlement/{id}": {
      "delete": {
        "description": "Delete AnnualSettlement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualSettlement"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "get": {
        "description": "Get AnnualSettlement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualSettlement"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "description": "Update AnnualSettlement",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AnnualSettlement"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "AnnualSettlement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnualSettlement"
            }
          }
        ]
      }
    },
    "/annualsettlement": {
      "get": {
        "description": "Query AnnualSettlement",
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/AnnualSettlement"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": []
      },
      "post": {
        "description": "Create AnnualSettlement",
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/AnnualSettlement"
            }
          }
        },
        "tags": [
          "AnnualSettlement"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AnnualSettlement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnualSettlement"
            }
          }
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "basePath": "/api/biz"
}
